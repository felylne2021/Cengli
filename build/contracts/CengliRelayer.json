{
  "contractName": "CengliRelayer",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarderAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "sweepTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "sweepEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarderAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"sweepEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"sweepTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CengliRelayer.sol\":\"CengliRelayer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x3cf982133d4c9c92e6cd0f3dd8399791b7858c09dfe6ab5c6073e7f24475aa78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb2e41b4db6b6020a4406b0bc1c3e959554321650a392c30ee506e464abe6f27\",\"dweb:/ipfs/QmerRLZmojENXg816AjVBwmjWpUFUHPTGFboirRCotZr3L\"]},\"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol\":{\"keccak256\":\"0xd7efed2df83914cb6354b0ecddbabbf1cd0b7263bbec797a31e2251d3bf1c5e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7474f3651acee5c62a1c360f11c8718e5680a9f050fbec1ca82796402b528314\",\"dweb:/ipfs/QmW3vpvTcARQnbbQgJ8B7zrZeqRJ7xifKD5egivq2EBbBY\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"project:/contracts/CengliRelayer.sol\":{\"keccak256\":\"0xbd958be02bf680a90281952e3fefbe0cde0bc312a47585fcc0c721bf977e9b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01d7491ccd0a29ccf3874ae56fc265597e17492e1b36c595152a8d89e155c0e7\",\"dweb:/ipfs/QmbdqkBhTHtKHPU6SvUV7MtTBVqSZYcrexNEP6JanWRS8G\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561000f575f80fd5b5060405161060f38038061060f83398101604081905261002e91610142565b338061005457604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61005d81610088565b50600180546001600160a01b0319166001600160a01b038316179055610082336100d7565b5061016f565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100df610114565b6001600160a01b03811661010857604051631e4fbdf760e01b81525f600482015260240161004b565b61011181610088565b50565b5f546001600160a01b031633146101405760405163118cdaa760e01b815233600482015260240161004b565b565b5f60208284031215610152575f80fd5b81516001600160a01b0381168114610168575f80fd5b9392505050565b6104938061017c5f395ff3fe608060405234801561000f575f80fd5b506004361061006f575f3560e01c8063715018a61161004d578063715018a6146100ae5780638da5cb5b146100b6578063f2fde38b146100d0575f80fd5b80631609be1d146100735780633408e47014610088578063475cae3d1461009b575b5f80fd5b6100866100813660046103ce565b6100e3565b005b6040514681526020015b60405180910390f35b6100866100a9366004610405565b6101fd565b6100866102a5565b5f546040516001600160a01b039091168152602001610092565b6100866100de366004610405565b6102b8565b6100eb61030e565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0383169063a9059cbb90839083906370a0823190602401602060405180830381865afa158015610150573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101749190610427565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303815f875af11580156101d4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101f8919061043e565b505050565b61020561030e565b4780610272576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f43656e676c6952656c617965723a206e6f20657468657220746f20737765657060448201526064015b60405180910390fd5b6040516001600160a01b0383169082156108fc029083905f818181858888f193505050501580156101f8573d5f803e3d5ffd5b6102ad61030e565b6102b65f610353565b565b6102c061030e565b6001600160a01b038116610302576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152602401610269565b61030b81610353565b50565b5f546001600160a01b031633146102b6576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610269565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461030b575f80fd5b5f80604083850312156103df575f80fd5b82356103ea816103ba565b915060208301356103fa816103ba565b809150509250929050565b5f60208284031215610415575f80fd5b8135610420816103ba565b9392505050565b5f60208284031215610437575f80fd5b5051919050565b5f6020828403121561044e575f80fd5b81518015158114610420575f80fdfea26469706673582212207f126340c19db37d29ead15bab494e8fa38cceed2812c1f3db187f458c74254264736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561000f575f80fd5b506004361061006f575f3560e01c8063715018a61161004d578063715018a6146100ae5780638da5cb5b146100b6578063f2fde38b146100d0575f80fd5b80631609be1d146100735780633408e47014610088578063475cae3d1461009b575b5f80fd5b6100866100813660046103ce565b6100e3565b005b6040514681526020015b60405180910390f35b6100866100a9366004610405565b6101fd565b6100866102a5565b5f546040516001600160a01b039091168152602001610092565b6100866100de366004610405565b6102b8565b6100eb61030e565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0383169063a9059cbb90839083906370a0823190602401602060405180830381865afa158015610150573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101749190610427565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303815f875af11580156101d4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101f8919061043e565b505050565b61020561030e565b4780610272576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f43656e676c6952656c617965723a206e6f20657468657220746f20737765657060448201526064015b60405180910390fd5b6040516001600160a01b0383169082156108fc029083905f818181858888f193505050501580156101f8573d5f803e3d5ffd5b6102ad61030e565b6102b65f610353565b565b6102c061030e565b6001600160a01b038116610302576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152602401610269565b61030b81610353565b50565b5f546001600160a01b031633146102b6576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610269565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461030b575f80fd5b5f80604083850312156103df575f80fd5b82356103ea816103ba565b915060208301356103fa816103ba565b809150509250929050565b5f60208284031215610415575f80fd5b8135610420816103ba565b9392505050565b5f60208284031215610437575f80fd5b5051919050565b5f6020828403121561044e575f80fd5b81518015158114610420575f80fdfea26469706673582212207f126340c19db37d29ead15bab494e8fa38cceed2812c1f3db187f458c74254264736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:514:18",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:18",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:18"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:18"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:18"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:18",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:18",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:18",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:18"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:18"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:18",
                "type": ""
              }
            ],
            "src": "14:290:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "410:102:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "420:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "432:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "443:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "428:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "428:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "420:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "462:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "477:6:18"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "493:3:18",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "498:1:18",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "489:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "489:11:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "502:1:18",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "485:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "485:19:18"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "473:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "473:32:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "455:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "455:51:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "455:51:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "379:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "390:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "401:4:18",
                "type": ""
              }
            ],
            "src": "309:203:18"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 18,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2676:18",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:18",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:109:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "154:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "163:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "166:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "156:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "156:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "156:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "90:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "101:5:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "108:42:18",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "97:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "97:54:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "87:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "87:65:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "80:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "80:73:18"
                  },
                  "nodeType": "YulIf",
                  "src": "77:93:18"
                }
              ]
            },
            "name": "validator_revert_contract_IERC20",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "56:5:18",
                "type": ""
              }
            ],
            "src": "14:162:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "282:317:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "328:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "337:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "340:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "330:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "330:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "330:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "303:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "312:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "299:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "299:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "324:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "295:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "295:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "292:52:18"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "353:36:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "379:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "366:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "366:23:18"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "357:5:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "431:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "398:32:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "398:39:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "398:39:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "446:15:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "456:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "446:6:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "470:47:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "502:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "513:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "498:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "498:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "485:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "485:32:18"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "474:7:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "559:7:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "526:32:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "526:41:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "526:41:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "576:17:18",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "586:7:18"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "576:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$862t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "240:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "251:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "263:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "271:6:18",
                "type": ""
              }
            ],
            "src": "181:418:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "705:76:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "715:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "727:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "738:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "723:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "723:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "715:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "757:9:18"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "768:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "750:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "750:25:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "750:25:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "674:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "685:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "696:4:18",
                "type": ""
              }
            ],
            "src": "604:177:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "864:185:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "910:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "919:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "922:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "912:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "912:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "912:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "885:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "894:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "881:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "881:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "906:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "877:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "877:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "874:52:18"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "935:36:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "961:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "948:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "948:23:18"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "939:5:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1013:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "980:32:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:39:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "980:39:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1028:15:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1038:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1028:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "830:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "841:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "853:6:18",
                "type": ""
              }
            ],
            "src": "786:263:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1155:125:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1165:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1177:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1188:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1173:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1173:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1165:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1207:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1222:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1230:42:18",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1218:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1218:55:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1200:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1200:74:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1200:74:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1124:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1135:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1146:4:18",
                "type": ""
              }
            ],
            "src": "1054:226:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1355:185:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1401:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1410:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1413:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1403:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1403:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1403:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1376:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1385:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1372:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1372:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1397:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1368:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1368:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "1365:52:18"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1426:36:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1452:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1439:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1439:23:18"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1430:5:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1504:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "1471:32:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1471:39:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1471:39:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1519:15:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1529:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1519:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1321:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1332:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1344:6:18",
                "type": ""
              }
            ],
            "src": "1285:255:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1626:103:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1672:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1681:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1684:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1674:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1674:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1674:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1647:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1656:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1643:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1643:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1668:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1639:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1639:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "1636:52:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1697:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1713:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1707:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1707:16:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1697:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1592:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1603:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1615:6:18",
                "type": ""
              }
            ],
            "src": "1545:184:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1863:168:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1873:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1885:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1896:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1881:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1881:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1873:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1915:9:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1930:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1938:42:18",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1926:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1926:55:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1908:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1908:74:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1908:74:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2002:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2013:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1998:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1998:18:18"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2018:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1991:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1991:34:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1991:34:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1824:9:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1835:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1843:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1854:4:18",
                "type": ""
              }
            ],
            "src": "1734:297:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2114:199:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2160:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2169:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2172:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2162:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2162:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2162:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2135:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2144:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2131:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2131:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2156:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2127:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2127:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "2124:52:18"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2185:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2204:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2198:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2198:16:18"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2189:5:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2267:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2276:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2279:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2269:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2269:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2269:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2236:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2257:5:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2250:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2250:13:18"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2243:6:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2243:21:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2233:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2233:32:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2226:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2226:40:18"
                  },
                  "nodeType": "YulIf",
                  "src": "2223:60:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2292:15:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2302:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2292:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2080:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2091:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2103:6:18",
                "type": ""
              }
            ],
            "src": "2036:277:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2492:182:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2509:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2520:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2502:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2502:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2502:21:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2543:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2554:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2539:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2539:18:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2559:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2532:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2532:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2532:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2582:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2593:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2578:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2578:18:18"
                      },
                      {
                        "hexValue": "43656e676c6952656c617965723a206e6f20657468657220746f207377656570",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2598:34:18",
                        "type": "",
                        "value": "CengliRelayer: no ether to sweep"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2571:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2571:62:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2571:62:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2642:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2654:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2665:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2650:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2650:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2642:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c2f1efb15161bd89be4f00edbbc0b928abe3ecb7f27a2b9311ee2704e34bdfa9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2469:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2483:4:18",
                "type": ""
              }
            ],
            "src": "2318:356:18"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$862t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_c2f1efb15161bd89be4f00edbbc0b928abe3ecb7f27a2b9311ee2704e34bdfa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"CengliRelayer: no ether to sweep\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 18,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "231:697:17:-:0;;;312:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;358:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:18;428:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;380:9:17::1;:46:::0;;-1:-1:-1;;;;;;380:46:17::1;-1:-1:-1::0;;;;;380:46:17;::::1;;::::0;;436:29:::1;454:10;436:17;:29::i;:::-;312:160:::0;231:697;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;2543:215::-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;455:51:18::0;428:18;;2672:31:0::1;309:203:18::0;2623:91:0::1;2723:28;2742:8:::0;2723:18:::1;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:6;1901:40:0;;;455:51:18;428:18;;1901:40:0;309:203:18;1851:101:0;1796:162::o;14:290:18:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:18;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:18:o;309:203::-;231:697:17;;;;;;",
  "deployedSourceMap": "231:697:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;478:133;;;;;;:::i;:::-;;:::i;:::-;;835:91;;;906:13;750:25:18;;738:2;723:18;835:91:17;;;;;;;;617:212;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;1638:85::-;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;1200:74:18;;1188:2;1173:18;1638:85:0;1054:226:18;2543:215:0;;;;;;:::i;:::-;;:::i;478:133:17:-;1531:13:0;:11;:13::i;:::-;573:30:17::1;::::0;;;;597:4:::1;573:30;::::0;::::1;1200:74:18::0;-1:-1:-1;;;;;554:14:17;::::1;::::0;::::1;::::0;569:2;;554:14;;573:15:::1;::::0;1173:18:18;;573:30:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;554:50;::::0;;::::1;::::0;;;;;;-1:-1:-1;;;;;1926:55:18;;;554:50:17::1;::::0;::::1;1908:74:18::0;1998:18;;;1991:34;1881:18;;554:50:17::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;478:133:::0;;:::o;617:212::-;1531:13:0;:11;:13::i;:::-;704:21:17::1;744:11:::0;736:56:::1;;;::::0;::::1;::::0;;2520:2:18;736:56:17::1;::::0;::::1;2502:21:18::0;;;2539:18;;;2532:30;2598:34;2578:18;;;2571:62;2650:18;;736:56:17::1;;;;;;;;;802:20;::::0;-1:-1:-1;;;;;802:11:17;::::1;::::0;:20;::::1;;;::::0;814:7;;802:20:::1;::::0;;;814:7;802:11;:20;::::1;;;;;;;;;;;;;::::0;::::1;;;;2293:101:0::0;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2543:215::-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;::::1;::::0;;2700:1:::1;2672:31;::::0;::::1;1200:74:18::0;1173:18;;2672:31:0::1;1054:226:18::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;;;;735:10:6;1901:40:0;;;1200:74:18;1173:18;;1901:40:0;1054:226:18;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;;;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:162:18:-;-1:-1:-1;;;;;101:5:18;97:54;90:5;87:65;77:93;;166:1;163;156:12;181:418;263:6;271;324:2;312:9;303:7;299:23;295:32;292:52;;;340:1;337;330:12;292:52;379:9;366:23;398:39;431:5;398:39;:::i;:::-;456:5;-1:-1:-1;513:2:18;498:18;;485:32;526:41;485:32;526:41;:::i;:::-;586:7;576:17;;;181:418;;;;;:::o;786:263::-;853:6;906:2;894:9;885:7;881:23;877:32;874:52;;;922:1;919;912:12;874:52;961:9;948:23;980:39;1013:5;980:39;:::i;:::-;1038:5;786:263;-1:-1:-1;;;786:263:18:o;1545:184::-;1615:6;1668:2;1656:9;1647:7;1643:23;1639:32;1636:52;;;1684:1;1681;1674:12;1636:52;-1:-1:-1;1707:16:18;;1545:184;-1:-1:-1;1545:184:18:o;2036:277::-;2103:6;2156:2;2144:9;2135:7;2131:23;2127:32;2124:52;;;2172:1;2169;2162:12;2124:52;2204:9;2198:16;2257:5;2250:13;2243:21;2236:5;2233:32;2223:60;;2279:1;2276;2269:12",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract CengliRelayer is Ownable {\n    ERC2771Forwarder private forwarder;\n\n    constructor(address forwarderAddress) Ownable(msg.sender) {\n        forwarder = ERC2771Forwarder(forwarderAddress);\n        transferOwnership(msg.sender);\n    }\n\n    function sweepTokens(IERC20 token, address to) external onlyOwner {\n        token.transfer(to, token.balanceOf(address(this)));\n    }\n\n    function sweepEther(address payable to) external onlyOwner {\n        uint256 balance = address(this).balance;\n\n        require(balance > 0, \"CengliRelayer: no ether to sweep\");\n        to.transfer(balance);\n    }\n\n    function getChainId() external view returns (uint256) {\n        return block.chainid;\n    }\n}\n",
  "sourcePath": "/Users/kelvinadithya/Desktop/ETHOnline-2023/Cengli/Cengli 2/contracts/CengliRelayer.sol",
  "ast": {
    "absolutePath": "project:/contracts/CengliRelayer.sol",
    "exportedSymbols": {
      "Address": [
        1115
      ],
      "CengliRelayer": [
        3702
      ],
      "Context": [
        1137
      ],
      "ECDSA": [
        2135
      ],
      "EIP712": [
        2362
      ],
      "ERC2771Context": [
        277
      ],
      "ERC2771Forwarder": [
        784
      ],
      "IERC20": [
        862
      ],
      "Nonces": [
        1205
      ],
      "Ownable": [
        147
      ]
    },
    "id": 3703,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3610,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:17"
      },
      {
        "absolutePath": "@openzeppelin/contracts/metatx/ERC2771Forwarder.sol",
        "file": "@openzeppelin/contracts/metatx/ERC2771Forwarder.sol",
        "id": 3611,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3703,
        "sourceUnit": 785,
        "src": "58:61:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3612,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3703,
        "sourceUnit": 148,
        "src": "120:52:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3613,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3703,
        "sourceUnit": 863,
        "src": "173:56:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3614,
              "name": "Ownable",
              "nameLocations": [
                "257:7:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 147,
              "src": "257:7:17"
            },
            "id": 3615,
            "nodeType": "InheritanceSpecifier",
            "src": "257:7:17"
          }
        ],
        "canonicalName": "CengliRelayer",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3702,
        "linearizedBaseContracts": [
          3702,
          147,
          1137
        ],
        "name": "CengliRelayer",
        "nameLocation": "240:13:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3618,
            "mutability": "mutable",
            "name": "forwarder",
            "nameLocation": "296:9:17",
            "nodeType": "VariableDeclaration",
            "scope": 3702,
            "src": "271:34:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC2771Forwarder_$784",
              "typeString": "contract ERC2771Forwarder"
            },
            "typeName": {
              "id": 3617,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3616,
                "name": "ERC2771Forwarder",
                "nameLocations": [
                  "271:16:17"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 784,
                "src": "271:16:17"
              },
              "referencedDeclaration": 784,
              "src": "271:16:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC2771Forwarder_$784",
                "typeString": "contract ERC2771Forwarder"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3638,
              "nodeType": "Block",
              "src": "370:102:17",
              "statements": [
                {
                  "expression": {
                    "id": 3631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3627,
                      "name": "forwarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3618,
                      "src": "380:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC2771Forwarder_$784",
                        "typeString": "contract ERC2771Forwarder"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3629,
                          "name": "forwarderAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3620,
                          "src": "409:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3628,
                        "name": "ERC2771Forwarder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 784,
                        "src": "392:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771Forwarder_$784_$",
                          "typeString": "type(contract ERC2771Forwarder)"
                        }
                      },
                      "id": 3630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "392:34:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC2771Forwarder_$784",
                        "typeString": "contract ERC2771Forwarder"
                      }
                    },
                    "src": "380:46:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC2771Forwarder_$784",
                      "typeString": "contract ERC2771Forwarder"
                    }
                  },
                  "id": 3632,
                  "nodeType": "ExpressionStatement",
                  "src": "380:46:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3634,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "454:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "458:6:17",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "454:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3633,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 126,
                      "src": "436:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "436:29:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3637,
                  "nodeType": "ExpressionStatement",
                  "src": "436:29:17"
                }
              ]
            },
            "id": 3639,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3623,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "358:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 3624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "362:6:17",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "358:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3625,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3622,
                  "name": "Ownable",
                  "nameLocations": [
                    "350:7:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "350:7:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "350:19:17"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3620,
                  "mutability": "mutable",
                  "name": "forwarderAddress",
                  "nameLocation": "332:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3639,
                  "src": "324:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "323:26:17"
            },
            "returnParameters": {
              "id": 3626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "370:0:17"
            },
            "scope": 3702,
            "src": "312:160:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3662,
              "nodeType": "Block",
              "src": "544:67:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3652,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3644,
                        "src": "569:2:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 3657,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "597:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CengliRelayer_$3702",
                                  "typeString": "contract CengliRelayer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CengliRelayer_$3702",
                                  "typeString": "contract CengliRelayer"
                                }
                              ],
                              "id": 3656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "589:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3655,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "589:7:17",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "589:13:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3653,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3642,
                            "src": "573:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$862",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 3654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "579:9:17",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 819,
                          "src": "573:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 3659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "573:30:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3649,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3642,
                        "src": "554:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$862",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "560:8:17",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 829,
                      "src": "554:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "554:50:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3661,
                  "nodeType": "ExpressionStatement",
                  "src": "554:50:17"
                }
              ]
            },
            "functionSelector": "1609be1d",
            "id": 3663,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3647,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3646,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "534:9:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "534:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "534:9:17"
              }
            ],
            "name": "sweepTokens",
            "nameLocation": "487:11:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3642,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "506:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "499:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$862",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 3641,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3640,
                      "name": "IERC20",
                      "nameLocations": [
                        "499:6:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 862,
                      "src": "499:6:17"
                    },
                    "referencedDeclaration": 862,
                    "src": "499:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$862",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3644,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "521:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3663,
                  "src": "513:10:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "498:26:17"
            },
            "returnParameters": {
              "id": 3648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "544:0:17"
            },
            "scope": 3702,
            "src": "478:133:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3691,
              "nodeType": "Block",
              "src": "676:153:17",
              "statements": [
                {
                  "assignments": [
                    3671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3671,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "694:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 3691,
                      "src": "686:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3670,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "686:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3677,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3674,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "712:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CengliRelayer_$3702",
                            "typeString": "contract CengliRelayer"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CengliRelayer_$3702",
                            "typeString": "contract CengliRelayer"
                          }
                        ],
                        "id": 3673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "704:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3672,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "704:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "704:13:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "718:7:17",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "704:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "686:39:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3679,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3671,
                          "src": "744:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "754:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "744:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43656e676c6952656c617965723a206e6f20657468657220746f207377656570",
                        "id": 3682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "757:34:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2f1efb15161bd89be4f00edbbc0b928abe3ecb7f27a2b9311ee2704e34bdfa9",
                          "typeString": "literal_string \"CengliRelayer: no ether to sweep\""
                        },
                        "value": "CengliRelayer: no ether to sweep"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2f1efb15161bd89be4f00edbbc0b928abe3ecb7f27a2b9311ee2704e34bdfa9",
                          "typeString": "literal_string \"CengliRelayer: no ether to sweep\""
                        }
                      ],
                      "id": 3678,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "736:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "736:56:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3684,
                  "nodeType": "ExpressionStatement",
                  "src": "736:56:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3688,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3671,
                        "src": "814:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3685,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3665,
                        "src": "802:2:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "805:8:17",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "802:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "802:20:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3690,
                  "nodeType": "ExpressionStatement",
                  "src": "802:20:17"
                }
              ]
            },
            "functionSelector": "475cae3d",
            "id": 3692,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3668,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3667,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "666:9:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "666:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "666:9:17"
              }
            ],
            "name": "sweepEther",
            "nameLocation": "626:10:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3665,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "653:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3692,
                  "src": "637:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3664,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:15:17",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "636:20:17"
            },
            "returnParameters": {
              "id": 3669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "676:0:17"
            },
            "scope": 3702,
            "src": "617:212:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3700,
              "nodeType": "Block",
              "src": "889:37:17",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 3697,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967292,
                      "src": "906:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 3698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "912:7:17",
                    "memberName": "chainid",
                    "nodeType": "MemberAccess",
                    "src": "906:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3696,
                  "id": 3699,
                  "nodeType": "Return",
                  "src": "899:20:17"
                }
              ]
            },
            "functionSelector": "3408e470",
            "id": 3701,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainId",
            "nameLocation": "844:10:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "854:2:17"
            },
            "returnParameters": {
              "id": 3696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3695,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3701,
                  "src": "880:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3694,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "879:9:17"
            },
            "scope": 3702,
            "src": "835:91:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3703,
        "src": "231:697:17",
        "usedErrors": [
          13,
          18
        ],
        "usedEvents": [
          24
        ]
      }
    ],
    "src": "32:897:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {
    "5": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x921fe38Ee1c2B6bfFE4e7b343e5b4192108Dc5ba",
      "transactionHash": "0xd75740341227339d7fe4d2873ee2e287a7df3da966d6c8ff6602bd4be95d3d7b"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2023-10-14T18:04:04.543Z",
  "networkType": "ethereum",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}