{
  "contractName": "TestContract",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trustedForwarder",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "flagCapturer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trustedForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "captureFlag",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"captureFlag\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flagCapturer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TestContract.sol\":\"TestContract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x3cf982133d4c9c92e6cd0f3dd8399791b7858c09dfe6ab5c6073e7f24475aa78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb2e41b4db6b6020a4406b0bc1c3e959554321650a392c30ee506e464abe6f27\",\"dweb:/ipfs/QmerRLZmojENXg816AjVBwmjWpUFUHPTGFboirRCotZr3L\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"project:/contracts/TestContract.sol\":{\"keccak256\":\"0xca0586b8053c3d950c5952c27a5243abf6cf93cec008196a1366a0fae4dc7b29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20c1619eaa79a319d6b5dbabe77001900cd8000d59955e1b66e52dd6b3f0705a\",\"dweb:/ipfs/QmPbAKNSecuH2RqGz89TCu8eLbBrvAXmfDcAwqyidg99tx\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561000f575f80fd5b5060405161038b38038061038b83398101604081905261002e9161003f565b6001600160a01b031660805261006c565b5f6020828403121561004f575f80fd5b81516001600160a01b0381168114610065575f80fd5b9392505050565b6080516102fb6100905f395f8181608e0152818160e1015261024a01526102fb5ff3fe608060405260043610610058575f3560e01c80637da0a877116100415780637da0a877146100d35780639561dace14610119578063d481972f14610137575f80fd5b80633ccfd60b1461005c578063572b6c0514610072575b5f80fd5b348015610067575f80fd5b5061007061013f565b005b34801561007d575f80fd5b506100be61008c366004610298565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b60405190151581526020015b60405180910390f35b3480156100de575f80fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016100ca565b348015610124575f80fd5b505f54610101906001600160a01b031681565b610070610206565b5f546001600160a01b0316610152610247565b6001600160a01b0316146101c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4f6e6c7920666c61672063617074757265722063616e20776974686472617700604482015260640160405180910390fd5b6101ce610247565b6001600160a01b03166108fc4790811502906040515f60405180830381858888f19350505050158015610203573d5f803e3d5ffd5b50565b61020e610247565b5f80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633148015610281575060143610155b15610293575060131936013560601c90565b503390565b5f602082840312156102a8575f80fd5b81356001600160a01b03811681146102be575f80fd5b939250505056fea2646970667358221220a095f144a0507beaba747b558df82857a34da4d1eaba2cabfddee2e12fa5e80064736f6c63430008140033",
  "deployedBytecode": "0x608060405260043610610058575f3560e01c80637da0a877116100415780637da0a877146100d35780639561dace14610119578063d481972f14610137575f80fd5b80633ccfd60b1461005c578063572b6c0514610072575b5f80fd5b348015610067575f80fd5b5061007061013f565b005b34801561007d575f80fd5b506100be61008c366004610298565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b60405190151581526020015b60405180910390f35b3480156100de575f80fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016100ca565b348015610124575f80fd5b505f54610101906001600160a01b031681565b610070610206565b5f546001600160a01b0316610152610247565b6001600160a01b0316146101c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4f6e6c7920666c61672063617074757265722063616e20776974686472617700604482015260640160405180910390fd5b6101ce610247565b6001600160a01b03166108fc4790811502906040515f60405180830381858888f19350505050158015610203573d5f803e3d5ffd5b50565b61020e610247565b5f80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633148015610281575060143610155b15610293575060131936013560601c90565b503390565b5f602082840312156102a8575f80fd5b81356001600160a01b03811681146102be575f80fd5b939250505056fea2646970667358221220a095f144a0507beaba747b558df82857a34da4d1eaba2cabfddee2e12fa5e80064736f6c63430008140033",
  "immutableReferences": {
    "34": [
      {
        "length": 32,
        "start": 142
      },
      {
        "length": 32,
        "start": 225
      },
      {
        "length": 32,
        "start": 586
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:16",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:16",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:16"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:16",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:16",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:16"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:16"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:16",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:16"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:16"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:16",
                "type": ""
              }
            ],
            "src": "14:290:16"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1108:16",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:16",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:239:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "277:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "286:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "289:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "279:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "279:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "279:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "231:42:16",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:54:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:65:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:73:16"
                  },
                  "nodeType": "YulIf",
                  "src": "200:93:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "302:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "312:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "302:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:16",
                "type": ""
              }
            ],
            "src": "14:309:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "423:92:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "433:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "445:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "456:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "441:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "441:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "433:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "475:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "500:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "493:6:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "493:14:16"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "486:6:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "486:22:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "468:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "468:41:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "468:41:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "392:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "403:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "414:4:16",
                "type": ""
              }
            ],
            "src": "328:187:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "621:125:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "631:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "643:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "654:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "639:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "639:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "631:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "673:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "688:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "696:42:16",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "684:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "684:55:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "666:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "666:74:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "666:74:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "590:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "601:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "612:4:16",
                "type": ""
              }
            ],
            "src": "520:226:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "925:181:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "942:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "953:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "935:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "935:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "976:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "987:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "972:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "972:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "992:2:16",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "965:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "965:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "965:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1015:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1026:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1011:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1011:18:16"
                      },
                      {
                        "hexValue": "4f6e6c7920666c61672063617074757265722063616e207769746864726177",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1031:33:16",
                        "type": "",
                        "value": "Only flag capturer can withdraw"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1004:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1004:61:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1004:61:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1074:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1086:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1097:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1082:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1082:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1074:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9a9333bd8aa52305c5b8688cb2b979e89460d1523c5dcc755abaa9a1170805c7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "902:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "916:4:16",
                "type": ""
              }
            ],
            "src": "751:355:16"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_9a9333bd8aa52305c5b8688cb2b979e89460d1523c5dcc755abaa9a1170805c7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Only flag capturer can withdraw\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "141:428:15:-:0;;;494:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1255:37:1;;;141:428:15;;14:290:16;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:16;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:16:o;:::-;141:428:15;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "141:428:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;309:179;;;;;;;;;;;;;:::i;:::-;;1587:137:1;;;;;;;;;;-1:-1:-1;1587:137:1;;;;;:::i;:::-;1462:17;-1:-1:-1;;;;;1686:31:1;;;;;;;1587:137;;;;493:14:16;;486:22;468:41;;456:2;441:18;1587:137:1;;;;;;;;1379:107;;;;;;;;;;-1:-1:-1;1462:17:1;1379:107;;;-1:-1:-1;;;;;684:55:16;;;666:74;;654:2;639:18;1379:107:1;520:226:16;187:27:15;;;;;;;;;;-1:-1:-1;187:27:15;;;;-1:-1:-1;;;;;187:27:15;;;221:82;;;:::i;309:179::-;370:12;;-1:-1:-1;;;;;370:12:15;354;:10;:12::i;:::-;-1:-1:-1;;;;;354:28:15;;346:72;;;;;;;953:2:16;346:72:15;;;935:21:16;992:2;972:18;;;965:30;1031:33;1011:18;;;1004:61;1082:18;;346:72:15;;;;;;;;436:12;:10;:12::i;:::-;-1:-1:-1;;;;;428:30:15;:53;459:21;428:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;309:179::o;221:82::-;284:12;:10;:12::i;:::-;269;:27;;;;-1:-1:-1;;;;;269:27:15;;;;;;;;;;221:82::o;1961:473:1:-;2023:14;1462:17;-1:-1:-1;;;;;1686:31:1;2072:10;1686:31;2053:55;;;;-1:-1:-1;2106:2:1;2087:8;:21;;2053:55;2049:379;;;-1:-1:-1;;;2327:14:1;2323:23;2310:37;2306:2;2302:46;1961:473;:::o;2049:379::-;-1:-1:-1;735:10:4;;1961:473:1:o;14:309:16:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;-1:-1:-1;;;;;224:5:16;220:54;213:5;210:65;200:93;;289:1;286;279:12;200:93;312:5;14:309;-1:-1:-1;;;14:309:16:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport {ERC2771Context} from \"@openzeppelin/contracts/metatx/ERC2771Context.sol\";\n\ncontract TestContract is ERC2771Context {\n    address public flagCapturer;\n\n    function captureFlag() public payable {\n        flagCapturer = _msgSender();\n    }\n\n    function withdraw() public {\n        require(_msgSender() == flagCapturer, \"Only flag capturer can withdraw\");\n        payable(_msgSender()).transfer(address(this).balance);\n    }\n\n    constructor(address trustedForwarder) ERC2771Context(trustedForwarder) {}\n}\n",
  "sourcePath": "/Users/kelvinadithya/Desktop/ETHOnline-2023/Cengli/Cengli 2/contracts/TestContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/TestContract.sol",
    "exportedSymbols": {
      "ERC2771Context": [
        129
      ],
      "TestContract": [
        3434
      ]
    },
    "id": 3435,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3384,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:15"
      },
      {
        "absolutePath": "@openzeppelin/contracts/metatx/ERC2771Context.sol",
        "file": "@openzeppelin/contracts/metatx/ERC2771Context.sol",
        "id": 3386,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3435,
        "sourceUnit": 130,
        "src": "58:81:15",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3385,
              "name": "ERC2771Context",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 129,
              "src": "66:14:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3387,
              "name": "ERC2771Context",
              "nameLocations": [
                "166:14:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 129,
              "src": "166:14:15"
            },
            "id": 3388,
            "nodeType": "InheritanceSpecifier",
            "src": "166:14:15"
          }
        ],
        "canonicalName": "TestContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3434,
        "linearizedBaseContracts": [
          3434,
          129,
          911
        ],
        "name": "TestContract",
        "nameLocation": "150:12:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "9561dace",
            "id": 3390,
            "mutability": "mutable",
            "name": "flagCapturer",
            "nameLocation": "202:12:15",
            "nodeType": "VariableDeclaration",
            "scope": 3434,
            "src": "187:27:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3389,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "187:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3398,
              "nodeType": "Block",
              "src": "259:44:15",
              "statements": [
                {
                  "expression": {
                    "id": 3396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3393,
                      "name": "flagCapturer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3390,
                      "src": "269:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3394,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          94
                        ],
                        "referencedDeclaration": 94,
                        "src": "284:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 3395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "284:12:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "269:27:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3397,
                  "nodeType": "ExpressionStatement",
                  "src": "269:27:15"
                }
              ]
            },
            "functionSelector": "d481972f",
            "id": 3399,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "captureFlag",
            "nameLocation": "230:11:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "241:2:15"
            },
            "returnParameters": {
              "id": 3392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:15"
            },
            "scope": 3434,
            "src": "221:82:15",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3423,
              "nodeType": "Block",
              "src": "336:152:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3403,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              94
                            ],
                            "referencedDeclaration": 94,
                            "src": "354:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "354:12:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3405,
                          "name": "flagCapturer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3390,
                          "src": "370:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "354:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920666c61672063617074757265722063616e207769746864726177",
                        "id": 3407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "384:33:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a9333bd8aa52305c5b8688cb2b979e89460d1523c5dcc755abaa9a1170805c7",
                          "typeString": "literal_string \"Only flag capturer can withdraw\""
                        },
                        "value": "Only flag capturer can withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9a9333bd8aa52305c5b8688cb2b979e89460d1523c5dcc755abaa9a1170805c7",
                          "typeString": "literal_string \"Only flag capturer can withdraw\""
                        }
                      ],
                      "id": 3402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "346:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "346:72:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3409,
                  "nodeType": "ExpressionStatement",
                  "src": "346:72:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3418,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "467:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestContract_$3434",
                                "typeString": "contract TestContract"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestContract_$3434",
                                "typeString": "contract TestContract"
                              }
                            ],
                            "id": 3417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "459:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3416,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "459:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "459:13:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "473:7:15",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "459:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3412,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                94
                              ],
                              "referencedDeclaration": 94,
                              "src": "436:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 3413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "436:12:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "428:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 3410,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "428:8:15",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "428:21:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "450:8:15",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "428:30:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "428:53:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3422,
                  "nodeType": "ExpressionStatement",
                  "src": "428:53:15"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 3424,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "318:8:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "326:2:15"
            },
            "returnParameters": {
              "id": 3401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "336:0:15"
            },
            "scope": 3434,
            "src": "309:179:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3432,
              "nodeType": "Block",
              "src": "565:2:15",
              "statements": []
            },
            "id": 3433,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3429,
                    "name": "trustedForwarder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3426,
                    "src": "547:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3430,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3428,
                  "name": "ERC2771Context",
                  "nameLocations": [
                    "532:14:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 129,
                  "src": "532:14:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "532:32:15"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3426,
                  "mutability": "mutable",
                  "name": "trustedForwarder",
                  "nameLocation": "514:16:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "506:24:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "505:26:15"
            },
            "returnParameters": {
              "id": 3431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "565:0:15"
            },
            "scope": 3434,
            "src": "494:73:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3435,
        "src": "141:428:15",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "32:538:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {
    "5": {
      "events": {},
      "links": {},
      "address": "0x6c5748c78D295739d9F26805783f5D1003AdFcD8",
      "transactionHash": "0xd6c6a92423b93d10ac6e1d2d5cf39da644166d8d7acb8008e39b60ab4ec8d044"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2023-10-14T19:27:49.055Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "isTrustedForwarder(address)": {
        "details": "Indicates whether any particular address is the trusted forwarder."
      },
      "trustedForwarder()": {
        "details": "Returns the address of the trusted forwarder."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}