{"id":"8d9334a249bc75256f2514f9faea10ca","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./extensions/IERC20MetadataUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableMap.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/structs/EnumerableMap.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableMap.js.\n\npragma solidity ^0.8.0;\n\nimport \"./EnumerableSet.sol\";\n\n/**\n * @dev Library for managing an enumerable variant of Solidity's\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n * type.\n *\n * Maps have the following properties:\n *\n * - Entries are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableMap for EnumerableMap.UintToAddressMap;\n *\n *     // Declare a set state variable\n *     EnumerableMap.UintToAddressMap private myMap;\n * }\n * ```\n *\n * The following map types are supported:\n *\n * - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\n * - `address -> uint256` (`AddressToUintMap`) since v4.6.0\n * - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0\n * - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0\n * - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableMap.\n * ====\n */\nlibrary EnumerableMap {\n    using EnumerableSet for EnumerableSet.Bytes32Set;\n\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Map type with\n    // bytes32 keys and values.\n    // The Map implementation uses private functions, and user-facing\n    // implementations (such as Uint256ToAddressMap) are just wrappers around\n    // the underlying Map.\n    // This means that we can only create new EnumerableMaps for types that fit\n    // in bytes32.\n\n    struct Bytes32ToBytes32Map {\n        // Storage of keys\n        EnumerableSet.Bytes32Set _keys;\n        mapping(bytes32 => bytes32) _values;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        Bytes32ToBytes32Map storage map,\n        bytes32 key,\n        bytes32 value\n    ) internal returns (bool) {\n        map._values[key] = value;\n        return map._keys.add(key);\n    }\n\n    /**\n     * @dev Removes a key-value pair from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(Bytes32ToBytes32Map storage map, bytes32 key) internal returns (bool) {\n        delete map._values[key];\n        return map._keys.remove(key);\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool) {\n        return map._keys.contains(key);\n    }\n\n    /**\n     * @dev Returns the number of key-value pairs in the map. O(1).\n     */\n    function length(Bytes32ToBytes32Map storage map) internal view returns (uint256) {\n        return map._keys.length();\n    }\n\n    /**\n     * @dev Returns the key-value pair stored at position `index` in the map. O(1).\n     *\n     * Note that there are no guarantees on the ordering of entries inside the\n     * array, and it may change when more entries are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32ToBytes32Map storage map, uint256 index) internal view returns (bytes32, bytes32) {\n        bytes32 key = map._keys.at(index);\n        return (key, map._values[key]);\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool, bytes32) {\n        bytes32 value = map._values[key];\n        if (value == bytes32(0)) {\n            return (contains(map, key), bytes32(0));\n        } else {\n            return (true, value);\n        }\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bytes32) {\n        bytes32 value = map._values[key];\n        require(value != 0 || contains(map, key), \"EnumerableMap: nonexistent key\");\n        return value;\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        Bytes32ToBytes32Map storage map,\n        bytes32 key,\n        string memory errorMessage\n    ) internal view returns (bytes32) {\n        bytes32 value = map._values[key];\n        require(value != 0 || contains(map, key), errorMessage);\n        return value;\n    }\n\n    // UintToUintMap\n\n    struct UintToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        UintToUintMap storage map,\n        uint256 key,\n        uint256 value\n    ) internal returns (bool) {\n        return set(map._inner, bytes32(key), bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(UintToUintMap storage map, uint256 key) internal returns (bool) {\n        return remove(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(UintToUintMap storage map, uint256 key) internal view returns (bool) {\n        return contains(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(UintToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the set. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintToUintMap storage map, uint256 index) internal view returns (uint256, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (uint256(key), uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(UintToUintMap storage map, uint256 key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(UintToUintMap storage map, uint256 key) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(key)));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        UintToUintMap storage map,\n        uint256 key,\n        string memory errorMessage\n    ) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(key), errorMessage));\n    }\n\n    // UintToAddressMap\n\n    struct UintToAddressMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        UintToAddressMap storage map,\n        uint256 key,\n        address value\n    ) internal returns (bool) {\n        return set(map._inner, bytes32(key), bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\n        return remove(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\n        return contains(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(UintToAddressMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the set. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (uint256(key), address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(UintToAddressMap storage map, uint256 key) internal view returns (bool, address) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\n        return (success, address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(UintToAddressMap storage map, uint256 key) internal view returns (address) {\n        return address(uint160(uint256(get(map._inner, bytes32(key)))));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        UintToAddressMap storage map,\n        uint256 key,\n        string memory errorMessage\n    ) internal view returns (address) {\n        return address(uint160(uint256(get(map._inner, bytes32(key), errorMessage))));\n    }\n\n    // AddressToUintMap\n\n    struct AddressToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        AddressToUintMap storage map,\n        address key,\n        uint256 value\n    ) internal returns (bool) {\n        return set(map._inner, bytes32(uint256(uint160(key))), bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(AddressToUintMap storage map, address key) internal returns (bool) {\n        return remove(map._inner, bytes32(uint256(uint160(key))));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(AddressToUintMap storage map, address key) internal view returns (bool) {\n        return contains(map._inner, bytes32(uint256(uint160(key))));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(AddressToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the set. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressToUintMap storage map, uint256 index) internal view returns (address, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (address(uint160(uint256(key))), uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(AddressToUintMap storage map, address key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(uint256(uint160(key))));\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(AddressToUintMap storage map, address key) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(uint256(uint160(key)))));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        AddressToUintMap storage map,\n        address key,\n        string memory errorMessage\n    ) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(uint256(uint160(key))), errorMessage));\n    }\n\n    // Bytes32ToUintMap\n\n    struct Bytes32ToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        Bytes32ToUintMap storage map,\n        bytes32 key,\n        uint256 value\n    ) internal returns (bool) {\n        return set(map._inner, key, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(Bytes32ToUintMap storage map, bytes32 key) internal returns (bool) {\n        return remove(map._inner, key);\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool) {\n        return contains(map._inner, key);\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(Bytes32ToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the set. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32ToUintMap storage map, uint256 index) internal view returns (bytes32, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (key, uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, key);\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(Bytes32ToUintMap storage map, bytes32 key) internal view returns (uint256) {\n        return uint256(get(map._inner, key));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        Bytes32ToUintMap storage map,\n        bytes32 key,\n        string memory errorMessage\n    ) internal view returns (uint256) {\n        return uint256(get(map._inner, key, errorMessage));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/HypERC20TransferCengli.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.20;\r\n\r\nimport \"library/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ninterface GasRouter{\r\n    function quoteGasPayment(uint32 _destinationDomain)\r\n        external\r\n        view\r\n        returns (uint256 _gasPayment);\r\n}\r\n\r\ninterface TokenRouter is GasRouter {\r\n  function transferRemote(\r\n        uint32 _destinationDomain,\r\n        bytes32 _recipientAddress,\r\n        uint256 _amountOrId // amount in wei\r\n    ) external payable returns (bytes32 messageId);\r\n}\r\n\r\ninterface IHypERC20 is TokenRouter{ // can be ERC20 collateral from origin chain or HypERC20 in synthetic chain\r\n\r\n    function _transferFromSender(uint256 _amount) // will wrap original ERC20\r\n        external\r\n        returns (bytes memory);\r\n\r\n    function _transferTo(\r\n        address _recipient,\r\n        uint256 _amount,\r\n        bytes calldata // no metadata\r\n    ) external;\r\n    \r\n}\r\n\r\ncontract HypERC20TransferCengli is ReentrancyGuard{\r\n    address public USDCAddress;\r\n    address public HypERC20Address;\r\n    address public owner; // testing purposes\r\n\r\n    event SentTransferRemote(\r\n        bytes32 messageId,\r\n        uint32 indexed destination,\r\n        bytes32 indexed recipient,\r\n        uint256 amount\r\n    );\r\n\r\n    constructor(address _USDCAddress, address _HypERC20Address){\r\n        USDCAddress = _USDCAddress;\r\n        HypERC20Address = _HypERC20Address;\r\n        IERC20(USDCAddress).approve(HypERC20Address, 100000000e6); // approve HypERC20 router spending USDC of this contract\r\n\r\n        owner = msg.sender;\r\n        IERC20(USDCAddress).approve(owner, 100000000e6); // approve owner spending of USDC in this contract, emergency case only, testnet purposes\r\n    }\r\n\r\n    receive() external payable {}\r\n    \r\n    // user/sender must approve allowance of USDC for this contract before able to successfully call this function\r\n    function transferXchainHypERC20(uint32 _destinationDomain, bytes32 _recipientAddress, uint256 _amount) nonReentrant external returns (bytes32) {\r\n        require(IERC20(USDCAddress).balanceOf(msg.sender) >= _amount, \"Insufficient USDC balance of sender.\");\r\n        IERC20(USDCAddress).transferFrom(msg.sender, address(this), _amount); // contract holds USDC\r\n\r\n         // Get the required gas payment\r\n        uint256 quote = IHypERC20(HypERC20Address).quoteGasPayment(\r\n            _destinationDomain\r\n        );\r\n        require(address(this).balance >= quote, \"Insufficient native token for gas inside contract.\");\r\n        \r\n        bytes32 messageId = IHypERC20(HypERC20Address).transferRemote{value:quote}(_destinationDomain, _recipientAddress, _amount);\r\n        emit SentTransferRemote(messageId, _destinationDomain, _recipientAddress, _amount);\r\n\r\n        return messageId;\r\n    }\r\n\r\n    // owner functions\r\n    function withdrawUSDC() external onlyOwner {\r\n        require(IERC20(USDCAddress).balanceOf(address(this)) != 0, \"Contract has 0 USDC.\");\r\n        IERC20(USDCAddress).transfer(owner, IERC20(USDCAddress).balanceOf(address(this)));\r\n    }\r\n\r\n    function withdrawNative() external onlyOwner {\r\n        require(address(this).balance != 0, \"Contract has 0 Native.\");\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"Only the owner can call this function\");\r\n        _;\r\n    }\r\n\r\n}"},"library/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant NOT_ENTERED = 1;\r\n    uint256 private constant ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    /**\r\n     * @dev Unauthorized reentrant call.\r\n     */\r\n    error ReentrancyGuardReentrantCall();\r\n\r\n    constructor() {\r\n        _status = NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        _nonReentrantBefore();\r\n        _;\r\n        _nonReentrantAfter();\r\n    }\r\n\r\n    function _nonReentrantBefore() private {\r\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\r\n        if (_status == ENTERED) {\r\n            revert ReentrancyGuardReentrantCall();\r\n        }\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = ENTERED;\r\n    }\r\n\r\n    function _nonReentrantAfter() private {\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\r\n     * `nonReentrant` function in the call stack.\r\n     */\r\n    function _reentrancyGuardEntered() internal view returns (bool) {\r\n        return _status == ENTERED;\r\n    }\r\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1299],"ContextUpgradeable":[1341],"Initializable":[300],"OwnableUpgradeable":[131]},"id":132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":1342,"src":"127:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":301,"src":"169:42:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Initializable","nameLocations":["748:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":300,"src":"748:13:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"748:13:0"},{"baseName":{"id":7,"name":"ContextUpgradeable","nameLocations":["763:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1341,"src":"763:18:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"763:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"213:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":131,"linearizedBaseContracts":[131,1341,300],"name":"OwnableUpgradeable","nameLocation":"726:18:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":10,"mutability":"mutable","name":"_owner","nameLocation":"804:6:0","nodeType":"VariableDeclaration","scope":131,"src":"788:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":16,"name":"OwnershipTransferred","nameLocation":"823:20:0","nodeType":"EventDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:0","nodeType":"VariableDeclaration","scope":16,"src":"844:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:0","nodeType":"VariableDeclaration","scope":16,"src":"875:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:0"},"src":"817:84:0"},{"body":{"id":25,"nodeType":"Block","src":"1055:43:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1065:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1065:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"ExpressionStatement","src":"1065:26:0"}]},"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"907:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":26,"implemented":true,"kind":"function","modifiers":[{"id":20,"kind":"modifierInvocation","modifierName":{"id":19,"name":"onlyInitializing","nameLocations":["1038:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":245,"src":"1038:16:0"},"nodeType":"ModifierInvocation","src":"1038:16:0"}],"name":"__Ownable_init","nameLocation":"1012:14:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1026:2:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[],"src":"1055:0:0"},"scope":131,"src":"1003:95:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":36,"nodeType":"Block","src":"1166:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":32,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"1195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":31,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"1176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"1176:32:0"}]},"id":37,"implemented":true,"kind":"function","modifiers":[{"id":29,"kind":"modifierInvocation","modifierName":{"id":28,"name":"onlyInitializing","nameLocations":["1149:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":245,"src":"1149:16:0"},"nodeType":"ModifierInvocation","src":"1149:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:0","nodeType":"FunctionDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[],"src":"1137:2:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"1166:0:0"},"scope":131,"src":"1104:111:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":44,"nodeType":"Block","src":"1324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":40,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"1334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"ExpressionStatement","src":"1334:13:0"},{"id":43,"nodeType":"PlaceholderStatement","src":"1357:1:0"}]},"documentation":{"id":38,"nodeType":"StructuredDocumentation","src":"1221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":45,"name":"onlyOwner","nameLocation":"1312:9:0","nodeType":"ModifierDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"1321:2:0"},"src":"1303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":53,"nodeType":"Block","src":"1496:30:0","statements":[{"expression":{"id":51,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1513:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"1506:13:0"}]},"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"1371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:0","nodeType":"FunctionDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"1455:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:0"},"scope":131,"src":"1441:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":67,"nodeType":"Block","src":"1644:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":59,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1662:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1662:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":61,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"1673:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1673:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":58,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1654:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1654:68:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1532:62:0","text":" @dev Throws if the sender is not the owner."},"id":68,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1619:2:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[],"src":"1644:0:0"},"scope":131,"src":"1599:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":81,"nodeType":"Block","src":"2125:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":77,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2162:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":76,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"2154:7:0","typeDescriptions":{}}},"id":78,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":74,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2135:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"ExpressionStatement","src":"2135:30:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1735:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":82,"implemented":true,"kind":"function","modifiers":[{"id":72,"kind":"modifierInvocation","modifierName":{"id":71,"name":"onlyOwner","nameLocations":["2115:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2115:9:0"},"nodeType":"ModifierInvocation","src":"2115:9:0"}],"name":"renounceOwnership","nameLocation":"2080:17:0","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"2097:2:0"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[],"src":"2125:0:0"},"scope":131,"src":"2071:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":104,"nodeType":"Block","src":"2391:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":91,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2409:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2429:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":93,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2421:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2421:7:0","typeDescriptions":{}}},"id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2421:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2409:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":97,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2433:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":90,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2401:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2401:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":99,"nodeType":"ExpressionStatement","src":"2401:73:0"},{"expression":{"arguments":[{"id":101,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2503:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2484:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2484:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":103,"nodeType":"ExpressionStatement","src":"2484:28:0"}]},"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"2178:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":105,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2381:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2381:9:0"},"nodeType":"ModifierInvocation","src":"2381:9:0"}],"name":"transferOwnership","nameLocation":"2330:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"newOwner","nameLocation":"2356:8:0","nodeType":"VariableDeclaration","scope":105,"src":"2348:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"2348:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2347:18:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2391:0:0"},"scope":131,"src":"2321:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":124,"nodeType":"Block","src":"2736:124:0","statements":[{"assignments":[112],"declarations":[{"constant":false,"id":112,"mutability":"mutable","name":"oldOwner","nameLocation":"2754:8:0","nodeType":"VariableDeclaration","scope":124,"src":"2746:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"2746:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":114,"initialValue":{"id":113,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2765:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2746:25:0"},{"expression":{"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":115,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2781:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":116,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2790:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2781:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":118,"nodeType":"ExpressionStatement","src":"2781:17:0"},{"eventCall":{"arguments":[{"id":120,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2834:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":121,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2844:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":119,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"2813:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2813:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":123,"nodeType":"EmitStatement","src":"2808:45:0"}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2525:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":125,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2682:18:0","nodeType":"FunctionDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"newOwner","nameLocation":"2709:8:0","nodeType":"VariableDeclaration","scope":125,"src":"2701:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2700:18:0"},"returnParameters":{"id":110,"nodeType":"ParameterList","parameters":[],"src":"2736:0:0"},"scope":131,"src":"2673:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"2866:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":130,"mutability":"mutable","name":"__gap","nameLocation":"3145:5:0","nodeType":"VariableDeclaration","scope":131,"src":"3125:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3125:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"length":{"hexValue":"3439","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3133:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3125:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":132,"src":"708:2445:0","usedErrors":[],"usedEvents":[16,146]}],"src":"102:3052:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[1299],"Initializable":[300]},"id":301,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":133,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":134,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":301,"sourceUnit":1300,"src":"138:44:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"184:2198:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":300,"linearizedBaseContracts":[300],"name":"Initializable","nameLocation":"2401:13:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"2421:109:1","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":138,"mutability":"mutable","name":"_initialized","nameLocation":"2549:12:1","nodeType":"VariableDeclaration","scope":300,"src":"2535:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":137,"name":"uint8","nodeType":"ElementaryTypeName","src":"2535:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"2568:91:1","text":" @dev Indicates that the contract is in the process of being initialized."},"id":141,"mutability":"mutable","name":"_initializing","nameLocation":"2677:13:1","nodeType":"VariableDeclaration","scope":300,"src":"2664:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":140,"name":"bool","nodeType":"ElementaryTypeName","src":"2664:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"2697:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":146,"name":"Initialized","nameLocation":"2798:11:1","nodeType":"EventDefinition","parameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2816:7:1","nodeType":"VariableDeclaration","scope":146,"src":"2810:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":143,"name":"uint8","nodeType":"ElementaryTypeName","src":"2810:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2809:15:1"},"src":"2792:33:1"},{"body":{"id":201,"nodeType":"Block","src":"3258:483:1","statements":[{"assignments":[150],"declarations":[{"constant":false,"id":150,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3273:14:1","nodeType":"VariableDeclaration","scope":201,"src":"3268:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"3268:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":153,"initialValue":{"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3290:14:1","subExpression":{"id":151,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3291:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3268:36:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":155,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"3336:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":156,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"3354:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3369:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3354:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3336:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3335:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3376:45:1","subExpression":{"arguments":[{"arguments":[{"id":165,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3415:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$300","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$300","typeString":"contract Initializable"}],"id":164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3407:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"3407:7:1","typeDescriptions":{}}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3407:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":161,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"3377:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1299_$","typeString":"type(library AddressUpgradeable)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3396:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1033,"src":"3377:29:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3377:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":169,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"3425:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3441:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3425:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3376:66:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":173,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3375:68:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3335:108:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3457:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":154,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3314:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:201:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":177,"nodeType":"ExpressionStatement","src":"3314:201:1"},{"expression":{"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":178,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"3525:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3540:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3525:16:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":181,"nodeType":"ExpressionStatement","src":"3525:16:1"},{"condition":{"id":182,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"3555:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"IfStatement","src":"3551:65:1","trueBody":{"id":187,"nodeType":"Block","src":"3571:45:1","statements":[{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":183,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3585:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3601:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3585:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":186,"nodeType":"ExpressionStatement","src":"3585:20:1"}]}},{"id":189,"nodeType":"PlaceholderStatement","src":"3625:1:1"},{"condition":{"id":190,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"3640:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":200,"nodeType":"IfStatement","src":"3636:99:1","trueBody":{"id":199,"nodeType":"Block","src":"3656:79:1","statements":[{"expression":{"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":191,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3670:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3686:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3670:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":194,"nodeType":"ExpressionStatement","src":"3670:21:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3722:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":195,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"3710:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3710:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":198,"nodeType":"EmitStatement","src":"3705:19:1"}]}}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"2831:399:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":202,"name":"initializer","nameLocation":"3244:11:1","nodeType":"ModifierDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[],"src":"3255:2:1"},"src":"3235:506:1","virtual":false,"visibility":"internal"},{"body":{"id":234,"nodeType":"Block","src":"4852:255:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:14:1","subExpression":{"id":208,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"4871:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":210,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4888:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":211,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"4903:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4888:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4870:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4912:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4862:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4862:99:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"ExpressionStatement","src":"4862:99:1"},{"expression":{"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":217,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4971:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":218,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"4986:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4971:22:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":220,"nodeType":"ExpressionStatement","src":"4971:22:1"},{"expression":{"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":221,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"5003:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5019:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5003:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":224,"nodeType":"ExpressionStatement","src":"5003:20:1"},{"id":225,"nodeType":"PlaceholderStatement","src":"5033:1:1"},{"expression":{"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":226,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"5044:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5060:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5044:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":229,"nodeType":"ExpressionStatement","src":"5044:21:1"},{"eventCall":{"arguments":[{"id":231,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"5092:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":230,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5080:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":233,"nodeType":"EmitStatement","src":"5075:25:1"}]},"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"3747:1062:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":235,"name":"reinitializer","nameLocation":"4823:13:1","nodeType":"ModifierDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"version","nameLocation":"4843:7:1","nodeType":"VariableDeclaration","scope":235,"src":"4837:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":204,"name":"uint8","nodeType":"ElementaryTypeName","src":"4837:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4836:15:1"},"src":"4814:293:1","virtual":false,"visibility":"internal"},{"body":{"id":244,"nodeType":"Block","src":"5345:97:1","statements":[{"expression":{"arguments":[{"id":239,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"5363:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5378:45:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5355:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5355:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":242,"nodeType":"ExpressionStatement","src":"5355:69:1"},{"id":243,"nodeType":"PlaceholderStatement","src":"5434:1:1"}]},"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"5113:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":245,"name":"onlyInitializing","nameLocation":"5326:16:1","nodeType":"ModifierDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[],"src":"5342:2:1"},"src":"5317:125:1","virtual":false,"visibility":"internal"},{"body":{"id":280,"nodeType":"Block","src":"5977:230:1","statements":[{"expression":{"arguments":[{"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5995:14:1","subExpression":{"id":250,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"5996:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6011:41:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5987:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5987:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":254,"nodeType":"ExpressionStatement","src":"5987:66:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":255,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"6067:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6087:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":257,"name":"uint8","nodeType":"ElementaryTypeName","src":"6087:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":256,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6082:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6082:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6094:3:1","memberName":"max","nodeType":"MemberAccess","src":"6082:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6067:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":279,"nodeType":"IfStatement","src":"6063:138:1","trueBody":{"id":278,"nodeType":"Block","src":"6099:102:1","statements":[{"expression":{"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":262,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"6113:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":264,"name":"uint8","nodeType":"ElementaryTypeName","src":"6133:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":263,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6128:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6128:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6140:3:1","memberName":"max","nodeType":"MemberAccess","src":"6128:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6113:30:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":269,"nodeType":"ExpressionStatement","src":"6113:30:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6179:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":272,"name":"uint8","nodeType":"ElementaryTypeName","src":"6179:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":271,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6174:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6186:3:1","memberName":"max","nodeType":"MemberAccess","src":"6174:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":270,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"6162:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6162:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":277,"nodeType":"EmitStatement","src":"6157:33:1"}]}}]},"documentation":{"id":246,"nodeType":"StructuredDocumentation","src":"5448:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":281,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5937:20:1","nodeType":"FunctionDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[],"src":"5957:2:1"},"returnParameters":{"id":248,"nodeType":"ParameterList","parameters":[],"src":"5977:0:1"},"scope":300,"src":"5928:279:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":289,"nodeType":"Block","src":"6384:36:1","statements":[{"expression":{"id":287,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"6401:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":286,"id":288,"nodeType":"Return","src":"6394:19:1"}]},"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"6213:102:1","text":" @dev Internal function that returns the initialized version. Returns `_initialized`"},"id":290,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6329:22:1","nodeType":"FunctionDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[],"src":"6351:2:1"},"returnParameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":290,"src":"6377:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":284,"name":"uint8","nodeType":"ElementaryTypeName","src":"6377:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6376:7:1"},"scope":300,"src":"6320:100:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":298,"nodeType":"Block","src":"6590:37:1","statements":[{"expression":{"id":296,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6607:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":295,"id":297,"nodeType":"Return","src":"6600:20:1"}]},"documentation":{"id":291,"nodeType":"StructuredDocumentation","src":"6426:103:1","text":" @dev Internal function that returns the initialized version. Returns `_initializing`"},"id":299,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6543:15:1","nodeType":"FunctionDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[],"src":"6558:2:1"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":299,"src":"6584:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":293,"name":"bool","nodeType":"ElementaryTypeName","src":"6584:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6583:6:1"},"scope":300,"src":"6534:93:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":301,"src":"2383:4246:1","usedErrors":[],"usedEvents":[146]}],"src":"113:6517:1"},"id":1},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1299],"ContextUpgradeable":[1341],"ERC20Upgradeable":[912],"IERC20MetadataUpgradeable":[1015],"IERC20Upgradeable":[990],"Initializable":[300]},"id":913,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":302,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"./IERC20Upgradeable.sol","id":303,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":913,"sourceUnit":991,"src":"130:33:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","file":"./extensions/IERC20MetadataUpgradeable.sol","id":304,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":913,"sourceUnit":1016,"src":"164:52:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":305,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":913,"sourceUnit":1342,"src":"217:44:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":306,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":913,"sourceUnit":301,"src":"262:45:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":308,"name":"Initializable","nameLocations":["1509:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":300,"src":"1509:13:2"},"id":309,"nodeType":"InheritanceSpecifier","src":"1509:13:2"},{"baseName":{"id":310,"name":"ContextUpgradeable","nameLocations":["1524:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":1341,"src":"1524:18:2"},"id":311,"nodeType":"InheritanceSpecifier","src":"1524:18:2"},{"baseName":{"id":312,"name":"IERC20Upgradeable","nameLocations":["1544:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":990,"src":"1544:17:2"},"id":313,"nodeType":"InheritanceSpecifier","src":"1544:17:2"},{"baseName":{"id":314,"name":"IERC20MetadataUpgradeable","nameLocations":["1563:25:2"],"nodeType":"IdentifierPath","referencedDeclaration":1015,"src":"1563:25:2"},"id":315,"nodeType":"InheritanceSpecifier","src":"1563:25:2"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"309:1170:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":912,"linearizedBaseContracts":[912,1015,990,1341,300],"name":"ERC20Upgradeable","nameLocation":"1489:16:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":319,"mutability":"mutable","name":"_balances","nameLocation":"1631:9:2","nodeType":"VariableDeclaration","scope":912,"src":"1595:45:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":318,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":316,"name":"address","nodeType":"ElementaryTypeName","src":"1603:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1595:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1614:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":325,"mutability":"mutable","name":"_allowances","nameLocation":"1703:11:2","nodeType":"VariableDeclaration","scope":912,"src":"1647:67:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":324,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":320,"name":"address","nodeType":"ElementaryTypeName","src":"1655:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1647:47:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":323,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1674:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1666:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"1685:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":327,"mutability":"mutable","name":"_totalSupply","nameLocation":"1737:12:2","nodeType":"VariableDeclaration","scope":912,"src":"1721:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":329,"mutability":"mutable","name":"_name","nameLocation":"1771:5:2","nodeType":"VariableDeclaration","scope":912,"src":"1756:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":328,"name":"string","nodeType":"ElementaryTypeName","src":"1756:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":331,"mutability":"mutable","name":"_symbol","nameLocation":"1797:7:2","nodeType":"VariableDeclaration","scope":912,"src":"1782:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":330,"name":"string","nodeType":"ElementaryTypeName","src":"1782:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":346,"nodeType":"Block","src":"2206:55:2","statements":[{"expression":{"arguments":[{"id":342,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2239:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":343,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"2246:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":341,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"2216:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":345,"nodeType":"ExpressionStatement","src":"2216:38:2"}]},"documentation":{"id":332,"nodeType":"StructuredDocumentation","src":"1811:298:2","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":347,"implemented":true,"kind":"function","modifiers":[{"id":339,"kind":"modifierInvocation","modifierName":{"id":338,"name":"onlyInitializing","nameLocations":["2189:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":245,"src":"2189:16:2"},"nodeType":"ModifierInvocation","src":"2189:16:2"}],"name":"__ERC20_init","nameLocation":"2123:12:2","nodeType":"FunctionDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"name_","nameLocation":"2150:5:2","nodeType":"VariableDeclaration","scope":347,"src":"2136:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":333,"name":"string","nodeType":"ElementaryTypeName","src":"2136:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"symbol_","nameLocation":"2171:7:2","nodeType":"VariableDeclaration","scope":347,"src":"2157:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":335,"name":"string","nodeType":"ElementaryTypeName","src":"2157:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2135:44:2"},"returnParameters":{"id":340,"nodeType":"ParameterList","parameters":[],"src":"2206:0:2"},"scope":912,"src":"2114:147:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":364,"nodeType":"Block","src":"2369:57:2","statements":[{"expression":{"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":356,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"2379:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":357,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"2387:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2379:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":359,"nodeType":"ExpressionStatement","src":"2379:13:2"},{"expression":{"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":360,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"2402:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":361,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"2412:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2402:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":363,"nodeType":"ExpressionStatement","src":"2402:17:2"}]},"id":365,"implemented":true,"kind":"function","modifiers":[{"id":354,"kind":"modifierInvocation","modifierName":{"id":353,"name":"onlyInitializing","nameLocations":["2352:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":245,"src":"2352:16:2"},"nodeType":"ModifierInvocation","src":"2352:16:2"}],"name":"__ERC20_init_unchained","nameLocation":"2276:22:2","nodeType":"FunctionDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"name_","nameLocation":"2313:5:2","nodeType":"VariableDeclaration","scope":365,"src":"2299:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"2299:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"symbol_","nameLocation":"2334:7:2","nodeType":"VariableDeclaration","scope":365,"src":"2320:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":350,"name":"string","nodeType":"ElementaryTypeName","src":"2320:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2298:44:2"},"returnParameters":{"id":355,"nodeType":"ParameterList","parameters":[],"src":"2369:0:2"},"scope":912,"src":"2267:159:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1002],"body":{"id":374,"nodeType":"Block","src":"2560:29:2","statements":[{"expression":{"id":372,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"2577:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":371,"id":373,"nodeType":"Return","src":"2570:12:2"}]},"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"2432:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":375,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2500:4:2","nodeType":"FunctionDefinition","overrides":{"id":368,"nodeType":"OverrideSpecifier","overrides":[],"src":"2527:8:2"},"parameters":{"id":367,"nodeType":"ParameterList","parameters":[],"src":"2504:2:2"},"returnParameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":375,"src":"2545:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":369,"name":"string","nodeType":"ElementaryTypeName","src":"2545:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2544:15:2"},"scope":912,"src":"2491:98:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1008],"body":{"id":384,"nodeType":"Block","src":"2773:31:2","statements":[{"expression":{"id":382,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"2790:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":381,"id":383,"nodeType":"Return","src":"2783:14:2"}]},"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"2595:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2711:6:2","nodeType":"FunctionDefinition","overrides":{"id":378,"nodeType":"OverrideSpecifier","overrides":[],"src":"2740:8:2"},"parameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"2717:2:2"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"2758:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":379,"name":"string","nodeType":"ElementaryTypeName","src":"2758:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2757:15:2"},"scope":912,"src":"2702:102:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1014],"body":{"id":394,"nodeType":"Block","src":"3493:26:2","statements":[{"expression":{"hexValue":"3138","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3510:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":391,"id":393,"nodeType":"Return","src":"3503:9:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"2810:613:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":395,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3437:8:2","nodeType":"FunctionDefinition","overrides":{"id":388,"nodeType":"OverrideSpecifier","overrides":[],"src":"3468:8:2"},"parameters":{"id":387,"nodeType":"ParameterList","parameters":[],"src":"3445:2:2"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":395,"src":"3486:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":389,"name":"uint8","nodeType":"ElementaryTypeName","src":"3486:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3485:7:2"},"scope":912,"src":"3428:91:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[939],"body":{"id":404,"nodeType":"Block","src":"3649:36:2","statements":[{"expression":{"id":402,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3666:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":401,"id":403,"nodeType":"Return","src":"3659:19:2"}]},"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"3525:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":405,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3588:11:2","nodeType":"FunctionDefinition","overrides":{"id":398,"nodeType":"OverrideSpecifier","overrides":[],"src":"3622:8:2"},"parameters":{"id":397,"nodeType":"ParameterList","parameters":[],"src":"3599:2:2"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":405,"src":"3640:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3639:9:2"},"scope":912,"src":"3579:106:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[947],"body":{"id":418,"nodeType":"Block","src":"3826:42:2","statements":[{"expression":{"baseExpression":{"id":414,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"3843:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":416,"indexExpression":{"id":415,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"3853:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3843:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":413,"id":417,"nodeType":"Return","src":"3836:25:2"}]},"documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"3691:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":419,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3752:9:2","nodeType":"FunctionDefinition","overrides":{"id":410,"nodeType":"OverrideSpecifier","overrides":[],"src":"3799:8:2"},"parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"account","nameLocation":"3770:7:2","nodeType":"VariableDeclaration","scope":419,"src":"3762:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":407,"name":"address","nodeType":"ElementaryTypeName","src":"3762:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3761:17:2"},"returnParameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":419,"src":"3817:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"3817:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3816:9:2"},"scope":912,"src":"3743:125:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[957],"body":{"id":443,"nodeType":"Block","src":"4149:104:2","statements":[{"assignments":[431],"declarations":[{"constant":false,"id":431,"mutability":"mutable","name":"owner","nameLocation":"4167:5:2","nodeType":"VariableDeclaration","scope":443,"src":"4159:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":430,"name":"address","nodeType":"ElementaryTypeName","src":"4159:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":434,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":432,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"4175:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4175:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4159:28:2"},{"expression":{"arguments":[{"id":436,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"4207:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":437,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"4214:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":438,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"4218:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":435,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"4197:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4197:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":440,"nodeType":"ExpressionStatement","src":"4197:28:2"},{"expression":{"hexValue":"74727565","id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4242:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":429,"id":442,"nodeType":"Return","src":"4235:11:2"}]},"documentation":{"id":420,"nodeType":"StructuredDocumentation","src":"3874:185:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":444,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4073:8:2","nodeType":"FunctionDefinition","overrides":{"id":426,"nodeType":"OverrideSpecifier","overrides":[],"src":"4125:8:2"},"parameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":422,"mutability":"mutable","name":"to","nameLocation":"4090:2:2","nodeType":"VariableDeclaration","scope":444,"src":"4082:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":421,"name":"address","nodeType":"ElementaryTypeName","src":"4082:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":424,"mutability":"mutable","name":"amount","nameLocation":"4102:6:2","nodeType":"VariableDeclaration","scope":444,"src":"4094:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":423,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4081:28:2"},"returnParameters":{"id":429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":444,"src":"4143:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":427,"name":"bool","nodeType":"ElementaryTypeName","src":"4143:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4142:6:2"},"scope":912,"src":"4064:189:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[967],"body":{"id":461,"nodeType":"Block","src":"4409:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":455,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"4426:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":457,"indexExpression":{"id":456,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4438:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4426:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":459,"indexExpression":{"id":458,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"4445:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4426:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":454,"id":460,"nodeType":"Return","src":"4419:34:2"}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"4259:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":462,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4320:9:2","nodeType":"FunctionDefinition","overrides":{"id":451,"nodeType":"OverrideSpecifier","overrides":[],"src":"4382:8:2"},"parameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"owner","nameLocation":"4338:5:2","nodeType":"VariableDeclaration","scope":462,"src":"4330:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"4330:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"spender","nameLocation":"4353:7:2","nodeType":"VariableDeclaration","scope":462,"src":"4345:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":448,"name":"address","nodeType":"ElementaryTypeName","src":"4345:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4329:32:2"},"returnParameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":462,"src":"4400:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":452,"name":"uint256","nodeType":"ElementaryTypeName","src":"4400:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4399:9:2"},"scope":912,"src":"4311:149:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[977],"body":{"id":486,"nodeType":"Block","src":"4857:108:2","statements":[{"assignments":[474],"declarations":[{"constant":false,"id":474,"mutability":"mutable","name":"owner","nameLocation":"4875:5:2","nodeType":"VariableDeclaration","scope":486,"src":"4867:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"4867:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":477,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":475,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"4883:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4883:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4867:28:2"},{"expression":{"arguments":[{"id":479,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"4914:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":480,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"4921:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":481,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"4930:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":478,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"4905:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4905:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":483,"nodeType":"ExpressionStatement","src":"4905:32:2"},{"expression":{"hexValue":"74727565","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4954:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":472,"id":485,"nodeType":"Return","src":"4947:11:2"}]},"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"4466:297:2","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":487,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4777:7:2","nodeType":"FunctionDefinition","overrides":{"id":469,"nodeType":"OverrideSpecifier","overrides":[],"src":"4833:8:2"},"parameters":{"id":468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"spender","nameLocation":"4793:7:2","nodeType":"VariableDeclaration","scope":487,"src":"4785:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"4785:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":467,"mutability":"mutable","name":"amount","nameLocation":"4810:6:2","nodeType":"VariableDeclaration","scope":487,"src":"4802:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":466,"name":"uint256","nodeType":"ElementaryTypeName","src":"4802:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4784:33:2"},"returnParameters":{"id":472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":487,"src":"4851:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":470,"name":"bool","nodeType":"ElementaryTypeName","src":"4851:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4850:6:2"},"scope":912,"src":"4768:197:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[989],"body":{"id":519,"nodeType":"Block","src":"5660:153:2","statements":[{"assignments":[501],"declarations":[{"constant":false,"id":501,"mutability":"mutable","name":"spender","nameLocation":"5678:7:2","nodeType":"VariableDeclaration","scope":519,"src":"5670:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"5670:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":504,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":502,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"5688:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5688:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5670:30:2"},{"expression":{"arguments":[{"id":506,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"5726:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":507,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"5732:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":508,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"5741:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":505,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"5710:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5710:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":510,"nodeType":"ExpressionStatement","src":"5710:38:2"},{"expression":{"arguments":[{"id":512,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"5768:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":513,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"5774:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":514,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"5778:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":511,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"5758:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5758:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":516,"nodeType":"ExpressionStatement","src":"5758:27:2"},{"expression":{"hexValue":"74727565","id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5802:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":499,"id":518,"nodeType":"Return","src":"5795:11:2"}]},"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"4971:551:2","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":520,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5536:12:2","nodeType":"FunctionDefinition","overrides":{"id":496,"nodeType":"OverrideSpecifier","overrides":[],"src":"5636:8:2"},"parameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"from","nameLocation":"5566:4:2","nodeType":"VariableDeclaration","scope":520,"src":"5558:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":492,"mutability":"mutable","name":"to","nameLocation":"5588:2:2","nodeType":"VariableDeclaration","scope":520,"src":"5580:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"5580:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"amount","nameLocation":"5608:6:2","nodeType":"VariableDeclaration","scope":520,"src":"5600:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"5600:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5548:72:2"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":520,"src":"5654:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":497,"name":"bool","nodeType":"ElementaryTypeName","src":"5654:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5653:6:2"},"scope":912,"src":"5527:286:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":548,"nodeType":"Block","src":"6302:140:2","statements":[{"assignments":[531],"declarations":[{"constant":false,"id":531,"mutability":"mutable","name":"owner","nameLocation":"6320:5:2","nodeType":"VariableDeclaration","scope":548,"src":"6312:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"6312:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":534,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":532,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"6328:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6328:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6312:28:2"},{"expression":{"arguments":[{"id":536,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"6359:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"6366:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":539,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"6385:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":540,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"6392:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":538,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"6375:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6375:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":542,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"6403:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6375:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":535,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"6350:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6350:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":545,"nodeType":"ExpressionStatement","src":"6350:64:2"},{"expression":{"hexValue":"74727565","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":529,"id":547,"nodeType":"Return","src":"6424:11:2"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"5819:384:2","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":549,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"6217:17:2","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"spender","nameLocation":"6243:7:2","nodeType":"VariableDeclaration","scope":549,"src":"6235:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"6235:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"addedValue","nameLocation":"6260:10:2","nodeType":"VariableDeclaration","scope":549,"src":"6252:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":524,"name":"uint256","nodeType":"ElementaryTypeName","src":"6252:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6234:37:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":549,"src":"6296:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":527,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6295:6:2"},"scope":912,"src":"6208:234:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":589,"nodeType":"Block","src":"7028:328:2","statements":[{"assignments":[560],"declarations":[{"constant":false,"id":560,"mutability":"mutable","name":"owner","nameLocation":"7046:5:2","nodeType":"VariableDeclaration","scope":589,"src":"7038:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"7038:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":563,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":561,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"7054:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7054:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7038:28:2"},{"assignments":[565],"declarations":[{"constant":false,"id":565,"mutability":"mutable","name":"currentAllowance","nameLocation":"7084:16:2","nodeType":"VariableDeclaration","scope":589,"src":"7076:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint256","nodeType":"ElementaryTypeName","src":"7076:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":570,"initialValue":{"arguments":[{"id":567,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"7113:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":568,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"7120:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":566,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"7103:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7103:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7076:52:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":572,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"7146:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":573,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"7166:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7146:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7183:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":571,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7138:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7138:85:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"ExpressionStatement","src":"7138:85:2"},{"id":586,"nodeType":"UncheckedBlock","src":"7233:95:2","statements":[{"expression":{"arguments":[{"id":579,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"7266:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":580,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"7273:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":581,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"7282:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":582,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"7301:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7282:34:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":578,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"7257:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7257:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":585,"nodeType":"ExpressionStatement","src":"7257:60:2"}]},{"expression":{"hexValue":"74727565","id":587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7345:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":558,"id":588,"nodeType":"Return","src":"7338:11:2"}]},"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"6448:476:2","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":590,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6938:17:2","nodeType":"FunctionDefinition","parameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"spender","nameLocation":"6964:7:2","nodeType":"VariableDeclaration","scope":590,"src":"6956:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"6956:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"subtractedValue","nameLocation":"6981:15:2","nodeType":"VariableDeclaration","scope":590,"src":"6973:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":553,"name":"uint256","nodeType":"ElementaryTypeName","src":"6973:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6955:42:2"},"returnParameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":590,"src":"7022:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":556,"name":"bool","nodeType":"ElementaryTypeName","src":"7022:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7021:6:2"},"scope":912,"src":"6929:427:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":666,"nodeType":"Block","src":"7918:710:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":601,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"7936:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7952:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7944:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"7944:7:2","typeDescriptions":{}}},"id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7944:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7936:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7956:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":600,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7928:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7928:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":609,"nodeType":"ExpressionStatement","src":"7928:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":611,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8014:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8028:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8020:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":612,"name":"address","nodeType":"ElementaryTypeName","src":"8020:7:2","typeDescriptions":{}}},"id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8014:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8032:37:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":610,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8006:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8006:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":619,"nodeType":"ExpressionStatement","src":"8006:64:2"},{"expression":{"arguments":[{"id":621,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"8102:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":622,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8108:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":623,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8112:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":620,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"8081:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8081:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":625,"nodeType":"ExpressionStatement","src":"8081:38:2"},{"assignments":[627],"declarations":[{"constant":false,"id":627,"mutability":"mutable","name":"fromBalance","nameLocation":"8138:11:2","nodeType":"VariableDeclaration","scope":666,"src":"8130:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":626,"name":"uint256","nodeType":"ElementaryTypeName","src":"8130:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":631,"initialValue":{"baseExpression":{"id":628,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"8152:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":630,"indexExpression":{"id":629,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"8162:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8152:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8130:37:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":633,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"8185:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":634,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8200:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8185:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8208:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":632,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8177:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8177:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":638,"nodeType":"ExpressionStatement","src":"8177:72:2"},{"id":653,"nodeType":"UncheckedBlock","src":"8259:273:2","statements":[{"expression":{"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":639,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"8283:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":641,"indexExpression":{"id":640,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"8293:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8283:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":642,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"8301:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":643,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8315:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8301:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8283:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":646,"nodeType":"ExpressionStatement","src":"8283:38:2"},{"expression":{"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":647,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"8498:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":649,"indexExpression":{"id":648,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8508:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8498:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":650,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8515:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8498:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":652,"nodeType":"ExpressionStatement","src":"8498:23:2"}]},{"eventCall":{"arguments":[{"id":655,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"8556:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":656,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8562:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":657,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8566:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":654,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"8547:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8547:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":659,"nodeType":"EmitStatement","src":"8542:31:2"},{"expression":{"arguments":[{"id":661,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"8604:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":662,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8610:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":663,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8614:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":660,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"8584:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8584:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":665,"nodeType":"ExpressionStatement","src":"8584:37:2"}]},"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"7362:443:2","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":667,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7819:9:2","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"from","nameLocation":"7846:4:2","nodeType":"VariableDeclaration","scope":667,"src":"7838:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"7838:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"to","nameLocation":"7868:2:2","nodeType":"VariableDeclaration","scope":667,"src":"7860:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"7860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"amount","nameLocation":"7888:6:2","nodeType":"VariableDeclaration","scope":667,"src":"7880:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"7880:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7828:72:2"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"7918:0:2"},"scope":912,"src":"7810:818:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":723,"nodeType":"Block","src":"8969:470:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":676,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"8987:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9006:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8998:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"8998:7:2","typeDescriptions":{}}},"id":680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8998:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8987:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9010:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":675,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8979:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8979:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":684,"nodeType":"ExpressionStatement","src":"8979:65:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9084:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9076:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"9076:7:2","typeDescriptions":{}}},"id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9076:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":690,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"9088:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":691,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"9097:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":685,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"9055:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9055:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":693,"nodeType":"ExpressionStatement","src":"9055:49:2"},{"expression":{"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":694,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9115:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":695,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"9131:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9115:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":697,"nodeType":"ExpressionStatement","src":"9115:22:2"},{"id":704,"nodeType":"UncheckedBlock","src":"9147:175:2","statements":[{"expression":{"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":698,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"9283:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":700,"indexExpression":{"id":699,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"9293:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9283:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":701,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"9305:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9283:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":703,"nodeType":"ExpressionStatement","src":"9283:28:2"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9353:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9345:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"9345:7:2","typeDescriptions":{}}},"id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9345:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":710,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"9357:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":711,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"9366:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":705,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"9336:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9336:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"EmitStatement","src":"9331:42:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9404:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"9404:7:2","typeDescriptions":{}}},"id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9404:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":719,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"9416:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":720,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"9425:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":714,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"9384:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9384:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":722,"nodeType":"ExpressionStatement","src":"9384:48:2"}]},"documentation":{"id":668,"nodeType":"StructuredDocumentation","src":"8634:265:2","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":724,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8913:5:2","nodeType":"FunctionDefinition","parameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"account","nameLocation":"8927:7:2","nodeType":"VariableDeclaration","scope":724,"src":"8919:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"8919:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":672,"mutability":"mutable","name":"amount","nameLocation":"8944:6:2","nodeType":"VariableDeclaration","scope":724,"src":"8936:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":671,"name":"uint256","nodeType":"ElementaryTypeName","src":"8936:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8918:33:2"},"returnParameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"8969:0:2"},"scope":912,"src":"8904:535:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":795,"nodeType":"Block","src":"9824:594:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":733,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"9842:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9861:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9853:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"9853:7:2","typeDescriptions":{}}},"id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9853:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9842:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9865:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":732,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9834:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9834:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":741,"nodeType":"ExpressionStatement","src":"9834:67:2"},{"expression":{"arguments":[{"id":743,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"9933:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9950:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9942:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"9942:7:2","typeDescriptions":{}}},"id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9942:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":748,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"9954:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":742,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"9912:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9912:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":750,"nodeType":"ExpressionStatement","src":"9912:49:2"},{"assignments":[752],"declarations":[{"constant":false,"id":752,"mutability":"mutable","name":"accountBalance","nameLocation":"9980:14:2","nodeType":"VariableDeclaration","scope":795,"src":"9972:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"9972:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":756,"initialValue":{"baseExpression":{"id":753,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"9997:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":755,"indexExpression":{"id":754,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10007:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9997:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9972:43:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":758,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"10033:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":759,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"10051:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10059:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":757,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10025:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10025:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":763,"nodeType":"ExpressionStatement","src":"10025:71:2"},{"id":776,"nodeType":"UncheckedBlock","src":"10106:194:2","statements":[{"expression":{"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":764,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"10130:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":766,"indexExpression":{"id":765,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10140:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10130:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"10151:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":768,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"10168:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10151:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10130:44:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":771,"nodeType":"ExpressionStatement","src":"10130:44:2"},{"expression":{"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":772,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"10267:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":773,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"10283:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10267:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":775,"nodeType":"ExpressionStatement","src":"10267:22:2"}]},{"eventCall":{"arguments":[{"id":778,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10324:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10341:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10333:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:2","typeDescriptions":{}}},"id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":783,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"10345:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"10315:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10315:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":785,"nodeType":"EmitStatement","src":"10310:42:2"},{"expression":{"arguments":[{"id":787,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10383:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10392:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"10392:7:2","typeDescriptions":{}}},"id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10392:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":792,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"10404:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":786,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"10363:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10363:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":794,"nodeType":"ExpressionStatement","src":"10363:48:2"}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"9445:309:2","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":796,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9768:5:2","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"account","nameLocation":"9782:7:2","nodeType":"VariableDeclaration","scope":796,"src":"9774:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"9774:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"amount","nameLocation":"9799:6:2","nodeType":"VariableDeclaration","scope":796,"src":"9791:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":728,"name":"uint256","nodeType":"ElementaryTypeName","src":"9791:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9773:33:2"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[],"src":"9824:0:2"},"scope":912,"src":"9759:659:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":840,"nodeType":"Block","src":"10954:257:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":807,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"10972:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10989:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10981:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"10981:7:2","typeDescriptions":{}}},"id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10981:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10972:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10993:38:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":806,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10964:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10964:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":815,"nodeType":"ExpressionStatement","src":"10964:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":817,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"11050:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11069:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11061:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"11061:7:2","typeDescriptions":{}}},"id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11061:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11050:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11073:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":816,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11042:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11042:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":825,"nodeType":"ExpressionStatement","src":"11042:68:2"},{"expression":{"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":826,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"11121:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":829,"indexExpression":{"id":827,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"11133:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11121:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":830,"indexExpression":{"id":828,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"11140:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11121:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":831,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"11151:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11121:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":833,"nodeType":"ExpressionStatement","src":"11121:36:2"},{"eventCall":{"arguments":[{"id":835,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"11181:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":836,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"11188:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":837,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"11197:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":834,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"11172:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11172:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":839,"nodeType":"EmitStatement","src":"11167:37:2"}]},"documentation":{"id":797,"nodeType":"StructuredDocumentation","src":"10424:412:2","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":841,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10850:8:2","nodeType":"FunctionDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"owner","nameLocation":"10876:5:2","nodeType":"VariableDeclaration","scope":841,"src":"10868:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"10868:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":801,"mutability":"mutable","name":"spender","nameLocation":"10899:7:2","nodeType":"VariableDeclaration","scope":841,"src":"10891:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"10891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":803,"mutability":"mutable","name":"amount","nameLocation":"10924:6:2","nodeType":"VariableDeclaration","scope":841,"src":"10916:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"10916:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10858:78:2"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[],"src":"10954:0:2"},"scope":912,"src":"10841:370:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":883,"nodeType":"Block","src":"11612:321:2","statements":[{"assignments":[852],"declarations":[{"constant":false,"id":852,"mutability":"mutable","name":"currentAllowance","nameLocation":"11630:16:2","nodeType":"VariableDeclaration","scope":883,"src":"11622:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"11622:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":857,"initialValue":{"arguments":[{"id":854,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"11659:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":855,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"11666:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":853,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"11649:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11649:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11622:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":858,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"11688:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11713:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":860,"name":"uint256","nodeType":"ElementaryTypeName","src":"11713:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":859,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11708:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11708:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11722:3:2","memberName":"max","nodeType":"MemberAccess","src":"11708:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11688:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":882,"nodeType":"IfStatement","src":"11684:243:2","trueBody":{"id":881,"nodeType":"Block","src":"11727:200:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":866,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"11749:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":867,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"11769:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11749:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11777:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":865,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11741:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11741:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"ExpressionStatement","src":"11741:68:2"},{"id":880,"nodeType":"UncheckedBlock","src":"11823:94:2","statements":[{"expression":{"arguments":[{"id":873,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"11860:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":874,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"11867:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":875,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"11876:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":876,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"11895:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11876:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":872,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"11851:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11851:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":879,"nodeType":"ExpressionStatement","src":"11851:51:2"}]}]}}]},"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"11217:270:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":884,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11501:15:2","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"owner","nameLocation":"11534:5:2","nodeType":"VariableDeclaration","scope":884,"src":"11526:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"11526:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"spender","nameLocation":"11557:7:2","nodeType":"VariableDeclaration","scope":884,"src":"11549:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"11549:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"amount","nameLocation":"11582:6:2","nodeType":"VariableDeclaration","scope":884,"src":"11574:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"11574:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11516:78:2"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[],"src":"11612:0:2"},"scope":912,"src":"11492:441:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":894,"nodeType":"Block","src":"12636:2:2","statements":[]},"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"11939:573:2","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":895,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12526:20:2","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"from","nameLocation":"12564:4:2","nodeType":"VariableDeclaration","scope":895,"src":"12556:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"12556:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":889,"mutability":"mutable","name":"to","nameLocation":"12586:2:2","nodeType":"VariableDeclaration","scope":895,"src":"12578:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"12578:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"amount","nameLocation":"12606:6:2","nodeType":"VariableDeclaration","scope":895,"src":"12598:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"12598:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12546:72:2"},"returnParameters":{"id":893,"nodeType":"ParameterList","parameters":[],"src":"12636:0:2"},"scope":912,"src":"12517:121:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":905,"nodeType":"Block","src":"13344:2:2","statements":[]},"documentation":{"id":896,"nodeType":"StructuredDocumentation","src":"12644:577:2","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":906,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"13235:19:2","nodeType":"FunctionDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"from","nameLocation":"13272:4:2","nodeType":"VariableDeclaration","scope":906,"src":"13264:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":897,"name":"address","nodeType":"ElementaryTypeName","src":"13264:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"to","nameLocation":"13294:2:2","nodeType":"VariableDeclaration","scope":906,"src":"13286:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"13286:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":902,"mutability":"mutable","name":"amount","nameLocation":"13314:6:2","nodeType":"VariableDeclaration","scope":906,"src":"13306:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"13306:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13254:72:2"},"returnParameters":{"id":904,"nodeType":"ParameterList","parameters":[],"src":"13344:0:2"},"scope":912,"src":"13226:120:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"13352:254:2","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":911,"mutability":"mutable","name":"__gap","nameLocation":"13631:5:2","nodeType":"VariableDeclaration","scope":912,"src":"13611:25:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage","typeString":"uint256[45]"},"typeName":{"baseType":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"13611:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":910,"length":{"hexValue":"3435","id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13619:2:2","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"nodeType":"ArrayTypeName","src":"13611:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage_ptr","typeString":"uint256[45]"}},"visibility":"private"}],"scope":913,"src":"1480:12159:2","usedErrors":[],"usedEvents":[146,924,933]}],"src":"105:13535:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","exportedSymbols":{"IERC20Upgradeable":[990]},"id":991,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":914,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"131:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":990,"linearizedBaseContracts":[990],"name":"IERC20Upgradeable","nameLocation":"212:17:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"236:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":924,"name":"Transfer","nameLocation":"405:8:3","nodeType":"EventDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"430:4:3","nodeType":"VariableDeclaration","scope":924,"src":"414:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":920,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"452:2:3","nodeType":"VariableDeclaration","scope":924,"src":"436:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":922,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"464:5:3","nodeType":"VariableDeclaration","scope":924,"src":"456:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"413:57:3"},"src":"399:72:3"},{"anonymous":false,"documentation":{"id":925,"nodeType":"StructuredDocumentation","src":"477:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":933,"name":"Approval","nameLocation":"636:8:3","nodeType":"EventDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"661:5:3","nodeType":"VariableDeclaration","scope":933,"src":"645:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":929,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"684:7:3","nodeType":"VariableDeclaration","scope":933,"src":"668:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":931,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"701:5:3","nodeType":"VariableDeclaration","scope":933,"src":"693:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"644:63:3"},"src":"630:78:3"},{"documentation":{"id":934,"nodeType":"StructuredDocumentation","src":"714:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":939,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"794:11:3","nodeType":"FunctionDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[],"src":"805:2:3"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":939,"src":"831:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":936,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"830:9:3"},"scope":990,"src":"785:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":940,"nodeType":"StructuredDocumentation","src":"846:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":947,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"932:9:3","nodeType":"FunctionDefinition","parameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"account","nameLocation":"950:7:3","nodeType":"VariableDeclaration","scope":947,"src":"942:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"941:17:3"},"returnParameters":{"id":946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":947,"src":"982:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":944,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:9:3"},"scope":990,"src":"923:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":948,"nodeType":"StructuredDocumentation","src":"997:202:3","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":957,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:3","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"to","nameLocation":"1230:2:3","nodeType":"VariableDeclaration","scope":957,"src":"1222:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":949,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":952,"mutability":"mutable","name":"amount","nameLocation":"1242:6:3","nodeType":"VariableDeclaration","scope":957,"src":"1234:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:28:3"},"returnParameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":957,"src":"1268:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":954,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:3"},"scope":990,"src":"1204:70:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":958,"nodeType":"StructuredDocumentation","src":"1280:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":967,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:3","nodeType":"FunctionDefinition","parameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"owner","nameLocation":"1576:5:3","nodeType":"VariableDeclaration","scope":967,"src":"1568:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"spender","nameLocation":"1591:7:3","nodeType":"VariableDeclaration","scope":967,"src":"1583:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:3"},"returnParameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":967,"src":"1623:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:3"},"scope":990,"src":"1549:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"1638:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":977,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2294:7:3","nodeType":"FunctionDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"spender","nameLocation":"2310:7:3","nodeType":"VariableDeclaration","scope":977,"src":"2302:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"amount","nameLocation":"2327:6:3","nodeType":"VariableDeclaration","scope":977,"src":"2319:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":971,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:33:3"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":977,"src":"2353:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":974,"name":"bool","nodeType":"ElementaryTypeName","src":"2353:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2352:6:3"},"scope":990,"src":"2285:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"2365:287:3","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":989,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2666:12:3","nodeType":"FunctionDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"from","nameLocation":"2696:4:3","nodeType":"VariableDeclaration","scope":989,"src":"2688:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"2688:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"to","nameLocation":"2718:2:3","nodeType":"VariableDeclaration","scope":989,"src":"2710:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"amount","nameLocation":"2738:6:3","nodeType":"VariableDeclaration","scope":989,"src":"2730:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"2730:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:72:3"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":989,"src":"2769:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":986,"name":"bool","nodeType":"ElementaryTypeName","src":"2769:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2768:6:3"},"scope":990,"src":"2657:118:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":991,"src":"202:2575:3","usedErrors":[],"usedEvents":[924,933]}],"src":"106:2672:3"},"id":3},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","exportedSymbols":{"IERC20MetadataUpgradeable":[1015],"IERC20Upgradeable":[990]},"id":1016,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":992,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"../IERC20Upgradeable.sol","id":993,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1016,"sourceUnit":991,"src":"135:34:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":995,"name":"IERC20Upgradeable","nameLocations":["327:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":990,"src":"327:17:4"},"id":996,"nodeType":"InheritanceSpecifier","src":"327:17:4"}],"canonicalName":"IERC20MetadataUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"171:116:4","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1015,"linearizedBaseContracts":[1015,990],"name":"IERC20MetadataUpgradeable","nameLocation":"298:25:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"351:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1002,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"419:4:4","nodeType":"FunctionDefinition","parameters":{"id":998,"nodeType":"ParameterList","parameters":[],"src":"423:2:4"},"returnParameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1002,"src":"449:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":999,"name":"string","nodeType":"ElementaryTypeName","src":"449:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"448:15:4"},"scope":1015,"src":"410:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"470:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1008,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"540:6:4","nodeType":"FunctionDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[],"src":"546:2:4"},"returnParameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1008,"src":"572:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1005,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"571:15:4"},"scope":1015,"src":"531:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1009,"nodeType":"StructuredDocumentation","src":"593:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1014,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"672:8:4","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[],"src":"680:2:4"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1014,"src":"706:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1011,"name":"uint8","nodeType":"ElementaryTypeName","src":"706:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"705:7:4"},"scope":1015,"src":"663:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1016,"src":"288:427:4","usedErrors":[],"usedEvents":[924,933]}],"src":"110:606:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1299]},"id":1300,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1017,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1018,"nodeType":"StructuredDocumentation","src":"126:67:5","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1299,"linearizedBaseContracts":[1299],"name":"AddressUpgradeable","nameLocation":"202:18:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1032,"nodeType":"Block","src":"1252:254:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1026,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"1476:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1484:4:5","memberName":"code","nodeType":"MemberAccess","src":"1476:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1489:6:5","memberName":"length","nodeType":"MemberAccess","src":"1476:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1498:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1025,"id":1031,"nodeType":"Return","src":"1469:30:5"}]},"documentation":{"id":1019,"nodeType":"StructuredDocumentation","src":"227:954:5","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1033,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1195:10:5","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"account","nameLocation":"1214:7:5","nodeType":"VariableDeclaration","scope":1033,"src":"1206:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1205:17:5"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1033,"src":"1246:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1023,"name":"bool","nodeType":"ElementaryTypeName","src":"1246:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1245:6:5"},"scope":1299,"src":"1186:320:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1066,"nodeType":"Block","src":"2494:241:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1044,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2520:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1299","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1299","typeString":"library AddressUpgradeable"}],"id":1043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1042,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:5","typeDescriptions":{}}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2512:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2526:7:5","memberName":"balance","nodeType":"MemberAccess","src":"2512:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1047,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"2537:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2545:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1041,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2504:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2504:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1051,"nodeType":"ExpressionStatement","src":"2504:73:5"},{"assignments":[1053,null],"declarations":[{"constant":false,"id":1053,"mutability":"mutable","name":"success","nameLocation":"2594:7:5","nodeType":"VariableDeclaration","scope":1066,"src":"2589:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1052,"name":"bool","nodeType":"ElementaryTypeName","src":"2589:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1060,"initialValue":{"arguments":[{"hexValue":"","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2637:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1054,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"2607:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2617:4:5","memberName":"call","nodeType":"MemberAccess","src":"2607:14:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1056,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"2629:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2607:29:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2607:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2588:52:5"},{"expression":{"arguments":[{"id":1062,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"2658:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2667:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1061,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2650:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2650:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1065,"nodeType":"ExpressionStatement","src":"2650:78:5"}]},"documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"1512:906:5","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1067,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2432:9:5","nodeType":"FunctionDefinition","parameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"recipient","nameLocation":"2458:9:5","nodeType":"VariableDeclaration","scope":1067,"src":"2442:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"2442:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"amount","nameLocation":"2477:6:5","nodeType":"VariableDeclaration","scope":1067,"src":"2469:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1037,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2441:43:5"},"returnParameters":{"id":1040,"nodeType":"ParameterList","parameters":[],"src":"2494:0:5"},"scope":1299,"src":"2423:312:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1084,"nodeType":"Block","src":"3566:96:5","statements":[{"expression":{"arguments":[{"id":1078,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"3605:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1079,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"3613:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3619:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3622:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1077,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1125,1169],"referencedDeclaration":1169,"src":"3583:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3583:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1076,"id":1083,"nodeType":"Return","src":"3576:79:5"}]},"documentation":{"id":1068,"nodeType":"StructuredDocumentation","src":"2741:731:5","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1085,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3486:12:5","nodeType":"FunctionDefinition","parameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"target","nameLocation":"3507:6:5","nodeType":"VariableDeclaration","scope":1085,"src":"3499:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"data","nameLocation":"3528:4:5","nodeType":"VariableDeclaration","scope":1085,"src":"3515:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1071,"name":"bytes","nodeType":"ElementaryTypeName","src":"3515:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3498:35:5"},"returnParameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1085,"src":"3552:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1074,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3551:14:5"},"scope":1299,"src":"3477:185:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1104,"nodeType":"Block","src":"4031:76:5","statements":[{"expression":{"arguments":[{"id":1098,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"4070:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1099,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"4078:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4084:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1101,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"4087:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1097,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1125,1169],"referencedDeclaration":1169,"src":"4048:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4048:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1096,"id":1103,"nodeType":"Return","src":"4041:59:5"}]},"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"3668:211:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1105,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3893:12:5","nodeType":"FunctionDefinition","parameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"target","nameLocation":"3923:6:5","nodeType":"VariableDeclaration","scope":1105,"src":"3915:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"3915:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1090,"mutability":"mutable","name":"data","nameLocation":"3952:4:5","nodeType":"VariableDeclaration","scope":1105,"src":"3939:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1089,"name":"bytes","nodeType":"ElementaryTypeName","src":"3939:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"errorMessage","nameLocation":"3980:12:5","nodeType":"VariableDeclaration","scope":1105,"src":"3966:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1091,"name":"string","nodeType":"ElementaryTypeName","src":"3966:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3905:93:5"},"returnParameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1105,"src":"4017:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1094,"name":"bytes","nodeType":"ElementaryTypeName","src":"4017:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4016:14:5"},"scope":1299,"src":"3884:223:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1124,"nodeType":"Block","src":"4612:111:5","statements":[{"expression":{"arguments":[{"id":1118,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"4651:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1119,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"4659:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"4665:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4672:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1117,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1125,1169],"referencedDeclaration":1169,"src":"4629:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4629:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1116,"id":1123,"nodeType":"Return","src":"4622:94:5"}]},"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"4113:351:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4478:21:5","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"target","nameLocation":"4517:6:5","nodeType":"VariableDeclaration","scope":1125,"src":"4509:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"4509:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1110,"mutability":"mutable","name":"data","nameLocation":"4546:4:5","nodeType":"VariableDeclaration","scope":1125,"src":"4533:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1109,"name":"bytes","nodeType":"ElementaryTypeName","src":"4533:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1112,"mutability":"mutable","name":"value","nameLocation":"4568:5:5","nodeType":"VariableDeclaration","scope":1125,"src":"4560:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"4560:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4499:80:5"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1125,"src":"4598:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1114,"name":"bytes","nodeType":"ElementaryTypeName","src":"4598:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4597:14:5"},"scope":1299,"src":"4469:254:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1168,"nodeType":"Block","src":"5150:267:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1142,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5176:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1299","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1299","typeString":"library AddressUpgradeable"}],"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5168:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"5168:7:5","typeDescriptions":{}}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5168:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5182:7:5","memberName":"balance","nodeType":"MemberAccess","src":"5168:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"5193:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5200:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1139,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5160:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1149,"nodeType":"ExpressionStatement","src":"5160:81:5"},{"assignments":[1151,1153],"declarations":[{"constant":false,"id":1151,"mutability":"mutable","name":"success","nameLocation":"5257:7:5","nodeType":"VariableDeclaration","scope":1168,"src":"5252:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1150,"name":"bool","nodeType":"ElementaryTypeName","src":"5252:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"returndata","nameLocation":"5279:10:5","nodeType":"VariableDeclaration","scope":1168,"src":"5266:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1152,"name":"bytes","nodeType":"ElementaryTypeName","src":"5266:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1160,"initialValue":{"arguments":[{"id":1158,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"5319:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1154,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5293:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5300:4:5","memberName":"call","nodeType":"MemberAccess","src":"5293:11:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"5312:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5293:25:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5293:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5251:73:5"},{"expression":{"arguments":[{"id":1162,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5368:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1163,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"5376:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1164,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"5385:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1165,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"5397:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1161,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"5341:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5341:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1138,"id":1167,"nodeType":"Return","src":"5334:76:5"}]},"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"4729:237:5","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1169,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4980:21:5","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"target","nameLocation":"5019:6:5","nodeType":"VariableDeclaration","scope":1169,"src":"5011:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"data","nameLocation":"5048:4:5","nodeType":"VariableDeclaration","scope":1169,"src":"5035:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1129,"name":"bytes","nodeType":"ElementaryTypeName","src":"5035:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"value","nameLocation":"5070:5:5","nodeType":"VariableDeclaration","scope":1169,"src":"5062:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1131,"name":"uint256","nodeType":"ElementaryTypeName","src":"5062:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"errorMessage","nameLocation":"5099:12:5","nodeType":"VariableDeclaration","scope":1169,"src":"5085:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1133,"name":"string","nodeType":"ElementaryTypeName","src":"5085:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5001:116:5"},"returnParameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1169,"src":"5136:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1136,"name":"bytes","nodeType":"ElementaryTypeName","src":"5136:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5135:14:5"},"scope":1299,"src":"4971:446:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1185,"nodeType":"Block","src":"5694:97:5","statements":[{"expression":{"arguments":[{"id":1180,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"5730:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1181,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"5738:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5744:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1179,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1186,1215],"referencedDeclaration":1215,"src":"5711:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5711:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1178,"id":1184,"nodeType":"Return","src":"5704:80:5"}]},"documentation":{"id":1170,"nodeType":"StructuredDocumentation","src":"5423:166:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1186,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5603:18:5","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"target","nameLocation":"5630:6:5","nodeType":"VariableDeclaration","scope":1186,"src":"5622:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"5622:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"data","nameLocation":"5651:4:5","nodeType":"VariableDeclaration","scope":1186,"src":"5638:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1173,"name":"bytes","nodeType":"ElementaryTypeName","src":"5638:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5621:35:5"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1186,"src":"5680:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1176,"name":"bytes","nodeType":"ElementaryTypeName","src":"5680:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5679:14:5"},"scope":1299,"src":"5594:197:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1214,"nodeType":"Block","src":"6133:168:5","statements":[{"assignments":[1199,1201],"declarations":[{"constant":false,"id":1199,"mutability":"mutable","name":"success","nameLocation":"6149:7:5","nodeType":"VariableDeclaration","scope":1214,"src":"6144:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1198,"name":"bool","nodeType":"ElementaryTypeName","src":"6144:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"returndata","nameLocation":"6171:10:5","nodeType":"VariableDeclaration","scope":1214,"src":"6158:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1200,"name":"bytes","nodeType":"ElementaryTypeName","src":"6158:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1206,"initialValue":{"arguments":[{"id":1204,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"6203:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1202,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"6185:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6192:10:5","memberName":"staticcall","nodeType":"MemberAccess","src":"6185:17:5","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6185:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6143:65:5"},{"expression":{"arguments":[{"id":1208,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"6252:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1209,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"6260:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1210,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"6269:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1211,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"6281:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1207,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"6225:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1197,"id":1213,"nodeType":"Return","src":"6218:76:5"}]},"documentation":{"id":1187,"nodeType":"StructuredDocumentation","src":"5797:173:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5984:18:5","nodeType":"FunctionDefinition","parameters":{"id":1194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"target","nameLocation":"6020:6:5","nodeType":"VariableDeclaration","scope":1215,"src":"6012:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"6012:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"data","nameLocation":"6049:4:5","nodeType":"VariableDeclaration","scope":1215,"src":"6036:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1190,"name":"bytes","nodeType":"ElementaryTypeName","src":"6036:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"errorMessage","nameLocation":"6077:12:5","nodeType":"VariableDeclaration","scope":1215,"src":"6063:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1192,"name":"string","nodeType":"ElementaryTypeName","src":"6063:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6002:93:5"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1215,"src":"6119:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1195,"name":"bytes","nodeType":"ElementaryTypeName","src":"6119:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6118:14:5"},"scope":1299,"src":"5975:326:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1253,"nodeType":"Block","src":"6783:434:5","statements":[{"condition":{"id":1229,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"6797:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1251,"nodeType":"Block","src":"7153:58:5","statements":[{"expression":{"arguments":[{"id":1247,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7175:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1248,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"7187:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1246,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"7167:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7167:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1250,"nodeType":"ExpressionStatement","src":"7167:33:5"}]},"id":1252,"nodeType":"IfStatement","src":"6793:418:5","trueBody":{"id":1245,"nodeType":"Block","src":"6806:341:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1230,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"6824:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6835:6:5","memberName":"length","nodeType":"MemberAccess","src":"6824:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6845:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6824:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1242,"nodeType":"IfStatement","src":"6820:286:5","trueBody":{"id":1241,"nodeType":"Block","src":"6848:258:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1236,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"7050:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1235,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"7039:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7059:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1234,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7031:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7031:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1240,"nodeType":"ExpressionStatement","src":"7031:60:5"}]}},{"expression":{"id":1243,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7126:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1228,"id":1244,"nodeType":"Return","src":"7119:17:5"}]}}]},"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"6307:277:5","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1254,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"6598:26:5","nodeType":"FunctionDefinition","parameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"target","nameLocation":"6642:6:5","nodeType":"VariableDeclaration","scope":1254,"src":"6634:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"success","nameLocation":"6663:7:5","nodeType":"VariableDeclaration","scope":1254,"src":"6658:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1219,"name":"bool","nodeType":"ElementaryTypeName","src":"6658:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"returndata","nameLocation":"6693:10:5","nodeType":"VariableDeclaration","scope":1254,"src":"6680:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1221,"name":"bytes","nodeType":"ElementaryTypeName","src":"6680:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1224,"mutability":"mutable","name":"errorMessage","nameLocation":"6727:12:5","nodeType":"VariableDeclaration","scope":1254,"src":"6713:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1223,"name":"string","nodeType":"ElementaryTypeName","src":"6713:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6624:121:5"},"returnParameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1254,"src":"6769:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1226,"name":"bytes","nodeType":"ElementaryTypeName","src":"6769:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6768:14:5"},"scope":1299,"src":"6589:628:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1277,"nodeType":"Block","src":"7598:135:5","statements":[{"condition":{"id":1266,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"7612:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1275,"nodeType":"Block","src":"7669:58:5","statements":[{"expression":{"arguments":[{"id":1271,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"7691:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1272,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"7703:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1270,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"7683:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7683:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1274,"nodeType":"ExpressionStatement","src":"7683:33:5"}]},"id":1276,"nodeType":"IfStatement","src":"7608:119:5","trueBody":{"id":1269,"nodeType":"Block","src":"7621:42:5","statements":[{"expression":{"id":1267,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"7642:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1265,"id":1268,"nodeType":"Return","src":"7635:17:5"}]}}]},"documentation":{"id":1255,"nodeType":"StructuredDocumentation","src":"7223:210:5","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1278,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7447:16:5","nodeType":"FunctionDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"success","nameLocation":"7478:7:5","nodeType":"VariableDeclaration","scope":1278,"src":"7473:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1256,"name":"bool","nodeType":"ElementaryTypeName","src":"7473:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"returndata","nameLocation":"7508:10:5","nodeType":"VariableDeclaration","scope":1278,"src":"7495:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1258,"name":"bytes","nodeType":"ElementaryTypeName","src":"7495:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"errorMessage","nameLocation":"7542:12:5","nodeType":"VariableDeclaration","scope":1278,"src":"7528:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1260,"name":"string","nodeType":"ElementaryTypeName","src":"7528:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:97:5"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1278,"src":"7584:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1263,"name":"bytes","nodeType":"ElementaryTypeName","src":"7584:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:14:5"},"scope":1299,"src":"7438:295:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1297,"nodeType":"Block","src":"7822:457:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1285,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"7898:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7909:6:5","memberName":"length","nodeType":"MemberAccess","src":"7898:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7918:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7898:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1295,"nodeType":"Block","src":"8228:45:5","statements":[{"expression":{"arguments":[{"id":1292,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"8249:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1291,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8242:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8242:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1294,"nodeType":"ExpressionStatement","src":"8242:20:5"}]},"id":1296,"nodeType":"IfStatement","src":"7894:379:5","trueBody":{"id":1290,"nodeType":"Block","src":"7921:301:5","statements":[{"AST":{"nodeType":"YulBlock","src":"8079:133:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8097:40:5","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8126:10:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8120:5:5"},"nodeType":"YulFunctionCall","src":"8120:17:5"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8101:15:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8165:2:5","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8169:10:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8161:3:5"},"nodeType":"YulFunctionCall","src":"8161:19:5"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8182:15:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8154:6:5"},"nodeType":"YulFunctionCall","src":"8154:44:5"},"nodeType":"YulExpressionStatement","src":"8154:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1280,"isOffset":false,"isSlot":false,"src":"8126:10:5","valueSize":1},{"declaration":1280,"isOffset":false,"isSlot":false,"src":"8169:10:5","valueSize":1}],"id":1289,"nodeType":"InlineAssembly","src":"8070:142:5"}]}}]},"id":1298,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"7748:7:5","nodeType":"FunctionDefinition","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"returndata","nameLocation":"7769:10:5","nodeType":"VariableDeclaration","scope":1298,"src":"7756:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1279,"name":"bytes","nodeType":"ElementaryTypeName","src":"7756:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1282,"mutability":"mutable","name":"errorMessage","nameLocation":"7795:12:5","nodeType":"VariableDeclaration","scope":1298,"src":"7781:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1281,"name":"string","nodeType":"ElementaryTypeName","src":"7781:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7755:53:5"},"returnParameters":{"id":1284,"nodeType":"ParameterList","parameters":[],"src":"7822:0:5"},"scope":1299,"src":"7739:540:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1300,"src":"194:8087:5","usedErrors":[],"usedEvents":[]}],"src":"101:8181:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1299],"ContextUpgradeable":[1341],"Initializable":[300]},"id":1342,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1301,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1302,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1342,"sourceUnit":301,"src":"110:42:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1304,"name":"Initializable","nameLocations":["691:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":300,"src":"691:13:6"},"id":1305,"nodeType":"InheritanceSpecifier","src":"691:13:6"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"154:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1341,"linearizedBaseContracts":[1341,300],"name":"ContextUpgradeable","nameLocation":"669:18:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1310,"nodeType":"Block","src":"763:7:6","statements":[]},"id":1311,"implemented":true,"kind":"function","modifiers":[{"id":1308,"kind":"modifierInvocation","modifierName":{"id":1307,"name":"onlyInitializing","nameLocations":["746:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":245,"src":"746:16:6"},"nodeType":"ModifierInvocation","src":"746:16:6"}],"name":"__Context_init","nameLocation":"720:14:6","nodeType":"FunctionDefinition","parameters":{"id":1306,"nodeType":"ParameterList","parameters":[],"src":"734:2:6"},"returnParameters":{"id":1309,"nodeType":"ParameterList","parameters":[],"src":"763:0:6"},"scope":1341,"src":"711:59:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1316,"nodeType":"Block","src":"838:7:6","statements":[]},"id":1317,"implemented":true,"kind":"function","modifiers":[{"id":1314,"kind":"modifierInvocation","modifierName":{"id":1313,"name":"onlyInitializing","nameLocations":["821:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":245,"src":"821:16:6"},"nodeType":"ModifierInvocation","src":"821:16:6"}],"name":"__Context_init_unchained","nameLocation":"785:24:6","nodeType":"FunctionDefinition","parameters":{"id":1312,"nodeType":"ParameterList","parameters":[],"src":"809:2:6"},"returnParameters":{"id":1315,"nodeType":"ParameterList","parameters":[],"src":"838:0:6"},"scope":1341,"src":"776:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1325,"nodeType":"Block","src":"912:34:6","statements":[{"expression":{"expression":{"id":1322,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:6","memberName":"sender","nodeType":"MemberAccess","src":"929:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1321,"id":1324,"nodeType":"Return","src":"922:17:6"}]},"id":1326,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:6","nodeType":"FunctionDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[],"src":"869:2:6"},"returnParameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1326,"src":"903:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1319,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:6"},"scope":1341,"src":"850:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1334,"nodeType":"Block","src":"1019:32:6","statements":[{"expression":{"expression":{"id":1331,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:6","memberName":"data","nodeType":"MemberAccess","src":"1036:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1330,"id":1333,"nodeType":"Return","src":"1029:15:6"}]},"id":1335,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:6","nodeType":"FunctionDefinition","parameters":{"id":1327,"nodeType":"ParameterList","parameters":[],"src":"969:2:6"},"returnParameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1335,"src":"1003:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1328,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:6"},"scope":1341,"src":"952:99:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"1057:254:6","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1340,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:6","nodeType":"VariableDeclaration","scope":1341,"src":"1316:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1339,"length":{"hexValue":"3530","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:6","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1342,"src":"651:693:6","usedErrors":[],"usedEvents":[146]}],"src":"86:1259:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1419]},"id":1420,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1343,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1344,"nodeType":"StructuredDocumentation","src":"131:70:7","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1419,"linearizedBaseContracts":[1419],"name":"IERC20","nameLocation":"212:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1345,"nodeType":"StructuredDocumentation","src":"225:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1353,"name":"Transfer","nameLocation":"394:8:7","nodeType":"EventDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:7","nodeType":"VariableDeclaration","scope":1353,"src":"403:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1346,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1349,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:7","nodeType":"VariableDeclaration","scope":1353,"src":"425:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1351,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:7","nodeType":"VariableDeclaration","scope":1353,"src":"445:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:7"},"src":"388:72:7"},{"anonymous":false,"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"466:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1362,"name":"Approval","nameLocation":"625:8:7","nodeType":"EventDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:7","nodeType":"VariableDeclaration","scope":1362,"src":"634:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1358,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:7","nodeType":"VariableDeclaration","scope":1362,"src":"657:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1357,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1360,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:7","nodeType":"VariableDeclaration","scope":1362,"src":"682:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:7"},"src":"619:78:7"},{"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"703:66:7","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1368,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:7","nodeType":"FunctionDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[],"src":"794:2:7"},"returnParameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1368,"src":"820:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:7"},"scope":1419,"src":"774:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1369,"nodeType":"StructuredDocumentation","src":"835:72:7","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1376,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:7","nodeType":"FunctionDefinition","parameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"account","nameLocation":"939:7:7","nodeType":"VariableDeclaration","scope":1376,"src":"931:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:7"},"returnParameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1376,"src":"971:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:7"},"scope":1419,"src":"912:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1377,"nodeType":"StructuredDocumentation","src":"986:202:7","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1386,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:7","nodeType":"FunctionDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"to","nameLocation":"1219:2:7","nodeType":"VariableDeclaration","scope":1386,"src":"1211:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1381,"mutability":"mutable","name":"amount","nameLocation":"1231:6:7","nodeType":"VariableDeclaration","scope":1386,"src":"1223:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:7"},"returnParameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1386,"src":"1257:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1383,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:7"},"scope":1419,"src":"1193:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"1269:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1396,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:7","nodeType":"FunctionDefinition","parameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"mutability":"mutable","name":"owner","nameLocation":"1565:5:7","nodeType":"VariableDeclaration","scope":1396,"src":"1557:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1388,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1391,"mutability":"mutable","name":"spender","nameLocation":"1580:7:7","nodeType":"VariableDeclaration","scope":1396,"src":"1572:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1390,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:7"},"returnParameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1396,"src":"1612:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:7"},"scope":1419,"src":"1538:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1397,"nodeType":"StructuredDocumentation","src":"1627:642:7","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1406,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:7","nodeType":"FunctionDefinition","parameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"spender","nameLocation":"2299:7:7","nodeType":"VariableDeclaration","scope":1406,"src":"2291:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1398,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"amount","nameLocation":"2316:6:7","nodeType":"VariableDeclaration","scope":1406,"src":"2308:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:7"},"returnParameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1406,"src":"2342:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1403,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:7"},"scope":1419,"src":"2274:74:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1407,"nodeType":"StructuredDocumentation","src":"2354:287:7","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1418,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:7","nodeType":"FunctionDefinition","parameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1409,"mutability":"mutable","name":"from","nameLocation":"2685:4:7","nodeType":"VariableDeclaration","scope":1418,"src":"2677:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1411,"mutability":"mutable","name":"to","nameLocation":"2707:2:7","nodeType":"VariableDeclaration","scope":1418,"src":"2699:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1410,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1413,"mutability":"mutable","name":"amount","nameLocation":"2727:6:7","nodeType":"VariableDeclaration","scope":1418,"src":"2719:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1412,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:7"},"returnParameters":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1418,"src":"2758:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1415,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:7"},"scope":1419,"src":"2646:118:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1420,"src":"202:2564:7","usedErrors":[],"usedEvents":[1353,1362]}],"src":"106:2661:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1455]},"id":1456,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1421,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"139:480:8","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":1455,"linearizedBaseContracts":[1455],"name":"IERC20Permit","nameLocation":"630:12:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1423,"nodeType":"StructuredDocumentation","src":"649:792:8","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":1440,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:8","nodeType":"FunctionDefinition","parameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"owner","nameLocation":"1479:5:8","nodeType":"VariableDeclaration","scope":1440,"src":"1471:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1424,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1427,"mutability":"mutable","name":"spender","nameLocation":"1502:7:8","nodeType":"VariableDeclaration","scope":1440,"src":"1494:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1426,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1429,"mutability":"mutable","name":"value","nameLocation":"1527:5:8","nodeType":"VariableDeclaration","scope":1440,"src":"1519:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1428,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1431,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:8","nodeType":"VariableDeclaration","scope":1440,"src":"1542:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"v","nameLocation":"1574:1:8","nodeType":"VariableDeclaration","scope":1440,"src":"1568:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1432,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"r","nameLocation":"1593:1:8","nodeType":"VariableDeclaration","scope":1440,"src":"1585:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"s","nameLocation":"1612:1:8","nodeType":"VariableDeclaration","scope":1440,"src":"1604:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:8"},"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[],"src":"1628:0:8"},"scope":1455,"src":"1446:183:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1441,"nodeType":"StructuredDocumentation","src":"1635:294:8","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1448,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:8","nodeType":"FunctionDefinition","parameters":{"id":1444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1443,"mutability":"mutable","name":"owner","nameLocation":"1958:5:8","nodeType":"VariableDeclaration","scope":1448,"src":"1950:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:8"},"returnParameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1448,"src":"1988:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:8"},"scope":1455,"src":"1934:63:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1449,"nodeType":"StructuredDocumentation","src":"2003:128:8","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1454,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:8","nodeType":"FunctionDefinition","parameters":{"id":1450,"nodeType":"ParameterList","parameters":[],"src":"2214:2:8"},"returnParameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1454,"src":"2240:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:8"},"scope":1455,"src":"2189:60:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1456,"src":"620:1631:8","usedErrors":[],"usedEvents":[]}],"src":"114:2138:8"},"id":8},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[2066],"IERC20":[1419],"IERC20Permit":[1455],"SafeERC20":[1736]},"id":1737,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1457,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1458,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1737,"sourceUnit":1420,"src":"140:23:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"../extensions/draft-IERC20Permit.sol","id":1459,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1737,"sourceUnit":1456,"src":"164:46:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1460,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1737,"sourceUnit":2067,"src":"211:36:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"249:457:9","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1736,"linearizedBaseContracts":[1736],"name":"SafeERC20","nameLocation":"715:9:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1464,"libraryName":{"id":1462,"name":"Address","nameLocations":["737:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2066,"src":"737:7:9"},"nodeType":"UsingForDirective","src":"731:26:9","typeName":{"id":1463,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":1486,"nodeType":"Block","src":"865:103:9","statements":[{"expression":{"arguments":[{"id":1475,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"895:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1478,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"925:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"931:8:9","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1386,"src":"925:14:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"940:8:9","memberName":"selector","nodeType":"MemberAccess","src":"925:23:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1481,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"950:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"954:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1476,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"902:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"906:18:9","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"902:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"902:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1474,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"875:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1419_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"875:86:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1485,"nodeType":"ExpressionStatement","src":"875:86:9"}]},"id":1487,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"772:12:9","nodeType":"FunctionDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1467,"mutability":"mutable","name":"token","nameLocation":"801:5:9","nodeType":"VariableDeclaration","scope":1487,"src":"794:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"},"typeName":{"id":1466,"nodeType":"UserDefinedTypeName","pathNode":{"id":1465,"name":"IERC20","nameLocations":["794:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1419,"src":"794:6:9"},"referencedDeclaration":1419,"src":"794:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1469,"mutability":"mutable","name":"to","nameLocation":"824:2:9","nodeType":"VariableDeclaration","scope":1487,"src":"816:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1468,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1471,"mutability":"mutable","name":"value","nameLocation":"844:5:9","nodeType":"VariableDeclaration","scope":1487,"src":"836:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"784:71:9"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[],"src":"865:0:9"},"scope":1736,"src":"763:205:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1512,"nodeType":"Block","src":"1102:113:9","statements":[{"expression":{"arguments":[{"id":1500,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"1132:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1503,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"1162:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:12:9","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1418,"src":"1162:18:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:8:9","memberName":"selector","nodeType":"MemberAccess","src":"1162:27:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1506,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"1191:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1507,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"1197:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"1201:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1501,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1139:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1143:18:9","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1139:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1139:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1499,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"1112:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1419_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1112:96:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1511,"nodeType":"ExpressionStatement","src":"1112:96:9"}]},"id":1513,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"983:16:9","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"mutability":"mutable","name":"token","nameLocation":"1016:5:9","nodeType":"VariableDeclaration","scope":1513,"src":"1009:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"},"typeName":{"id":1489,"nodeType":"UserDefinedTypeName","pathNode":{"id":1488,"name":"IERC20","nameLocations":["1009:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1419,"src":"1009:6:9"},"referencedDeclaration":1419,"src":"1009:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"from","nameLocation":"1039:4:9","nodeType":"VariableDeclaration","scope":1513,"src":"1031:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1491,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"to","nameLocation":"1061:2:9","nodeType":"VariableDeclaration","scope":1513,"src":"1053:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"value","nameLocation":"1081:5:9","nodeType":"VariableDeclaration","scope":1513,"src":"1073:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:93:9"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[],"src":"1102:0:9"},"scope":1736,"src":"974:241:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1556,"nodeType":"Block","src":"1581:497:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"1830:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1830:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1528,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1829:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1533,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1870:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1736","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1736","typeString":"library SafeERC20"}],"id":1532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1862:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1531,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:9","typeDescriptions":{}}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1535,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"1877:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1529,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"1846:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1852:9:9","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1396,"src":"1846:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1846:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1539,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1845:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1829:62:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1905:56:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":1524,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1808:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1808:163:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1543,"nodeType":"ExpressionStatement","src":"1808:163:9"},{"expression":{"arguments":[{"id":1545,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"2001:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1548,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"2031:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2037:7:9","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1406,"src":"2031:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2045:8:9","memberName":"selector","nodeType":"MemberAccess","src":"2031:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1551,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"2055:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"2064:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1546,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2008:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2012:18:9","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2008:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1544,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"1981:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1419_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1981:90:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1555,"nodeType":"ExpressionStatement","src":"1981:90:9"}]},"documentation":{"id":1514,"nodeType":"StructuredDocumentation","src":"1221:249:9","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":1557,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1484:11:9","nodeType":"FunctionDefinition","parameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1517,"mutability":"mutable","name":"token","nameLocation":"1512:5:9","nodeType":"VariableDeclaration","scope":1557,"src":"1505:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"},"typeName":{"id":1516,"nodeType":"UserDefinedTypeName","pathNode":{"id":1515,"name":"IERC20","nameLocations":["1505:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1419,"src":"1505:6:9"},"referencedDeclaration":1419,"src":"1505:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"spender","nameLocation":"1535:7:9","nodeType":"VariableDeclaration","scope":1557,"src":"1527:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"value","nameLocation":"1560:5:9","nodeType":"VariableDeclaration","scope":1557,"src":"1552:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:76:9"},"returnParameters":{"id":1523,"nodeType":"ParameterList","parameters":[],"src":"1581:0:9"},"scope":1736,"src":"1475:603:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1592,"nodeType":"Block","src":"2200:194:9","statements":[{"assignments":[1568],"declarations":[{"constant":false,"id":1568,"mutability":"mutable","name":"newAllowance","nameLocation":"2218:12:9","nodeType":"VariableDeclaration","scope":1592,"src":"2210:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1567,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1579,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1573,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2257:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1736","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1736","typeString":"library SafeERC20"}],"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2249:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1571,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:9","typeDescriptions":{}}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1575,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"2264:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1569,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"2233:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2239:9:9","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1396,"src":"2233:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2233:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"2275:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:47:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2210:70:9"},{"expression":{"arguments":[{"id":1581,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"2310:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1584,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"2340:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2346:7:9","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1406,"src":"2340:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2354:8:9","memberName":"selector","nodeType":"MemberAccess","src":"2340:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1587,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"2364:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1588,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"2373:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1582,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2317:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2321:18:9","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2317:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1580,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"2290:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1419_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2290:97:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1591,"nodeType":"ExpressionStatement","src":"2290:97:9"}]},"id":1593,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2093:21:9","nodeType":"FunctionDefinition","parameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"mutability":"mutable","name":"token","nameLocation":"2131:5:9","nodeType":"VariableDeclaration","scope":1593,"src":"2124:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"},"typeName":{"id":1559,"nodeType":"UserDefinedTypeName","pathNode":{"id":1558,"name":"IERC20","nameLocations":["2124:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1419,"src":"2124:6:9"},"referencedDeclaration":1419,"src":"2124:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1562,"mutability":"mutable","name":"spender","nameLocation":"2154:7:9","nodeType":"VariableDeclaration","scope":1593,"src":"2146:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1564,"mutability":"mutable","name":"value","nameLocation":"2179:5:9","nodeType":"VariableDeclaration","scope":1593,"src":"2171:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1563,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:76:9"},"returnParameters":{"id":1566,"nodeType":"ParameterList","parameters":[],"src":"2200:0:9"},"scope":1736,"src":"2084:310:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1640,"nodeType":"Block","src":"2516:370:9","statements":[{"id":1639,"nodeType":"UncheckedBlock","src":"2526:354:9","statements":[{"assignments":[1604],"declarations":[{"constant":false,"id":1604,"mutability":"mutable","name":"oldAllowance","nameLocation":"2558:12:9","nodeType":"VariableDeclaration","scope":1639,"src":"2550:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1603,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1613,"initialValue":{"arguments":[{"arguments":[{"id":1609,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2597:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1736","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1736","typeString":"library SafeERC20"}],"id":1608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2589:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1607,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:9","typeDescriptions":{}}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1611,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"2604:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1605,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"2573:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2579:9:9","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1396,"src":"2573:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:62:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1615,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"2634:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"2650:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2634:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1614,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2626:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2626:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1620,"nodeType":"ExpressionStatement","src":"2626:75:9"},{"assignments":[1622],"declarations":[{"constant":false,"id":1622,"mutability":"mutable","name":"newAllowance","nameLocation":"2723:12:9","nodeType":"VariableDeclaration","scope":1639,"src":"2715:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"2715:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1626,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1623,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"2738:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"2753:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2715:43:9"},{"expression":{"arguments":[{"id":1628,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"2792:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1631,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"2822:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2828:7:9","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1406,"src":"2822:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2836:8:9","memberName":"selector","nodeType":"MemberAccess","src":"2822:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1634,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"2846:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1635,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"2855:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1629,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2799:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2803:18:9","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2799:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1627,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"2772:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1419_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:97:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1638,"nodeType":"ExpressionStatement","src":"2772:97:9"}]}]},"id":1641,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2409:21:9","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"mutability":"mutable","name":"token","nameLocation":"2447:5:9","nodeType":"VariableDeclaration","scope":1641,"src":"2440:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"},"typeName":{"id":1595,"nodeType":"UserDefinedTypeName","pathNode":{"id":1594,"name":"IERC20","nameLocations":["2440:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1419,"src":"2440:6:9"},"referencedDeclaration":1419,"src":"2440:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1598,"mutability":"mutable","name":"spender","nameLocation":"2470:7:9","nodeType":"VariableDeclaration","scope":1641,"src":"2462:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"value","nameLocation":"2495:5:9","nodeType":"VariableDeclaration","scope":1641,"src":"2487:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:76:9"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[],"src":"2516:0:9"},"scope":1736,"src":"2400:486:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1696,"nodeType":"Block","src":"3107:257:9","statements":[{"assignments":[1662],"declarations":[{"constant":false,"id":1662,"mutability":"mutable","name":"nonceBefore","nameLocation":"3125:11:9","nodeType":"VariableDeclaration","scope":1696,"src":"3117:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1667,"initialValue":{"arguments":[{"id":1665,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"3152:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1663,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"3139:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1455","typeString":"contract IERC20Permit"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:6:9","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1448,"src":"3139:12:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3139:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3117:41:9"},{"expression":{"arguments":[{"id":1671,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"3181:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1672,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"3188:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"3197:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1674,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"3204:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1675,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"3214:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1676,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"3217:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1677,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"3220:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1668,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"3168:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1455","typeString":"contract IERC20Permit"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3174:6:9","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":1440,"src":"3168:12:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1679,"nodeType":"ExpressionStatement","src":"3168:54:9"},{"assignments":[1681],"declarations":[{"constant":false,"id":1681,"mutability":"mutable","name":"nonceAfter","nameLocation":"3240:10:9","nodeType":"VariableDeclaration","scope":1696,"src":"3232:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1686,"initialValue":{"arguments":[{"id":1684,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"3266:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1682,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"3253:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1455","typeString":"contract IERC20Permit"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3259:6:9","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1448,"src":"3253:12:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3253:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3232:40:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"3290:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1689,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"3304:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3318:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3304:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3290:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":1693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3321:35:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":1687,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3282:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1695,"nodeType":"ExpressionStatement","src":"3282:75:9"}]},"id":1697,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"2901:10:9","nodeType":"FunctionDefinition","parameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1644,"mutability":"mutable","name":"token","nameLocation":"2934:5:9","nodeType":"VariableDeclaration","scope":1697,"src":"2921:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1455","typeString":"contract IERC20Permit"},"typeName":{"id":1643,"nodeType":"UserDefinedTypeName","pathNode":{"id":1642,"name":"IERC20Permit","nameLocations":["2921:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"2921:12:9"},"referencedDeclaration":1455,"src":"2921:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1455","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":1646,"mutability":"mutable","name":"owner","nameLocation":"2957:5:9","nodeType":"VariableDeclaration","scope":1697,"src":"2949:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1645,"name":"address","nodeType":"ElementaryTypeName","src":"2949:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1648,"mutability":"mutable","name":"spender","nameLocation":"2980:7:9","nodeType":"VariableDeclaration","scope":1697,"src":"2972:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1647,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1650,"mutability":"mutable","name":"value","nameLocation":"3005:5:9","nodeType":"VariableDeclaration","scope":1697,"src":"2997:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1649,"name":"uint256","nodeType":"ElementaryTypeName","src":"2997:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1652,"mutability":"mutable","name":"deadline","nameLocation":"3028:8:9","nodeType":"VariableDeclaration","scope":1697,"src":"3020:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1651,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1654,"mutability":"mutable","name":"v","nameLocation":"3052:1:9","nodeType":"VariableDeclaration","scope":1697,"src":"3046:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1653,"name":"uint8","nodeType":"ElementaryTypeName","src":"3046:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1656,"mutability":"mutable","name":"r","nameLocation":"3071:1:9","nodeType":"VariableDeclaration","scope":1697,"src":"3063:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1658,"mutability":"mutable","name":"s","nameLocation":"3090:1:9","nodeType":"VariableDeclaration","scope":1697,"src":"3082:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1657,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2911:186:9"},"returnParameters":{"id":1660,"nodeType":"ParameterList","parameters":[],"src":"3107:0:9"},"scope":1736,"src":"2892:472:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1734,"nodeType":"Block","src":"3817:636:9","statements":[{"assignments":[1707],"declarations":[{"constant":false,"id":1707,"mutability":"mutable","name":"returndata","nameLocation":"4179:10:9","nodeType":"VariableDeclaration","scope":1734,"src":"4166:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1706,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1716,"initialValue":{"arguments":[{"id":1713,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"4220:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":1714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4226:34:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":1710,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"4200:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}],"id":1709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1708,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:9","typeDescriptions":{}}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4207:12:9","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1826,"src":"4192:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4166:95:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1717,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"4275:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4286:6:9","memberName":"length","nodeType":"MemberAccess","src":"4275:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4275:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1733,"nodeType":"IfStatement","src":"4271:176:9","trueBody":{"id":1732,"nodeType":"Block","src":"4298:149:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1724,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"4370:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4383:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1725,"name":"bool","nodeType":"ElementaryTypeName","src":"4383:4:9","typeDescriptions":{}}}],"id":1727,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4382:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1722,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4359:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4363:6:9","memberName":"decode","nodeType":"MemberAccess","src":"4359:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4359:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4391:44:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":1721,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4351:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4351:85:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1731,"nodeType":"ExpressionStatement","src":"4351:85:9"}]}}]},"documentation":{"id":1698,"nodeType":"StructuredDocumentation","src":"3370:372:9","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1735,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3756:19:9","nodeType":"FunctionDefinition","parameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"token","nameLocation":"3783:5:9","nodeType":"VariableDeclaration","scope":1735,"src":"3776:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"},"typeName":{"id":1700,"nodeType":"UserDefinedTypeName","pathNode":{"id":1699,"name":"IERC20","nameLocations":["3776:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1419,"src":"3776:6:9"},"referencedDeclaration":1419,"src":"3776:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1703,"mutability":"mutable","name":"data","nameLocation":"3803:4:9","nodeType":"VariableDeclaration","scope":1735,"src":"3790:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1702,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:33:9"},"returnParameters":{"id":1705,"nodeType":"ParameterList","parameters":[],"src":"3817:0:9"},"scope":1736,"src":"3747:706:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1737,"src":"707:3748:9","usedErrors":[],"usedEvents":[]}],"src":"115:4341:9"},"id":9},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2066]},"id":2067,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1738,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1739,"nodeType":"StructuredDocumentation","src":"126:67:10","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2066,"linearizedBaseContracts":[2066],"name":"Address","nameLocation":"202:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1753,"nodeType":"Block","src":"1241:254:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1747,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"1465:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1473:4:10","memberName":"code","nodeType":"MemberAccess","src":"1465:12:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1478:6:10","memberName":"length","nodeType":"MemberAccess","src":"1465:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1746,"id":1752,"nodeType":"Return","src":"1458:30:10"}]},"documentation":{"id":1740,"nodeType":"StructuredDocumentation","src":"216:954:10","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1754,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:10","nodeType":"FunctionDefinition","parameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"account","nameLocation":"1203:7:10","nodeType":"VariableDeclaration","scope":1754,"src":"1195:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1741,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:10"},"returnParameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1754,"src":"1235:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1744,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:10"},"scope":2066,"src":"1175:320:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1787,"nodeType":"Block","src":"2483:241:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1765,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2066","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2066","typeString":"library Address"}],"id":1764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1763,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:10","typeDescriptions":{}}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:10","memberName":"balance","nodeType":"MemberAccess","src":"2501:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1768,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"2526:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1762,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1772,"nodeType":"ExpressionStatement","src":"2493:73:10"},{"assignments":[1774,null],"declarations":[{"constant":false,"id":1774,"mutability":"mutable","name":"success","nameLocation":"2583:7:10","nodeType":"VariableDeclaration","scope":1787,"src":"2578:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1773,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1781,"initialValue":{"arguments":[{"hexValue":"","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1775,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"2596:9:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:4:10","memberName":"call","nodeType":"MemberAccess","src":"2596:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1777,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"2618:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:10"},{"expression":{"arguments":[{"id":1783,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"2647:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1782,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:78:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1786,"nodeType":"ExpressionStatement","src":"2639:78:10"}]},"documentation":{"id":1755,"nodeType":"StructuredDocumentation","src":"1501:906:10","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1788,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:10","nodeType":"FunctionDefinition","parameters":{"id":1760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:10","nodeType":"VariableDeclaration","scope":1788,"src":"2431:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1756,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1759,"mutability":"mutable","name":"amount","nameLocation":"2466:6:10","nodeType":"VariableDeclaration","scope":1788,"src":"2458:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:10"},"returnParameters":{"id":1761,"nodeType":"ParameterList","parameters":[],"src":"2483:0:10"},"scope":2066,"src":"2412:312:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1805,"nodeType":"Block","src":"3555:96:10","statements":[{"expression":{"arguments":[{"id":1799,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"3594:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1800,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"3602:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1798,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1846,1890],"referencedDeclaration":1890,"src":"3572:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1797,"id":1804,"nodeType":"Return","src":"3565:79:10"}]},"documentation":{"id":1789,"nodeType":"StructuredDocumentation","src":"2730:731:10","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1806,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:10","nodeType":"FunctionDefinition","parameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"target","nameLocation":"3496:6:10","nodeType":"VariableDeclaration","scope":1806,"src":"3488:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1790,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1793,"mutability":"mutable","name":"data","nameLocation":"3517:4:10","nodeType":"VariableDeclaration","scope":1806,"src":"3504:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1792,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:10"},"returnParameters":{"id":1797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1806,"src":"3541:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1795,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:10"},"scope":2066,"src":"3466:185:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1825,"nodeType":"Block","src":"4020:76:10","statements":[{"expression":{"arguments":[{"id":1819,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"4059:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1820,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"4067:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1822,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"4076:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1818,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1846,1890],"referencedDeclaration":1890,"src":"4037:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1817,"id":1824,"nodeType":"Return","src":"4030:59:10"}]},"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"3657:211:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1826,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:10","nodeType":"FunctionDefinition","parameters":{"id":1814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"target","nameLocation":"3912:6:10","nodeType":"VariableDeclaration","scope":1826,"src":"3904:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1808,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1811,"mutability":"mutable","name":"data","nameLocation":"3941:4:10","nodeType":"VariableDeclaration","scope":1826,"src":"3928:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1810,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1813,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:10","nodeType":"VariableDeclaration","scope":1826,"src":"3955:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1812,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:10"},"returnParameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1826,"src":"4006:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1815,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:10"},"scope":2066,"src":"3873:223:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1845,"nodeType":"Block","src":"4601:111:10","statements":[{"expression":{"arguments":[{"id":1839,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"4640:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1840,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"4648:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"4654:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1838,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1846,1890],"referencedDeclaration":1890,"src":"4618:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4618:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1837,"id":1844,"nodeType":"Return","src":"4611:94:10"}]},"documentation":{"id":1827,"nodeType":"StructuredDocumentation","src":"4102:351:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1846,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:10","nodeType":"FunctionDefinition","parameters":{"id":1834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"target","nameLocation":"4506:6:10","nodeType":"VariableDeclaration","scope":1846,"src":"4498:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1828,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1831,"mutability":"mutable","name":"data","nameLocation":"4535:4:10","nodeType":"VariableDeclaration","scope":1846,"src":"4522:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1830,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1833,"mutability":"mutable","name":"value","nameLocation":"4557:5:10","nodeType":"VariableDeclaration","scope":1846,"src":"4549:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1832,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:10"},"returnParameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1846,"src":"4587:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1835,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:10"},"scope":2066,"src":"4458:254:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1889,"nodeType":"Block","src":"5139:267:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1863,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2066","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2066","typeString":"library Address"}],"id":1862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1861,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:10","typeDescriptions":{}}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5157:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5171:7:10","memberName":"balance","nodeType":"MemberAccess","src":"5157:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"5182:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1860,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5149:81:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1870,"nodeType":"ExpressionStatement","src":"5149:81:10"},{"assignments":[1872,1874],"declarations":[{"constant":false,"id":1872,"mutability":"mutable","name":"success","nameLocation":"5246:7:10","nodeType":"VariableDeclaration","scope":1889,"src":"5241:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1871,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1874,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:10","nodeType":"VariableDeclaration","scope":1889,"src":"5255:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1873,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1881,"initialValue":{"arguments":[{"id":1879,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"5308:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1875,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"5282:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5289:4:10","memberName":"call","nodeType":"MemberAccess","src":"5282:11:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"5301:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5282:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:10"},{"expression":{"arguments":[{"id":1883,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"5357:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1884,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"5365:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1885,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"5374:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1886,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"5386:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1882,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"5330:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5330:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1859,"id":1888,"nodeType":"Return","src":"5323:76:10"}]},"documentation":{"id":1847,"nodeType":"StructuredDocumentation","src":"4718:237:10","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1890,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:10","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1849,"mutability":"mutable","name":"target","nameLocation":"5008:6:10","nodeType":"VariableDeclaration","scope":1890,"src":"5000:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1848,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1851,"mutability":"mutable","name":"data","nameLocation":"5037:4:10","nodeType":"VariableDeclaration","scope":1890,"src":"5024:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1850,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1853,"mutability":"mutable","name":"value","nameLocation":"5059:5:10","nodeType":"VariableDeclaration","scope":1890,"src":"5051:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1852,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1855,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:10","nodeType":"VariableDeclaration","scope":1890,"src":"5074:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1854,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:10"},"returnParameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1890,"src":"5125:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1857,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:10"},"scope":2066,"src":"4960:446:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1906,"nodeType":"Block","src":"5683:97:10","statements":[{"expression":{"arguments":[{"id":1901,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"5719:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1902,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"5727:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1900,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1907,1936],"referencedDeclaration":1936,"src":"5700:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5700:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1899,"id":1905,"nodeType":"Return","src":"5693:80:10"}]},"documentation":{"id":1891,"nodeType":"StructuredDocumentation","src":"5412:166:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1907,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:10","nodeType":"FunctionDefinition","parameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"target","nameLocation":"5619:6:10","nodeType":"VariableDeclaration","scope":1907,"src":"5611:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1892,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"data","nameLocation":"5640:4:10","nodeType":"VariableDeclaration","scope":1907,"src":"5627:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1894,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:10"},"returnParameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1907,"src":"5669:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1897,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:10"},"scope":2066,"src":"5583:197:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1935,"nodeType":"Block","src":"6122:168:10","statements":[{"assignments":[1920,1922],"declarations":[{"constant":false,"id":1920,"mutability":"mutable","name":"success","nameLocation":"6138:7:10","nodeType":"VariableDeclaration","scope":1935,"src":"6133:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1919,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1922,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:10","nodeType":"VariableDeclaration","scope":1935,"src":"6147:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1921,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1927,"initialValue":{"arguments":[{"id":1925,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"6192:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1923,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"6174:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:10:10","memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:10","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:10"},{"expression":{"arguments":[{"id":1929,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"6241:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1930,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"6249:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1931,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"6258:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1932,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"6270:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1928,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"6214:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6214:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1918,"id":1934,"nodeType":"Return","src":"6207:76:10"}]},"documentation":{"id":1908,"nodeType":"StructuredDocumentation","src":"5786:173:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1936,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:10","nodeType":"FunctionDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1910,"mutability":"mutable","name":"target","nameLocation":"6009:6:10","nodeType":"VariableDeclaration","scope":1936,"src":"6001:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1909,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1912,"mutability":"mutable","name":"data","nameLocation":"6038:4:10","nodeType":"VariableDeclaration","scope":1936,"src":"6025:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1911,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:10","nodeType":"VariableDeclaration","scope":1936,"src":"6052:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1913,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:10"},"returnParameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1936,"src":"6108:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1916,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:10"},"scope":2066,"src":"5964:326:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1952,"nodeType":"Block","src":"6566:101:10","statements":[{"expression":{"arguments":[{"id":1947,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"6604:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1948,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"6612:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1946,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1953,1982],"referencedDeclaration":1982,"src":"6583:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6583:77:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1945,"id":1951,"nodeType":"Return","src":"6576:84:10"}]},"documentation":{"id":1937,"nodeType":"StructuredDocumentation","src":"6296:168:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1953,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:10","nodeType":"FunctionDefinition","parameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"target","nameLocation":"6507:6:10","nodeType":"VariableDeclaration","scope":1953,"src":"6499:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1938,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"data","nameLocation":"6528:4:10","nodeType":"VariableDeclaration","scope":1953,"src":"6515:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1940,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:10"},"returnParameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1953,"src":"6552:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1943,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:10"},"scope":2066,"src":"6469:198:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1981,"nodeType":"Block","src":"7008:170:10","statements":[{"assignments":[1966,1968],"declarations":[{"constant":false,"id":1966,"mutability":"mutable","name":"success","nameLocation":"7024:7:10","nodeType":"VariableDeclaration","scope":1981,"src":"7019:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1965,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1968,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:10","nodeType":"VariableDeclaration","scope":1981,"src":"7033:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1967,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1973,"initialValue":{"arguments":[{"id":1971,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"7080:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1969,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"7060:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7067:12:10","memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:10","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7060:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:10"},{"expression":{"arguments":[{"id":1975,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"7129:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1976,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"7137:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1977,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"7146:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1978,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"7158:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1974,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"7102:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7102:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1964,"id":1980,"nodeType":"Return","src":"7095:76:10"}]},"documentation":{"id":1954,"nodeType":"StructuredDocumentation","src":"6673:175:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1982,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:10","nodeType":"FunctionDefinition","parameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1956,"mutability":"mutable","name":"target","nameLocation":"6900:6:10","nodeType":"VariableDeclaration","scope":1982,"src":"6892:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1955,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1958,"mutability":"mutable","name":"data","nameLocation":"6929:4:10","nodeType":"VariableDeclaration","scope":1982,"src":"6916:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1957,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:10","nodeType":"VariableDeclaration","scope":1982,"src":"6943:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1959,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:10"},"returnParameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1982,"src":"6994:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1962,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:10"},"scope":2066,"src":"6853:325:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2020,"nodeType":"Block","src":"7660:434:10","statements":[{"condition":{"id":1996,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"7674:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2018,"nodeType":"Block","src":"8030:58:10","statements":[{"expression":{"arguments":[{"id":2014,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"8052:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2015,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"8064:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2013,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"8044:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8044:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2017,"nodeType":"ExpressionStatement","src":"8044:33:10"}]},"id":2019,"nodeType":"IfStatement","src":"7670:418:10","trueBody":{"id":2012,"nodeType":"Block","src":"7683:341:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1997,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"7701:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7712:6:10","memberName":"length","nodeType":"MemberAccess","src":"7701:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2009,"nodeType":"IfStatement","src":"7697:286:10","trueBody":{"id":2008,"nodeType":"Block","src":"7725:258:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2003,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"7927:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2002,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"7916:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7916:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2007,"nodeType":"ExpressionStatement","src":"7908:60:10"}]}},{"expression":{"id":2010,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"8003:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1995,"id":2011,"nodeType":"Return","src":"7996:17:10"}]}}]},"documentation":{"id":1983,"nodeType":"StructuredDocumentation","src":"7184:277:10","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2021,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:10","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"target","nameLocation":"7519:6:10","nodeType":"VariableDeclaration","scope":2021,"src":"7511:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"success","nameLocation":"7540:7:10","nodeType":"VariableDeclaration","scope":2021,"src":"7535:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1986,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1989,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:10","nodeType":"VariableDeclaration","scope":2021,"src":"7557:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1988,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1991,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:10","nodeType":"VariableDeclaration","scope":2021,"src":"7590:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1990,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:10"},"returnParameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2021,"src":"7646:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1993,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:10"},"scope":2066,"src":"7466:628:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2044,"nodeType":"Block","src":"8475:135:10","statements":[{"condition":{"id":2033,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"8489:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2042,"nodeType":"Block","src":"8546:58:10","statements":[{"expression":{"arguments":[{"id":2038,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"8568:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2039,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"8580:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2037,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"8560:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2041,"nodeType":"ExpressionStatement","src":"8560:33:10"}]},"id":2043,"nodeType":"IfStatement","src":"8485:119:10","trueBody":{"id":2036,"nodeType":"Block","src":"8498:42:10","statements":[{"expression":{"id":2034,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"8519:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2032,"id":2035,"nodeType":"Return","src":"8512:17:10"}]}}]},"documentation":{"id":2022,"nodeType":"StructuredDocumentation","src":"8100:210:10","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2045,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:10","nodeType":"FunctionDefinition","parameters":{"id":2029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"success","nameLocation":"8355:7:10","nodeType":"VariableDeclaration","scope":2045,"src":"8350:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2023,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2026,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:10","nodeType":"VariableDeclaration","scope":2045,"src":"8372:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2025,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2028,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:10","nodeType":"VariableDeclaration","scope":2045,"src":"8405:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2027,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:10"},"returnParameters":{"id":2032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2045,"src":"8461:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2030,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:10"},"scope":2066,"src":"8315:295:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2064,"nodeType":"Block","src":"8699:457:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2052,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"8775:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8786:6:10","memberName":"length","nodeType":"MemberAccess","src":"8775:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2062,"nodeType":"Block","src":"9105:45:10","statements":[{"expression":{"arguments":[{"id":2059,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"9126:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2058,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9119:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2061,"nodeType":"ExpressionStatement","src":"9119:20:10"}]},"id":2063,"nodeType":"IfStatement","src":"8771:379:10","trueBody":{"id":2057,"nodeType":"Block","src":"8798:301:10","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:10","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:10","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:10"},"nodeType":"YulFunctionCall","src":"8997:17:10"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:10","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:10"},"nodeType":"YulFunctionCall","src":"9038:19:10"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:10"},"nodeType":"YulFunctionCall","src":"9031:44:10"},"nodeType":"YulExpressionStatement","src":"9031:44:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2047,"isOffset":false,"isSlot":false,"src":"9003:10:10","valueSize":1},{"declaration":2047,"isOffset":false,"isSlot":false,"src":"9046:10:10","valueSize":1}],"id":2056,"nodeType":"InlineAssembly","src":"8947:142:10"}]}}]},"id":2065,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:10","nodeType":"FunctionDefinition","parameters":{"id":2050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2047,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:10","nodeType":"VariableDeclaration","scope":2065,"src":"8633:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2046,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2049,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:10","nodeType":"VariableDeclaration","scope":2065,"src":"8658:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2048,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:10"},"returnParameters":{"id":2051,"nodeType":"ParameterList","parameters":[],"src":"8699:0:10"},"scope":2066,"src":"8616:540:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2067,"src":"194:8964:10","usedErrors":[],"usedEvents":[]}],"src":"101:9058:10"},"id":10},"@openzeppelin/contracts/utils/structs/EnumerableMap.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableMap.sol","exportedSymbols":{"EnumerableMap":[3188],"EnumerableSet":[3801]},"id":3189,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2068,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"./EnumerableSet.sol","id":2069,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3189,"sourceUnit":3802,"src":"230:29:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableMap","contractDependencies":[],"contractKind":"library","documentation":{"id":2070,"nodeType":"StructuredDocumentation","src":"261:1359:11","text":" @dev Library for managing an enumerable variant of Solidity's\n https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n type.\n Maps have the following properties:\n - Entries are added, removed, and checked for existence in constant time\n (O(1)).\n - Entries are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableMap for EnumerableMap.UintToAddressMap;\n     // Declare a set state variable\n     EnumerableMap.UintToAddressMap private myMap;\n }\n ```\n The following map types are supported:\n - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\n - `address -> uint256` (`AddressToUintMap`) since v4.6.0\n - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0\n - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0\n - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableMap.\n ===="},"fullyImplemented":true,"id":3188,"linearizedBaseContracts":[3188],"name":"EnumerableMap","nameLocation":"1629:13:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2074,"libraryName":{"id":2071,"name":"EnumerableSet","nameLocations":["1655:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":3801,"src":"1655:13:11"},"nodeType":"UsingForDirective","src":"1649:49:11","typeName":{"id":2073,"nodeType":"UserDefinedTypeName","pathNode":{"id":2072,"name":"EnumerableSet.Bytes32Set","nameLocations":["1673:13:11","1687:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3393,"src":"1673:24:11"},"referencedDeclaration":3393,"src":"1673:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},{"canonicalName":"EnumerableMap.Bytes32ToBytes32Map","id":2082,"members":[{"constant":false,"id":2077,"mutability":"mutable","name":"_keys","nameLocation":"2251:5:11","nodeType":"VariableDeclaration","scope":2082,"src":"2226:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2076,"nodeType":"UserDefinedTypeName","pathNode":{"id":2075,"name":"EnumerableSet.Bytes32Set","nameLocations":["2226:13:11","2240:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3393,"src":"2226:24:11"},"referencedDeclaration":3393,"src":"2226:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2081,"mutability":"mutable","name":"_values","nameLocation":"2294:7:11","nodeType":"VariableDeclaration","scope":2082,"src":"2266:35:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"},"typeName":{"id":2080,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2274:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2266:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2285:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"internal"}],"name":"Bytes32ToBytes32Map","nameLocation":"2169:19:11","nodeType":"StructDefinition","scope":3188,"src":"2162:146:11","visibility":"public"},{"body":{"id":2109,"nodeType":"Block","src":"2663:76:11","statements":[{"expression":{"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2095,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"2673:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2677:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2081,"src":"2673:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":2099,"indexExpression":{"id":2097,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"2685:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2673:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"2692:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2673:24:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2102,"nodeType":"ExpressionStatement","src":"2673:24:11"},{"expression":{"arguments":[{"id":2106,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"2728:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":2103,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"2714:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2718:5:11","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":2077,"src":"2714:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2724:3:11","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3411,"src":"2714:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$3393_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$3393_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2714:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2094,"id":2108,"nodeType":"Return","src":"2707:25:11"}]},"documentation":{"id":2083,"nodeType":"StructuredDocumentation","src":"2314:216:11","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":2110,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"2544:3:11","nodeType":"FunctionDefinition","parameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2086,"mutability":"mutable","name":"map","nameLocation":"2585:3:11","nodeType":"VariableDeclaration","scope":2110,"src":"2557:31:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2085,"nodeType":"UserDefinedTypeName","pathNode":{"id":2084,"name":"Bytes32ToBytes32Map","nameLocations":["2557:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":2082,"src":"2557:19:11"},"referencedDeclaration":2082,"src":"2557:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2088,"mutability":"mutable","name":"key","nameLocation":"2606:3:11","nodeType":"VariableDeclaration","scope":2110,"src":"2598:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2598:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2090,"mutability":"mutable","name":"value","nameLocation":"2627:5:11","nodeType":"VariableDeclaration","scope":2110,"src":"2619:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2089,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2619:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2547:91:11"},"returnParameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2110,"src":"2657:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2092,"name":"bool","nodeType":"ElementaryTypeName","src":"2657:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2656:6:11"},"scope":3188,"src":"2535:204:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2133,"nodeType":"Block","src":"2993:78:11","statements":[{"expression":{"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3003:23:11","subExpression":{"baseExpression":{"expression":{"id":2121,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"3010:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3014:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2081,"src":"3010:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":2124,"indexExpression":{"id":2123,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"3022:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3010:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2126,"nodeType":"ExpressionStatement","src":"3003:23:11"},{"expression":{"arguments":[{"id":2130,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"3060:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":2127,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"3043:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2128,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3047:5:11","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":2077,"src":"3043:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3053:6:11","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":3429,"src":"3043:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$3393_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$3393_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3043:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2120,"id":2132,"nodeType":"Return","src":"3036:28:11"}]},"documentation":{"id":2111,"nodeType":"StructuredDocumentation","src":"2745:157:11","text":" @dev Removes a key-value pair from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":2134,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"2916:6:11","nodeType":"FunctionDefinition","parameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"map","nameLocation":"2951:3:11","nodeType":"VariableDeclaration","scope":2134,"src":"2923:31:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2113,"nodeType":"UserDefinedTypeName","pathNode":{"id":2112,"name":"Bytes32ToBytes32Map","nameLocations":["2923:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":2082,"src":"2923:19:11"},"referencedDeclaration":2082,"src":"2923:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2116,"mutability":"mutable","name":"key","nameLocation":"2964:3:11","nodeType":"VariableDeclaration","scope":2134,"src":"2956:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2956:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2922:46:11"},"returnParameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2134,"src":"2987:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2118,"name":"bool","nodeType":"ElementaryTypeName","src":"2987:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2986:6:11"},"scope":3188,"src":"2907:164:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2151,"nodeType":"Block","src":"3243:47:11","statements":[{"expression":{"arguments":[{"id":2148,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"3279:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":2145,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"3260:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3264:5:11","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":2077,"src":"3260:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3270:8:11","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":3447,"src":"3260:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$3393_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$3393_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3260:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2144,"id":2150,"nodeType":"Return","src":"3253:30:11"}]},"documentation":{"id":2135,"nodeType":"StructuredDocumentation","src":"3077:68:11","text":" @dev Returns true if the key is in the map. O(1)."},"id":2152,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"3159:8:11","nodeType":"FunctionDefinition","parameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"map","nameLocation":"3196:3:11","nodeType":"VariableDeclaration","scope":2152,"src":"3168:31:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2137,"nodeType":"UserDefinedTypeName","pathNode":{"id":2136,"name":"Bytes32ToBytes32Map","nameLocations":["3168:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":2082,"src":"3168:19:11"},"referencedDeclaration":2082,"src":"3168:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2140,"mutability":"mutable","name":"key","nameLocation":"3209:3:11","nodeType":"VariableDeclaration","scope":2152,"src":"3201:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3201:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3167:46:11"},"returnParameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2152,"src":"3237:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2142,"name":"bool","nodeType":"ElementaryTypeName","src":"3237:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3236:6:11"},"scope":3188,"src":"3150:140:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2166,"nodeType":"Block","src":"3461:42:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":2161,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"3478:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3482:5:11","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":2077,"src":"3478:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3488:6:11","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3462,"src":"3478:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$3393_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$3393_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3478:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2160,"id":2165,"nodeType":"Return","src":"3471:25:11"}]},"documentation":{"id":2153,"nodeType":"StructuredDocumentation","src":"3296:79:11","text":" @dev Returns the number of key-value pairs in the map. O(1)."},"id":2167,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"3389:6:11","nodeType":"FunctionDefinition","parameters":{"id":2157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"map","nameLocation":"3424:3:11","nodeType":"VariableDeclaration","scope":2167,"src":"3396:31:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2155,"nodeType":"UserDefinedTypeName","pathNode":{"id":2154,"name":"Bytes32ToBytes32Map","nameLocations":["3396:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":2082,"src":"3396:19:11"},"referencedDeclaration":2082,"src":"3396:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"}],"src":"3395:33:11"},"returnParameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2167,"src":"3452:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2158,"name":"uint256","nodeType":"ElementaryTypeName","src":"3452:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3451:9:11"},"scope":3188,"src":"3380:123:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2195,"nodeType":"Block","src":"3957:90:11","statements":[{"assignments":[2181],"declarations":[{"constant":false,"id":2181,"mutability":"mutable","name":"key","nameLocation":"3975:3:11","nodeType":"VariableDeclaration","scope":2195,"src":"3967:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2187,"initialValue":{"arguments":[{"id":2185,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"3994:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2182,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"3981:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3985:5:11","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":2077,"src":"3981:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2184,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3991:2:11","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":3480,"src":"3981:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$3393_storage_ptr_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_struct$_Bytes32Set_$3393_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3981:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3967:33:11"},{"expression":{"components":[{"id":2188,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"4018:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"expression":{"id":2189,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"4023:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2190,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4027:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2081,"src":"4023:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":2192,"indexExpression":{"id":2191,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"4035:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4023:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2193,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4017:23:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"functionReturnParameters":2179,"id":2194,"nodeType":"Return","src":"4010:30:11"}]},"documentation":{"id":2168,"nodeType":"StructuredDocumentation","src":"3509:342:11","text":" @dev Returns the key-value pair stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of entries inside the\n array, and it may change when more entries are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2196,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"3865:2:11","nodeType":"FunctionDefinition","parameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2171,"mutability":"mutable","name":"map","nameLocation":"3896:3:11","nodeType":"VariableDeclaration","scope":2196,"src":"3868:31:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2170,"nodeType":"UserDefinedTypeName","pathNode":{"id":2169,"name":"Bytes32ToBytes32Map","nameLocations":["3868:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":2082,"src":"3868:19:11"},"referencedDeclaration":2082,"src":"3868:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2173,"mutability":"mutable","name":"index","nameLocation":"3909:5:11","nodeType":"VariableDeclaration","scope":2196,"src":"3901:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2172,"name":"uint256","nodeType":"ElementaryTypeName","src":"3901:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3867:48:11"},"returnParameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2196,"src":"3939:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3939:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2196,"src":"3948:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3948:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3938:18:11"},"scope":3188,"src":"3856:191:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2239,"nodeType":"Block","src":"4288:198:11","statements":[{"assignments":[2210],"declarations":[{"constant":false,"id":2210,"mutability":"mutable","name":"value","nameLocation":"4306:5:11","nodeType":"VariableDeclaration","scope":2239,"src":"4298:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4298:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2215,"initialValue":{"baseExpression":{"expression":{"id":2211,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"4314:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4318:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2081,"src":"4314:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":2214,"indexExpression":{"id":2213,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"4326:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4314:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4298:32:11"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"4344:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4361:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4353:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4353:7:11","typeDescriptions":{}}},"id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4353:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4344:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2237,"nodeType":"Block","src":"4435:45:11","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4457:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"4463:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4456:13:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"functionReturnParameters":2208,"id":2236,"nodeType":"Return","src":"4449:20:11"}]},"id":2238,"nodeType":"IfStatement","src":"4340:140:11","trueBody":{"id":2232,"nodeType":"Block","src":"4365:64:11","statements":[{"expression":{"components":[{"arguments":[{"id":2223,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"4396:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},{"id":2224,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"4401:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2222,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2152,2381,2594,2843,3065],"referencedDeclaration":2152,"src":"4387:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4387:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"hexValue":"30","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4415:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4407:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4407:7:11","typeDescriptions":{}}},"id":2229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4386:32:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"functionReturnParameters":2208,"id":2231,"nodeType":"Return","src":"4379:39:11"}]}}]},"documentation":{"id":2197,"nodeType":"StructuredDocumentation","src":"4053:130:11","text":" @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."},"id":2240,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"4197:6:11","nodeType":"FunctionDefinition","parameters":{"id":2203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"map","nameLocation":"4232:3:11","nodeType":"VariableDeclaration","scope":2240,"src":"4204:31:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2199,"nodeType":"UserDefinedTypeName","pathNode":{"id":2198,"name":"Bytes32ToBytes32Map","nameLocations":["4204:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":2082,"src":"4204:19:11"},"referencedDeclaration":2082,"src":"4204:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2202,"mutability":"mutable","name":"key","nameLocation":"4245:3:11","nodeType":"VariableDeclaration","scope":2240,"src":"4237:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4237:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4203:46:11"},"returnParameters":{"id":2208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2240,"src":"4273:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2204,"name":"bool","nodeType":"ElementaryTypeName","src":"4273:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2240,"src":"4279:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4279:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4272:15:11"},"scope":3188,"src":"4188:298:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2272,"nodeType":"Block","src":"4728:156:11","statements":[{"assignments":[2252],"declarations":[{"constant":false,"id":2252,"mutability":"mutable","name":"value","nameLocation":"4746:5:11","nodeType":"VariableDeclaration","scope":2272,"src":"4738:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4738:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2257,"initialValue":{"baseExpression":{"expression":{"id":2253,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"4754:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4758:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2081,"src":"4754:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":2256,"indexExpression":{"id":2255,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"4766:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4754:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4738:32:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"4788:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4797:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4788:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2263,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"4811:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},{"id":2264,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"4816:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2262,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2152,2381,2594,2843,3065],"referencedDeclaration":2152,"src":"4802:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4802:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4822:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072","typeString":"literal_string \"EnumerableMap: nonexistent key\""},"value":"EnumerableMap: nonexistent key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072","typeString":"literal_string \"EnumerableMap: nonexistent key\""}],"id":2258,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4780:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4780:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2269,"nodeType":"ExpressionStatement","src":"4780:75:11"},{"expression":{"id":2270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"4872:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2250,"id":2271,"nodeType":"Return","src":"4865:12:11"}]},"documentation":{"id":2241,"nodeType":"StructuredDocumentation","src":"4492:140:11","text":" @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."},"id":2273,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"4646:3:11","nodeType":"FunctionDefinition","parameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"map","nameLocation":"4678:3:11","nodeType":"VariableDeclaration","scope":2273,"src":"4650:31:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2243,"nodeType":"UserDefinedTypeName","pathNode":{"id":2242,"name":"Bytes32ToBytes32Map","nameLocations":["4650:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":2082,"src":"4650:19:11"},"referencedDeclaration":2082,"src":"4650:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2246,"mutability":"mutable","name":"key","nameLocation":"4691:3:11","nodeType":"VariableDeclaration","scope":2273,"src":"4683:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4683:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4649:46:11"},"returnParameters":{"id":2250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2273,"src":"4719:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4719:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4718:9:11"},"scope":3188,"src":"4637:247:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2307,"nodeType":"Block","src":"5313:136:11","statements":[{"assignments":[2287],"declarations":[{"constant":false,"id":2287,"mutability":"mutable","name":"value","nameLocation":"5331:5:11","nodeType":"VariableDeclaration","scope":2307,"src":"5323:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5323:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2292,"initialValue":{"baseExpression":{"expression":{"id":2288,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"5339:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5343:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2081,"src":"5339:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":2291,"indexExpression":{"id":2290,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"5351:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5339:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5323:32:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"5373:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5382:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5373:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2298,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"5396:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},{"id":2299,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"5401:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2297,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2152,2381,2594,2843,3065],"referencedDeclaration":2152,"src":"5387:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5387:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5373:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2302,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"5407:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2293,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2304,"nodeType":"ExpressionStatement","src":"5365:55:11"},{"expression":{"id":2305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"5437:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2285,"id":2306,"nodeType":"Return","src":"5430:12:11"}]},"documentation":{"id":2274,"nodeType":"StructuredDocumentation","src":"4890:269:11","text":" @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."},"id":2308,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"5173:3:11","nodeType":"FunctionDefinition","parameters":{"id":2282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"map","nameLocation":"5214:3:11","nodeType":"VariableDeclaration","scope":2308,"src":"5186:31:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2276,"nodeType":"UserDefinedTypeName","pathNode":{"id":2275,"name":"Bytes32ToBytes32Map","nameLocations":["5186:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":2082,"src":"5186:19:11"},"referencedDeclaration":2082,"src":"5186:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"key","nameLocation":"5235:3:11","nodeType":"VariableDeclaration","scope":2308,"src":"5227:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2278,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2281,"mutability":"mutable","name":"errorMessage","nameLocation":"5262:12:11","nodeType":"VariableDeclaration","scope":2308,"src":"5248:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2280,"name":"string","nodeType":"ElementaryTypeName","src":"5248:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5176:104:11"},"returnParameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2308,"src":"5304:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5304:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5303:9:11"},"scope":3188,"src":"5164:285:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableMap.UintToUintMap","id":2312,"members":[{"constant":false,"id":2311,"mutability":"mutable","name":"_inner","nameLocation":"5528:6:11","nodeType":"VariableDeclaration","scope":2312,"src":"5508:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2310,"nodeType":"UserDefinedTypeName","pathNode":{"id":2309,"name":"Bytes32ToBytes32Map","nameLocations":["5508:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":2082,"src":"5508:19:11"},"referencedDeclaration":2082,"src":"5508:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"}],"name":"UintToUintMap","nameLocation":"5484:13:11","nodeType":"StructDefinition","scope":3188,"src":"5477:64:11","visibility":"public"},{"body":{"id":2338,"nodeType":"Block","src":"5890:69:11","statements":[{"expression":{"arguments":[{"expression":{"id":2326,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"5911:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5915:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2311,"src":"5911:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2330,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5931:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5923:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5923:7:11","typeDescriptions":{}}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5923:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"5945:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5937:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5937:7:11","typeDescriptions":{}}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5937:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2325,"name":"set","nodeType":"Identifier","overloadedDeclarations":[2110,2339,2552,2789,3029],"referencedDeclaration":2110,"src":"5907:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5907:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2324,"id":2337,"nodeType":"Return","src":"5900:52:11"}]},"documentation":{"id":2313,"nodeType":"StructuredDocumentation","src":"5547:216:11","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":2339,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"5777:3:11","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"mutability":"mutable","name":"map","nameLocation":"5812:3:11","nodeType":"VariableDeclaration","scope":2339,"src":"5790:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2315,"nodeType":"UserDefinedTypeName","pathNode":{"id":2314,"name":"UintToUintMap","nameLocations":["5790:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":2312,"src":"5790:13:11"},"referencedDeclaration":2312,"src":"5790:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":2318,"mutability":"mutable","name":"key","nameLocation":"5833:3:11","nodeType":"VariableDeclaration","scope":2339,"src":"5825:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2320,"mutability":"mutable","name":"value","nameLocation":"5854:5:11","nodeType":"VariableDeclaration","scope":2339,"src":"5846:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2319,"name":"uint256","nodeType":"ElementaryTypeName","src":"5846:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5780:85:11"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2339,"src":"5884:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2322,"name":"bool","nodeType":"ElementaryTypeName","src":"5884:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5883:6:11"},"scope":3188,"src":"5768:191:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2359,"nodeType":"Block","src":"6198:56:11","statements":[{"expression":{"arguments":[{"expression":{"id":2351,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"6222:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6226:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2311,"src":"6222:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2355,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"6242:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6234:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6234:7:11","typeDescriptions":{}}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6234:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2350,"name":"remove","nodeType":"Identifier","overloadedDeclarations":[2134,2360,2573,2816,3047],"referencedDeclaration":2134,"src":"6215:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2349,"id":2358,"nodeType":"Return","src":"6208:39:11"}]},"documentation":{"id":2340,"nodeType":"StructuredDocumentation","src":"5965:148:11","text":" @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":2360,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6127:6:11","nodeType":"FunctionDefinition","parameters":{"id":2346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2343,"mutability":"mutable","name":"map","nameLocation":"6156:3:11","nodeType":"VariableDeclaration","scope":2360,"src":"6134:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2342,"nodeType":"UserDefinedTypeName","pathNode":{"id":2341,"name":"UintToUintMap","nameLocations":["6134:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":2312,"src":"6134:13:11"},"referencedDeclaration":2312,"src":"6134:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":2345,"mutability":"mutable","name":"key","nameLocation":"6169:3:11","nodeType":"VariableDeclaration","scope":2360,"src":"6161:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2344,"name":"uint256","nodeType":"ElementaryTypeName","src":"6161:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6133:40:11"},"returnParameters":{"id":2349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2360,"src":"6192:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2347,"name":"bool","nodeType":"ElementaryTypeName","src":"6192:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6191:6:11"},"scope":3188,"src":"6118:136:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2380,"nodeType":"Block","src":"6420:58:11","statements":[{"expression":{"arguments":[{"expression":{"id":2372,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"6446:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2373,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2311,"src":"6446:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2376,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"6466:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6458:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6458:7:11","typeDescriptions":{}}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6458:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2371,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2152,2381,2594,2843,3065],"referencedDeclaration":2152,"src":"6437:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6437:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2370,"id":2379,"nodeType":"Return","src":"6430:41:11"}]},"documentation":{"id":2361,"nodeType":"StructuredDocumentation","src":"6260:68:11","text":" @dev Returns true if the key is in the map. O(1)."},"id":2381,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6342:8:11","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"map","nameLocation":"6373:3:11","nodeType":"VariableDeclaration","scope":2381,"src":"6351:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2363,"nodeType":"UserDefinedTypeName","pathNode":{"id":2362,"name":"UintToUintMap","nameLocations":["6351:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":2312,"src":"6351:13:11"},"referencedDeclaration":2312,"src":"6351:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":2366,"mutability":"mutable","name":"key","nameLocation":"6386:3:11","nodeType":"VariableDeclaration","scope":2381,"src":"6378:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2365,"name":"uint256","nodeType":"ElementaryTypeName","src":"6378:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6350:40:11"},"returnParameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2381,"src":"6414:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2368,"name":"bool","nodeType":"ElementaryTypeName","src":"6414:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6413:6:11"},"scope":3188,"src":"6333:145:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2395,"nodeType":"Block","src":"6636:42:11","statements":[{"expression":{"arguments":[{"expression":{"id":2391,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"6660:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6664:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2311,"src":"6660:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}],"id":2390,"name":"length","nodeType":"Identifier","overloadedDeclarations":[2167,2396,2609,2858,3080],"referencedDeclaration":2167,"src":"6653:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2389,"id":2394,"nodeType":"Return","src":"6646:25:11"}]},"documentation":{"id":2382,"nodeType":"StructuredDocumentation","src":"6484:72:11","text":" @dev Returns the number of elements in the map. O(1)."},"id":2396,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6570:6:11","nodeType":"FunctionDefinition","parameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"map","nameLocation":"6599:3:11","nodeType":"VariableDeclaration","scope":2396,"src":"6577:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2384,"nodeType":"UserDefinedTypeName","pathNode":{"id":2383,"name":"UintToUintMap","nameLocations":["6577:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":2312,"src":"6577:13:11"},"referencedDeclaration":2312,"src":"6577:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"}],"src":"6576:27:11"},"returnParameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2396,"src":"6627:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6627:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6626:9:11"},"scope":3188,"src":"6561:117:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2429,"nodeType":"Block","src":"7110:116:11","statements":[{"assignments":[2410,2412],"declarations":[{"constant":false,"id":2410,"mutability":"mutable","name":"key","nameLocation":"7129:3:11","nodeType":"VariableDeclaration","scope":2429,"src":"7121:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7121:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2412,"mutability":"mutable","name":"value","nameLocation":"7142:5:11","nodeType":"VariableDeclaration","scope":2429,"src":"7134:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7134:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2418,"initialValue":{"arguments":[{"expression":{"id":2414,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"7154:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7158:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2311,"src":"7154:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":2416,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"7166:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2413,"name":"at","nodeType":"Identifier","overloadedDeclarations":[2196,2430,2649,2898,3111],"referencedDeclaration":2196,"src":"7151:2:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"7120:52:11"},{"expression":{"components":[{"arguments":[{"id":2421,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"7198:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7190:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2419,"name":"uint256","nodeType":"ElementaryTypeName","src":"7190:7:11","typeDescriptions":{}}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7190:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"7212:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7204:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2423,"name":"uint256","nodeType":"ElementaryTypeName","src":"7204:7:11","typeDescriptions":{}}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7204:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2427,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7189:30:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":2408,"id":2428,"nodeType":"Return","src":"7182:37:11"}]},"documentation":{"id":2397,"nodeType":"StructuredDocumentation","src":"6684:326:11","text":" @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2430,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7024:2:11","nodeType":"FunctionDefinition","parameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2400,"mutability":"mutable","name":"map","nameLocation":"7049:3:11","nodeType":"VariableDeclaration","scope":2430,"src":"7027:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2399,"nodeType":"UserDefinedTypeName","pathNode":{"id":2398,"name":"UintToUintMap","nameLocations":["7027:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":2312,"src":"7027:13:11"},"referencedDeclaration":2312,"src":"7027:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":2402,"mutability":"mutable","name":"index","nameLocation":"7062:5:11","nodeType":"VariableDeclaration","scope":2430,"src":"7054:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2401,"name":"uint256","nodeType":"ElementaryTypeName","src":"7054:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7026:42:11"},"returnParameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2430,"src":"7092:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2404,"name":"uint256","nodeType":"ElementaryTypeName","src":"7092:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2430,"src":"7101:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"7101:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7091:18:11"},"scope":3188,"src":"7015:211:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2463,"nodeType":"Block","src":"7461:123:11","statements":[{"assignments":[2444,2446],"declarations":[{"constant":false,"id":2444,"mutability":"mutable","name":"success","nameLocation":"7477:7:11","nodeType":"VariableDeclaration","scope":2463,"src":"7472:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2443,"name":"bool","nodeType":"ElementaryTypeName","src":"7472:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2446,"mutability":"mutable","name":"value","nameLocation":"7494:5:11","nodeType":"VariableDeclaration","scope":2463,"src":"7486:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7486:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2455,"initialValue":{"arguments":[{"expression":{"id":2448,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"7510:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7514:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2311,"src":"7510:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2452,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"7530:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7522:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2450,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7522:7:11","typeDescriptions":{}}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7522:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2447,"name":"tryGet","nodeType":"Identifier","overloadedDeclarations":[2240,2464,2689,2938,3142],"referencedDeclaration":2240,"src":"7503:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7503:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"7471:64:11"},{"expression":{"components":[{"id":2456,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"7553:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"id":2459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"7570:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7562:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2457,"name":"uint256","nodeType":"ElementaryTypeName","src":"7562:7:11","typeDescriptions":{}}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7562:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2461,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7552:25:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2442,"id":2462,"nodeType":"Return","src":"7545:32:11"}]},"documentation":{"id":2431,"nodeType":"StructuredDocumentation","src":"7232:130:11","text":" @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."},"id":2464,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"7376:6:11","nodeType":"FunctionDefinition","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2434,"mutability":"mutable","name":"map","nameLocation":"7405:3:11","nodeType":"VariableDeclaration","scope":2464,"src":"7383:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2433,"nodeType":"UserDefinedTypeName","pathNode":{"id":2432,"name":"UintToUintMap","nameLocations":["7383:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":2312,"src":"7383:13:11"},"referencedDeclaration":2312,"src":"7383:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":2436,"mutability":"mutable","name":"key","nameLocation":"7418:3:11","nodeType":"VariableDeclaration","scope":2464,"src":"7410:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"7410:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7382:40:11"},"returnParameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2464,"src":"7446:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2438,"name":"bool","nodeType":"ElementaryTypeName","src":"7446:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2464,"src":"7452:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2440,"name":"uint256","nodeType":"ElementaryTypeName","src":"7452:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7445:15:11"},"scope":3188,"src":"7367:217:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2487,"nodeType":"Block","src":"7820:62:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2478,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"7849:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7853:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2311,"src":"7849:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2482,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"7869:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7861:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7861:7:11","typeDescriptions":{}}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7861:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2477,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2273,2308,2488,2515,2719,2752,2968,3001,3163,3187],"referencedDeclaration":2273,"src":"7845:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7845:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7837:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"7837:7:11","typeDescriptions":{}}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7837:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2474,"id":2486,"nodeType":"Return","src":"7830:45:11"}]},"documentation":{"id":2465,"nodeType":"StructuredDocumentation","src":"7590:140:11","text":" @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."},"id":2488,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"7744:3:11","nodeType":"FunctionDefinition","parameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"map","nameLocation":"7770:3:11","nodeType":"VariableDeclaration","scope":2488,"src":"7748:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2467,"nodeType":"UserDefinedTypeName","pathNode":{"id":2466,"name":"UintToUintMap","nameLocations":["7748:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":2312,"src":"7748:13:11"},"referencedDeclaration":2312,"src":"7748:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":2470,"mutability":"mutable","name":"key","nameLocation":"7783:3:11","nodeType":"VariableDeclaration","scope":2488,"src":"7775:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"7775:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7747:40:11"},"returnParameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2488,"src":"7811:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"7811:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7810:9:11"},"scope":3188,"src":"7735:147:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2514,"nodeType":"Block","src":"8305:76:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2504,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"8334:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2505,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8338:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2311,"src":"8334:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2508,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"8354:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8346:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8346:7:11","typeDescriptions":{}}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8346:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2510,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"8360:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2503,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2273,2308,2488,2515,2719,2752,2968,3001,3163,3187],"referencedDeclaration":2308,"src":"8330:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"}},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8330:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8322:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"8322:7:11","typeDescriptions":{}}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8322:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2500,"id":2513,"nodeType":"Return","src":"8315:59:11"}]},"documentation":{"id":2489,"nodeType":"StructuredDocumentation","src":"7888:269:11","text":" @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."},"id":2515,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"8171:3:11","nodeType":"FunctionDefinition","parameters":{"id":2497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"map","nameLocation":"8206:3:11","nodeType":"VariableDeclaration","scope":2515,"src":"8184:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2491,"nodeType":"UserDefinedTypeName","pathNode":{"id":2490,"name":"UintToUintMap","nameLocations":["8184:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":2312,"src":"8184:13:11"},"referencedDeclaration":2312,"src":"8184:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2312_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":2494,"mutability":"mutable","name":"key","nameLocation":"8227:3:11","nodeType":"VariableDeclaration","scope":2515,"src":"8219:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"8219:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2496,"mutability":"mutable","name":"errorMessage","nameLocation":"8254:12:11","nodeType":"VariableDeclaration","scope":2515,"src":"8240:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2495,"name":"string","nodeType":"ElementaryTypeName","src":"8240:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8174:98:11"},"returnParameters":{"id":2500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2515,"src":"8296:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2498,"name":"uint256","nodeType":"ElementaryTypeName","src":"8296:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8295:9:11"},"scope":3188,"src":"8162:219:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableMap.UintToAddressMap","id":2519,"members":[{"constant":false,"id":2518,"mutability":"mutable","name":"_inner","nameLocation":"8466:6:11","nodeType":"VariableDeclaration","scope":2519,"src":"8446:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2517,"nodeType":"UserDefinedTypeName","pathNode":{"id":2516,"name":"Bytes32ToBytes32Map","nameLocations":["8446:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":2082,"src":"8446:19:11"},"referencedDeclaration":2082,"src":"8446:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"}],"name":"UintToAddressMap","nameLocation":"8419:16:11","nodeType":"StructDefinition","scope":3188,"src":"8412:67:11","visibility":"public"},{"body":{"id":2551,"nodeType":"Block","src":"8831:87:11","statements":[{"expression":{"arguments":[{"expression":{"id":2533,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"8852:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":2534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8856:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2518,"src":"8852:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2537,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"8872:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8864:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8864:7:11","typeDescriptions":{}}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8864:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"arguments":[{"id":2545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"8902:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8894:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2543,"name":"uint160","nodeType":"ElementaryTypeName","src":"8894:7:11","typeDescriptions":{}}},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8894:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8886:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2541,"name":"uint256","nodeType":"ElementaryTypeName","src":"8886:7:11","typeDescriptions":{}}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8886:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8878:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8878:7:11","typeDescriptions":{}}},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8878:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2532,"name":"set","nodeType":"Identifier","overloadedDeclarations":[2110,2339,2552,2789,3029],"referencedDeclaration":2110,"src":"8848:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"}},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8848:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2531,"id":2550,"nodeType":"Return","src":"8841:70:11"}]},"documentation":{"id":2520,"nodeType":"StructuredDocumentation","src":"8485:216:11","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":2552,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"8715:3:11","nodeType":"FunctionDefinition","parameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"mutability":"mutable","name":"map","nameLocation":"8753:3:11","nodeType":"VariableDeclaration","scope":2552,"src":"8728:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":2522,"nodeType":"UserDefinedTypeName","pathNode":{"id":2521,"name":"UintToAddressMap","nameLocations":["8728:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":2519,"src":"8728:16:11"},"referencedDeclaration":2519,"src":"8728:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"key","nameLocation":"8774:3:11","nodeType":"VariableDeclaration","scope":2552,"src":"8766:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"8766:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2527,"mutability":"mutable","name":"value","nameLocation":"8795:5:11","nodeType":"VariableDeclaration","scope":2552,"src":"8787:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2526,"name":"address","nodeType":"ElementaryTypeName","src":"8787:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8718:88:11"},"returnParameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2552,"src":"8825:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2529,"name":"bool","nodeType":"ElementaryTypeName","src":"8825:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8824:6:11"},"scope":3188,"src":"8706:212:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2572,"nodeType":"Block","src":"9160:56:11","statements":[{"expression":{"arguments":[{"expression":{"id":2564,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"9184:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":2565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9188:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2518,"src":"9184:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2568,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"9204:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9196:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9196:7:11","typeDescriptions":{}}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9196:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2563,"name":"remove","nodeType":"Identifier","overloadedDeclarations":[2134,2360,2573,2816,3047],"referencedDeclaration":2134,"src":"9177:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9177:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2562,"id":2571,"nodeType":"Return","src":"9170:39:11"}]},"documentation":{"id":2553,"nodeType":"StructuredDocumentation","src":"8924:148:11","text":" @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":2573,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"9086:6:11","nodeType":"FunctionDefinition","parameters":{"id":2559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"mutability":"mutable","name":"map","nameLocation":"9118:3:11","nodeType":"VariableDeclaration","scope":2573,"src":"9093:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":2555,"nodeType":"UserDefinedTypeName","pathNode":{"id":2554,"name":"UintToAddressMap","nameLocations":["9093:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":2519,"src":"9093:16:11"},"referencedDeclaration":2519,"src":"9093:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":2558,"mutability":"mutable","name":"key","nameLocation":"9131:3:11","nodeType":"VariableDeclaration","scope":2573,"src":"9123:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"9123:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9092:43:11"},"returnParameters":{"id":2562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2573,"src":"9154:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2560,"name":"bool","nodeType":"ElementaryTypeName","src":"9154:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9153:6:11"},"scope":3188,"src":"9077:139:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2593,"nodeType":"Block","src":"9385:58:11","statements":[{"expression":{"arguments":[{"expression":{"id":2585,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"9411:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":2586,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9415:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2518,"src":"9411:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2589,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"9431:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9423:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9423:7:11","typeDescriptions":{}}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9423:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2584,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2152,2381,2594,2843,3065],"referencedDeclaration":2152,"src":"9402:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9402:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2583,"id":2592,"nodeType":"Return","src":"9395:41:11"}]},"documentation":{"id":2574,"nodeType":"StructuredDocumentation","src":"9222:68:11","text":" @dev Returns true if the key is in the map. O(1)."},"id":2594,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"9304:8:11","nodeType":"FunctionDefinition","parameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"map","nameLocation":"9338:3:11","nodeType":"VariableDeclaration","scope":2594,"src":"9313:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":2576,"nodeType":"UserDefinedTypeName","pathNode":{"id":2575,"name":"UintToAddressMap","nameLocations":["9313:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":2519,"src":"9313:16:11"},"referencedDeclaration":2519,"src":"9313:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":2579,"mutability":"mutable","name":"key","nameLocation":"9351:3:11","nodeType":"VariableDeclaration","scope":2594,"src":"9343:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"9343:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9312:43:11"},"returnParameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2594,"src":"9379:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2581,"name":"bool","nodeType":"ElementaryTypeName","src":"9379:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9378:6:11"},"scope":3188,"src":"9295:148:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2608,"nodeType":"Block","src":"9604:42:11","statements":[{"expression":{"arguments":[{"expression":{"id":2604,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"9628:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":2605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9632:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2518,"src":"9628:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}],"id":2603,"name":"length","nodeType":"Identifier","overloadedDeclarations":[2167,2396,2609,2858,3080],"referencedDeclaration":2167,"src":"9621:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9621:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2602,"id":2607,"nodeType":"Return","src":"9614:25:11"}]},"documentation":{"id":2595,"nodeType":"StructuredDocumentation","src":"9449:72:11","text":" @dev Returns the number of elements in the map. O(1)."},"id":2609,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9535:6:11","nodeType":"FunctionDefinition","parameters":{"id":2599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"map","nameLocation":"9567:3:11","nodeType":"VariableDeclaration","scope":2609,"src":"9542:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":2597,"nodeType":"UserDefinedTypeName","pathNode":{"id":2596,"name":"UintToAddressMap","nameLocations":["9542:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":2519,"src":"9542:16:11"},"referencedDeclaration":2519,"src":"9542:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"}],"src":"9541:30:11"},"returnParameters":{"id":2602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2609,"src":"9595:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2600,"name":"uint256","nodeType":"ElementaryTypeName","src":"9595:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9594:9:11"},"scope":3188,"src":"9526:120:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2648,"nodeType":"Block","src":"10081:134:11","statements":[{"assignments":[2623,2625],"declarations":[{"constant":false,"id":2623,"mutability":"mutable","name":"key","nameLocation":"10100:3:11","nodeType":"VariableDeclaration","scope":2648,"src":"10092:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10092:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2625,"mutability":"mutable","name":"value","nameLocation":"10113:5:11","nodeType":"VariableDeclaration","scope":2648,"src":"10105:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10105:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2631,"initialValue":{"arguments":[{"expression":{"id":2627,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"10125:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":2628,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10129:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2518,"src":"10125:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":2629,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"10137:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2626,"name":"at","nodeType":"Identifier","overloadedDeclarations":[2196,2430,2649,2898,3111],"referencedDeclaration":2196,"src":"10122:2:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10122:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"10091:52:11"},{"expression":{"components":[{"arguments":[{"id":2634,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"10169:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10161:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2632,"name":"uint256","nodeType":"ElementaryTypeName","src":"10161:7:11","typeDescriptions":{}}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"arguments":[{"id":2642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"10199:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10191:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2640,"name":"uint256","nodeType":"ElementaryTypeName","src":"10191:7:11","typeDescriptions":{}}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10191:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10183:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2638,"name":"uint160","nodeType":"ElementaryTypeName","src":"10183:7:11","typeDescriptions":{}}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10183:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10175:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2636,"name":"address","nodeType":"ElementaryTypeName","src":"10175:7:11","typeDescriptions":{}}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10175:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10160:48:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$","typeString":"tuple(uint256,address)"}},"functionReturnParameters":2621,"id":2647,"nodeType":"Return","src":"10153:55:11"}]},"documentation":{"id":2610,"nodeType":"StructuredDocumentation","src":"9652:326:11","text":" @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2649,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9992:2:11","nodeType":"FunctionDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2613,"mutability":"mutable","name":"map","nameLocation":"10020:3:11","nodeType":"VariableDeclaration","scope":2649,"src":"9995:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":2612,"nodeType":"UserDefinedTypeName","pathNode":{"id":2611,"name":"UintToAddressMap","nameLocations":["9995:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":2519,"src":"9995:16:11"},"referencedDeclaration":2519,"src":"9995:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":2615,"mutability":"mutable","name":"index","nameLocation":"10033:5:11","nodeType":"VariableDeclaration","scope":2649,"src":"10025:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"10025:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9994:45:11"},"returnParameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2649,"src":"10063:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2617,"name":"uint256","nodeType":"ElementaryTypeName","src":"10063:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2649,"src":"10072:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2619,"name":"address","nodeType":"ElementaryTypeName","src":"10072:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10062:18:11"},"scope":3188,"src":"9983:232:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2688,"nodeType":"Block","src":"10453:141:11","statements":[{"assignments":[2663,2665],"declarations":[{"constant":false,"id":2663,"mutability":"mutable","name":"success","nameLocation":"10469:7:11","nodeType":"VariableDeclaration","scope":2688,"src":"10464:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2662,"name":"bool","nodeType":"ElementaryTypeName","src":"10464:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2665,"mutability":"mutable","name":"value","nameLocation":"10486:5:11","nodeType":"VariableDeclaration","scope":2688,"src":"10478:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10478:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2674,"initialValue":{"arguments":[{"expression":{"id":2667,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"10502:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":2668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10506:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2518,"src":"10502:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2671,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"10522:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10514:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10514:7:11","typeDescriptions":{}}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10514:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2666,"name":"tryGet","nodeType":"Identifier","overloadedDeclarations":[2240,2464,2689,2938,3142],"referencedDeclaration":2240,"src":"10495:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10495:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"10463:64:11"},{"expression":{"components":[{"id":2675,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"10545:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"arguments":[{"id":2682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"10578:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10570:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2680,"name":"uint256","nodeType":"ElementaryTypeName","src":"10570:7:11","typeDescriptions":{}}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10570:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10562:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2678,"name":"uint160","nodeType":"ElementaryTypeName","src":"10562:7:11","typeDescriptions":{}}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10562:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10554:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2676,"name":"address","nodeType":"ElementaryTypeName","src":"10554:7:11","typeDescriptions":{}}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10554:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10544:43:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2661,"id":2687,"nodeType":"Return","src":"10537:50:11"}]},"documentation":{"id":2650,"nodeType":"StructuredDocumentation","src":"10221:130:11","text":" @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."},"id":2689,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"10365:6:11","nodeType":"FunctionDefinition","parameters":{"id":2656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"map","nameLocation":"10397:3:11","nodeType":"VariableDeclaration","scope":2689,"src":"10372:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":2652,"nodeType":"UserDefinedTypeName","pathNode":{"id":2651,"name":"UintToAddressMap","nameLocations":["10372:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":2519,"src":"10372:16:11"},"referencedDeclaration":2519,"src":"10372:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":2655,"mutability":"mutable","name":"key","nameLocation":"10410:3:11","nodeType":"VariableDeclaration","scope":2689,"src":"10402:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2654,"name":"uint256","nodeType":"ElementaryTypeName","src":"10402:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10371:43:11"},"returnParameters":{"id":2661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2689,"src":"10438:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2657,"name":"bool","nodeType":"ElementaryTypeName","src":"10438:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2689,"src":"10444:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2659,"name":"address","nodeType":"ElementaryTypeName","src":"10444:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10437:15:11"},"scope":3188,"src":"10356:238:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2718,"nodeType":"Block","src":"10833:80:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2707,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"10878:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":2708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10882:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2518,"src":"10878:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2711,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"10898:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10890:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10890:7:11","typeDescriptions":{}}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10890:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2706,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2273,2308,2488,2515,2719,2752,2968,3001,3163,3187],"referencedDeclaration":2273,"src":"10874:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10874:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10866:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"10866:7:11","typeDescriptions":{}}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10866:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10858:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2702,"name":"uint160","nodeType":"ElementaryTypeName","src":"10858:7:11","typeDescriptions":{}}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10858:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10850:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2700,"name":"address","nodeType":"ElementaryTypeName","src":"10850:7:11","typeDescriptions":{}}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10850:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2699,"id":2717,"nodeType":"Return","src":"10843:63:11"}]},"documentation":{"id":2690,"nodeType":"StructuredDocumentation","src":"10600:140:11","text":" @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."},"id":2719,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"10754:3:11","nodeType":"FunctionDefinition","parameters":{"id":2696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2693,"mutability":"mutable","name":"map","nameLocation":"10783:3:11","nodeType":"VariableDeclaration","scope":2719,"src":"10758:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":2692,"nodeType":"UserDefinedTypeName","pathNode":{"id":2691,"name":"UintToAddressMap","nameLocations":["10758:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":2519,"src":"10758:16:11"},"referencedDeclaration":2519,"src":"10758:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":2695,"mutability":"mutable","name":"key","nameLocation":"10796:3:11","nodeType":"VariableDeclaration","scope":2719,"src":"10788:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2694,"name":"uint256","nodeType":"ElementaryTypeName","src":"10788:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10757:43:11"},"returnParameters":{"id":2699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2719,"src":"10824:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2697,"name":"address","nodeType":"ElementaryTypeName","src":"10824:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10823:9:11"},"scope":3188,"src":"10745:168:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2751,"nodeType":"Block","src":"11339:94:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2739,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"11384:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":2740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11388:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2518,"src":"11384:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2743,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"11404:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11396:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11396:7:11","typeDescriptions":{}}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11396:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2745,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"11410:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2738,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2273,2308,2488,2515,2719,2752,2968,3001,3163,3187],"referencedDeclaration":2308,"src":"11380:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11380:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11372:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2736,"name":"uint256","nodeType":"ElementaryTypeName","src":"11372:7:11","typeDescriptions":{}}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11372:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11364:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2734,"name":"uint160","nodeType":"ElementaryTypeName","src":"11364:7:11","typeDescriptions":{}}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11364:61:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11356:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2732,"name":"address","nodeType":"ElementaryTypeName","src":"11356:7:11","typeDescriptions":{}}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11356:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2731,"id":2750,"nodeType":"Return","src":"11349:77:11"}]},"documentation":{"id":2720,"nodeType":"StructuredDocumentation","src":"10919:269:11","text":" @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."},"id":2752,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"11202:3:11","nodeType":"FunctionDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2723,"mutability":"mutable","name":"map","nameLocation":"11240:3:11","nodeType":"VariableDeclaration","scope":2752,"src":"11215:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":2722,"nodeType":"UserDefinedTypeName","pathNode":{"id":2721,"name":"UintToAddressMap","nameLocations":["11215:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":2519,"src":"11215:16:11"},"referencedDeclaration":2519,"src":"11215:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$2519_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":2725,"mutability":"mutable","name":"key","nameLocation":"11261:3:11","nodeType":"VariableDeclaration","scope":2752,"src":"11253:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"11253:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2727,"mutability":"mutable","name":"errorMessage","nameLocation":"11288:12:11","nodeType":"VariableDeclaration","scope":2752,"src":"11274:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2726,"name":"string","nodeType":"ElementaryTypeName","src":"11274:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11205:101:11"},"returnParameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2752,"src":"11330:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2729,"name":"address","nodeType":"ElementaryTypeName","src":"11330:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11329:9:11"},"scope":3188,"src":"11193:240:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableMap.AddressToUintMap","id":2756,"members":[{"constant":false,"id":2755,"mutability":"mutable","name":"_inner","nameLocation":"11518:6:11","nodeType":"VariableDeclaration","scope":2756,"src":"11498:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2754,"nodeType":"UserDefinedTypeName","pathNode":{"id":2753,"name":"Bytes32ToBytes32Map","nameLocations":["11498:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":2082,"src":"11498:19:11"},"referencedDeclaration":2082,"src":"11498:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"}],"name":"AddressToUintMap","nameLocation":"11471:16:11","nodeType":"StructDefinition","scope":3188,"src":"11464:67:11","visibility":"public"},{"body":{"id":2788,"nodeType":"Block","src":"11883:87:11","statements":[{"expression":{"arguments":[{"expression":{"id":2770,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"11904:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":2771,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11908:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"11904:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2778,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"11940:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11932:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2776,"name":"uint160","nodeType":"ElementaryTypeName","src":"11932:7:11","typeDescriptions":{}}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11932:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11924:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2774,"name":"uint256","nodeType":"ElementaryTypeName","src":"11924:7:11","typeDescriptions":{}}},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11924:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11916:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11916:7:11","typeDescriptions":{}}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11916:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"11956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11948:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11948:7:11","typeDescriptions":{}}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11948:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2769,"name":"set","nodeType":"Identifier","overloadedDeclarations":[2110,2339,2552,2789,3029],"referencedDeclaration":2110,"src":"11900:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11900:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2768,"id":2787,"nodeType":"Return","src":"11893:70:11"}]},"documentation":{"id":2757,"nodeType":"StructuredDocumentation","src":"11537:216:11","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":2789,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"11767:3:11","nodeType":"FunctionDefinition","parameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"map","nameLocation":"11805:3:11","nodeType":"VariableDeclaration","scope":2789,"src":"11780:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":2759,"nodeType":"UserDefinedTypeName","pathNode":{"id":2758,"name":"AddressToUintMap","nameLocations":["11780:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":2756,"src":"11780:16:11"},"referencedDeclaration":2756,"src":"11780:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":2762,"mutability":"mutable","name":"key","nameLocation":"11826:3:11","nodeType":"VariableDeclaration","scope":2789,"src":"11818:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2761,"name":"address","nodeType":"ElementaryTypeName","src":"11818:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2764,"mutability":"mutable","name":"value","nameLocation":"11847:5:11","nodeType":"VariableDeclaration","scope":2789,"src":"11839:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2763,"name":"uint256","nodeType":"ElementaryTypeName","src":"11839:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11770:88:11"},"returnParameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2789,"src":"11877:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2766,"name":"bool","nodeType":"ElementaryTypeName","src":"11877:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11876:6:11"},"scope":3188,"src":"11758:212:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2815,"nodeType":"Block","src":"12212:74:11","statements":[{"expression":{"arguments":[{"expression":{"id":2801,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"12236:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":2802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12240:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"12236:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2809,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"12272:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12264:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2807,"name":"uint160","nodeType":"ElementaryTypeName","src":"12264:7:11","typeDescriptions":{}}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12264:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12256:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2805,"name":"uint256","nodeType":"ElementaryTypeName","src":"12256:7:11","typeDescriptions":{}}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12256:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12248:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12248:7:11","typeDescriptions":{}}},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12248:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2800,"name":"remove","nodeType":"Identifier","overloadedDeclarations":[2134,2360,2573,2816,3047],"referencedDeclaration":2134,"src":"12229:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12229:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2799,"id":2814,"nodeType":"Return","src":"12222:57:11"}]},"documentation":{"id":2790,"nodeType":"StructuredDocumentation","src":"11976:148:11","text":" @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":2816,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"12138:6:11","nodeType":"FunctionDefinition","parameters":{"id":2796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2793,"mutability":"mutable","name":"map","nameLocation":"12170:3:11","nodeType":"VariableDeclaration","scope":2816,"src":"12145:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":2792,"nodeType":"UserDefinedTypeName","pathNode":{"id":2791,"name":"AddressToUintMap","nameLocations":["12145:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":2756,"src":"12145:16:11"},"referencedDeclaration":2756,"src":"12145:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":2795,"mutability":"mutable","name":"key","nameLocation":"12183:3:11","nodeType":"VariableDeclaration","scope":2816,"src":"12175:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2794,"name":"address","nodeType":"ElementaryTypeName","src":"12175:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12144:43:11"},"returnParameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2816,"src":"12206:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2797,"name":"bool","nodeType":"ElementaryTypeName","src":"12206:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12205:6:11"},"scope":3188,"src":"12129:157:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2842,"nodeType":"Block","src":"12455:76:11","statements":[{"expression":{"arguments":[{"expression":{"id":2828,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"12481:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":2829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12485:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"12481:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2836,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"12517:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12509:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2834,"name":"uint160","nodeType":"ElementaryTypeName","src":"12509:7:11","typeDescriptions":{}}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12509:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12501:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2832,"name":"uint256","nodeType":"ElementaryTypeName","src":"12501:7:11","typeDescriptions":{}}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12501:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12493:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12493:7:11","typeDescriptions":{}}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12493:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2827,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2152,2381,2594,2843,3065],"referencedDeclaration":2152,"src":"12472:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12472:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2826,"id":2841,"nodeType":"Return","src":"12465:59:11"}]},"documentation":{"id":2817,"nodeType":"StructuredDocumentation","src":"12292:68:11","text":" @dev Returns true if the key is in the map. O(1)."},"id":2843,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"12374:8:11","nodeType":"FunctionDefinition","parameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"map","nameLocation":"12408:3:11","nodeType":"VariableDeclaration","scope":2843,"src":"12383:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":2819,"nodeType":"UserDefinedTypeName","pathNode":{"id":2818,"name":"AddressToUintMap","nameLocations":["12383:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":2756,"src":"12383:16:11"},"referencedDeclaration":2756,"src":"12383:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":2822,"mutability":"mutable","name":"key","nameLocation":"12421:3:11","nodeType":"VariableDeclaration","scope":2843,"src":"12413:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2821,"name":"address","nodeType":"ElementaryTypeName","src":"12413:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12382:43:11"},"returnParameters":{"id":2826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2843,"src":"12449:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2824,"name":"bool","nodeType":"ElementaryTypeName","src":"12449:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12448:6:11"},"scope":3188,"src":"12365:166:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2857,"nodeType":"Block","src":"12692:42:11","statements":[{"expression":{"arguments":[{"expression":{"id":2853,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"12716:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":2854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12720:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"12716:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}],"id":2852,"name":"length","nodeType":"Identifier","overloadedDeclarations":[2167,2396,2609,2858,3080],"referencedDeclaration":2167,"src":"12709:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12709:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2851,"id":2856,"nodeType":"Return","src":"12702:25:11"}]},"documentation":{"id":2844,"nodeType":"StructuredDocumentation","src":"12537:72:11","text":" @dev Returns the number of elements in the map. O(1)."},"id":2858,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"12623:6:11","nodeType":"FunctionDefinition","parameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"map","nameLocation":"12655:3:11","nodeType":"VariableDeclaration","scope":2858,"src":"12630:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":2846,"nodeType":"UserDefinedTypeName","pathNode":{"id":2845,"name":"AddressToUintMap","nameLocations":["12630:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":2756,"src":"12630:16:11"},"referencedDeclaration":2756,"src":"12630:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"}],"src":"12629:30:11"},"returnParameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2858,"src":"12683:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2849,"name":"uint256","nodeType":"ElementaryTypeName","src":"12683:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12682:9:11"},"scope":3188,"src":"12614:120:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2897,"nodeType":"Block","src":"13169:134:11","statements":[{"assignments":[2872,2874],"declarations":[{"constant":false,"id":2872,"mutability":"mutable","name":"key","nameLocation":"13188:3:11","nodeType":"VariableDeclaration","scope":2897,"src":"13180:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2871,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13180:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2874,"mutability":"mutable","name":"value","nameLocation":"13201:5:11","nodeType":"VariableDeclaration","scope":2897,"src":"13193:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13193:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2880,"initialValue":{"arguments":[{"expression":{"id":2876,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"13213:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":2877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13217:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"13213:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":2878,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"13225:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2875,"name":"at","nodeType":"Identifier","overloadedDeclarations":[2196,2430,2649,2898,3111],"referencedDeclaration":2196,"src":"13210:2:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13210:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"13179:52:11"},{"expression":{"components":[{"arguments":[{"arguments":[{"arguments":[{"id":2887,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"13273:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13265:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2885,"name":"uint256","nodeType":"ElementaryTypeName","src":"13265:7:11","typeDescriptions":{}}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13265:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13257:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2883,"name":"uint160","nodeType":"ElementaryTypeName","src":"13257:7:11","typeDescriptions":{}}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13257:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13249:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2881,"name":"address","nodeType":"ElementaryTypeName","src":"13249:7:11","typeDescriptions":{}}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13249:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"13289:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13281:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2891,"name":"uint256","nodeType":"ElementaryTypeName","src":"13281:7:11","typeDescriptions":{}}},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13281:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2895,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13248:48:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"functionReturnParameters":2870,"id":2896,"nodeType":"Return","src":"13241:55:11"}]},"documentation":{"id":2859,"nodeType":"StructuredDocumentation","src":"12740:326:11","text":" @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2898,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"13080:2:11","nodeType":"FunctionDefinition","parameters":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"map","nameLocation":"13108:3:11","nodeType":"VariableDeclaration","scope":2898,"src":"13083:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":2861,"nodeType":"UserDefinedTypeName","pathNode":{"id":2860,"name":"AddressToUintMap","nameLocations":["13083:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":2756,"src":"13083:16:11"},"referencedDeclaration":2756,"src":"13083:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":2864,"mutability":"mutable","name":"index","nameLocation":"13121:5:11","nodeType":"VariableDeclaration","scope":2898,"src":"13113:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2863,"name":"uint256","nodeType":"ElementaryTypeName","src":"13113:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13082:45:11"},"returnParameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2898,"src":"13151:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2866,"name":"address","nodeType":"ElementaryTypeName","src":"13151:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2898,"src":"13160:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2868,"name":"uint256","nodeType":"ElementaryTypeName","src":"13160:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13150:18:11"},"scope":3188,"src":"13071:232:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2937,"nodeType":"Block","src":"13541:141:11","statements":[{"assignments":[2912,2914],"declarations":[{"constant":false,"id":2912,"mutability":"mutable","name":"success","nameLocation":"13557:7:11","nodeType":"VariableDeclaration","scope":2937,"src":"13552:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2911,"name":"bool","nodeType":"ElementaryTypeName","src":"13552:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2914,"mutability":"mutable","name":"value","nameLocation":"13574:5:11","nodeType":"VariableDeclaration","scope":2937,"src":"13566:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2913,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13566:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2929,"initialValue":{"arguments":[{"expression":{"id":2916,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"13590:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":2917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13594:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"13590:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2924,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"13626:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13618:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2922,"name":"uint160","nodeType":"ElementaryTypeName","src":"13618:7:11","typeDescriptions":{}}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13618:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13610:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2920,"name":"uint256","nodeType":"ElementaryTypeName","src":"13610:7:11","typeDescriptions":{}}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13610:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13602:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13602:7:11","typeDescriptions":{}}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13602:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2915,"name":"tryGet","nodeType":"Identifier","overloadedDeclarations":[2240,2464,2689,2938,3142],"referencedDeclaration":2240,"src":"13583:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13583:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"13551:82:11"},{"expression":{"components":[{"id":2930,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"13651:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"id":2933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"13668:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13660:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2931,"name":"uint256","nodeType":"ElementaryTypeName","src":"13660:7:11","typeDescriptions":{}}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13660:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2935,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13650:25:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2910,"id":2936,"nodeType":"Return","src":"13643:32:11"}]},"documentation":{"id":2899,"nodeType":"StructuredDocumentation","src":"13309:130:11","text":" @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."},"id":2938,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"13453:6:11","nodeType":"FunctionDefinition","parameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2902,"mutability":"mutable","name":"map","nameLocation":"13485:3:11","nodeType":"VariableDeclaration","scope":2938,"src":"13460:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":2901,"nodeType":"UserDefinedTypeName","pathNode":{"id":2900,"name":"AddressToUintMap","nameLocations":["13460:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":2756,"src":"13460:16:11"},"referencedDeclaration":2756,"src":"13460:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":2904,"mutability":"mutable","name":"key","nameLocation":"13498:3:11","nodeType":"VariableDeclaration","scope":2938,"src":"13490:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2903,"name":"address","nodeType":"ElementaryTypeName","src":"13490:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13459:43:11"},"returnParameters":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2938,"src":"13526:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2906,"name":"bool","nodeType":"ElementaryTypeName","src":"13526:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2938,"src":"13532:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2908,"name":"uint256","nodeType":"ElementaryTypeName","src":"13532:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13525:15:11"},"scope":3188,"src":"13444:238:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2967,"nodeType":"Block","src":"13921:80:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2952,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"13950:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":2953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13954:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"13950:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2960,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"13986:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13978:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2958,"name":"uint160","nodeType":"ElementaryTypeName","src":"13978:7:11","typeDescriptions":{}}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13978:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13970:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2956,"name":"uint256","nodeType":"ElementaryTypeName","src":"13970:7:11","typeDescriptions":{}}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13962:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13962:7:11","typeDescriptions":{}}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13962:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2951,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2273,2308,2488,2515,2719,2752,2968,3001,3163,3187],"referencedDeclaration":2273,"src":"13946:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13938:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"13938:7:11","typeDescriptions":{}}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13938:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2948,"id":2966,"nodeType":"Return","src":"13931:63:11"}]},"documentation":{"id":2939,"nodeType":"StructuredDocumentation","src":"13688:140:11","text":" @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."},"id":2968,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"13842:3:11","nodeType":"FunctionDefinition","parameters":{"id":2945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2942,"mutability":"mutable","name":"map","nameLocation":"13871:3:11","nodeType":"VariableDeclaration","scope":2968,"src":"13846:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":2941,"nodeType":"UserDefinedTypeName","pathNode":{"id":2940,"name":"AddressToUintMap","nameLocations":["13846:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":2756,"src":"13846:16:11"},"referencedDeclaration":2756,"src":"13846:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":2944,"mutability":"mutable","name":"key","nameLocation":"13884:3:11","nodeType":"VariableDeclaration","scope":2968,"src":"13876:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2943,"name":"address","nodeType":"ElementaryTypeName","src":"13876:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13845:43:11"},"returnParameters":{"id":2948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2968,"src":"13912:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2946,"name":"uint256","nodeType":"ElementaryTypeName","src":"13912:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13911:9:11"},"scope":3188,"src":"13833:168:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3000,"nodeType":"Block","src":"14427:94:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2984,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"14456:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":2985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14460:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"14456:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2992,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"14492:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14484:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2990,"name":"uint160","nodeType":"ElementaryTypeName","src":"14484:7:11","typeDescriptions":{}}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14484:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14476:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2988,"name":"uint256","nodeType":"ElementaryTypeName","src":"14476:7:11","typeDescriptions":{}}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14476:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14468:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14468:7:11","typeDescriptions":{}}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14468:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2996,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"14500:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2983,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2273,2308,2488,2515,2719,2752,2968,3001,3163,3187],"referencedDeclaration":2308,"src":"14452:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14452:61:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14444:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2981,"name":"uint256","nodeType":"ElementaryTypeName","src":"14444:7:11","typeDescriptions":{}}},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14444:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2980,"id":2999,"nodeType":"Return","src":"14437:77:11"}]},"documentation":{"id":2969,"nodeType":"StructuredDocumentation","src":"14007:269:11","text":" @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."},"id":3001,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"14290:3:11","nodeType":"FunctionDefinition","parameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2972,"mutability":"mutable","name":"map","nameLocation":"14328:3:11","nodeType":"VariableDeclaration","scope":3001,"src":"14303:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":2971,"nodeType":"UserDefinedTypeName","pathNode":{"id":2970,"name":"AddressToUintMap","nameLocations":["14303:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":2756,"src":"14303:16:11"},"referencedDeclaration":2756,"src":"14303:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$2756_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":2974,"mutability":"mutable","name":"key","nameLocation":"14349:3:11","nodeType":"VariableDeclaration","scope":3001,"src":"14341:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2973,"name":"address","nodeType":"ElementaryTypeName","src":"14341:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"errorMessage","nameLocation":"14376:12:11","nodeType":"VariableDeclaration","scope":3001,"src":"14362:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2975,"name":"string","nodeType":"ElementaryTypeName","src":"14362:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14293:101:11"},"returnParameters":{"id":2980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3001,"src":"14418:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2978,"name":"uint256","nodeType":"ElementaryTypeName","src":"14418:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14417:9:11"},"scope":3188,"src":"14281:240:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableMap.Bytes32ToUintMap","id":3005,"members":[{"constant":false,"id":3004,"mutability":"mutable","name":"_inner","nameLocation":"14606:6:11","nodeType":"VariableDeclaration","scope":3005,"src":"14586:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":3003,"nodeType":"UserDefinedTypeName","pathNode":{"id":3002,"name":"Bytes32ToBytes32Map","nameLocations":["14586:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":2082,"src":"14586:19:11"},"referencedDeclaration":2082,"src":"14586:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"}],"name":"Bytes32ToUintMap","nameLocation":"14559:16:11","nodeType":"StructDefinition","scope":3188,"src":"14552:67:11","visibility":"public"},{"body":{"id":3028,"nodeType":"Block","src":"14971:60:11","statements":[{"expression":{"arguments":[{"expression":{"id":3019,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"14992:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3004,"src":"14992:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3021,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"15004:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"15017:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15009:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15009:7:11","typeDescriptions":{}}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15009:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3018,"name":"set","nodeType":"Identifier","overloadedDeclarations":[2110,2339,2552,2789,3029],"referencedDeclaration":2110,"src":"14988:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14988:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3017,"id":3027,"nodeType":"Return","src":"14981:43:11"}]},"documentation":{"id":3006,"nodeType":"StructuredDocumentation","src":"14625:216:11","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":3029,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"14855:3:11","nodeType":"FunctionDefinition","parameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"map","nameLocation":"14893:3:11","nodeType":"VariableDeclaration","scope":3029,"src":"14868:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3008,"nodeType":"UserDefinedTypeName","pathNode":{"id":3007,"name":"Bytes32ToUintMap","nameLocations":["14868:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":3005,"src":"14868:16:11"},"referencedDeclaration":3005,"src":"14868:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3011,"mutability":"mutable","name":"key","nameLocation":"14914:3:11","nodeType":"VariableDeclaration","scope":3029,"src":"14906:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14906:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3013,"mutability":"mutable","name":"value","nameLocation":"14935:5:11","nodeType":"VariableDeclaration","scope":3029,"src":"14927:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"14927:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14858:88:11"},"returnParameters":{"id":3017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3029,"src":"14965:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3015,"name":"bool","nodeType":"ElementaryTypeName","src":"14965:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14964:6:11"},"scope":3188,"src":"14846:185:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3046,"nodeType":"Block","src":"15273:47:11","statements":[{"expression":{"arguments":[{"expression":{"id":3041,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"15297:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3042,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15301:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3004,"src":"15297:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3043,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"15309:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3040,"name":"remove","nodeType":"Identifier","overloadedDeclarations":[2134,2360,2573,2816,3047],"referencedDeclaration":2134,"src":"15290:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15290:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3039,"id":3045,"nodeType":"Return","src":"15283:30:11"}]},"documentation":{"id":3030,"nodeType":"StructuredDocumentation","src":"15037:148:11","text":" @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":3047,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"15199:6:11","nodeType":"FunctionDefinition","parameters":{"id":3036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"map","nameLocation":"15231:3:11","nodeType":"VariableDeclaration","scope":3047,"src":"15206:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3032,"nodeType":"UserDefinedTypeName","pathNode":{"id":3031,"name":"Bytes32ToUintMap","nameLocations":["15206:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":3005,"src":"15206:16:11"},"referencedDeclaration":3005,"src":"15206:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3035,"mutability":"mutable","name":"key","nameLocation":"15244:3:11","nodeType":"VariableDeclaration","scope":3047,"src":"15236:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15236:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15205:43:11"},"returnParameters":{"id":3039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3047,"src":"15267:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3037,"name":"bool","nodeType":"ElementaryTypeName","src":"15267:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15266:6:11"},"scope":3188,"src":"15190:130:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3064,"nodeType":"Block","src":"15489:49:11","statements":[{"expression":{"arguments":[{"expression":{"id":3059,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"15515:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15519:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3004,"src":"15515:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3061,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"15527:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3058,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2152,2381,2594,2843,3065],"referencedDeclaration":2152,"src":"15506:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15506:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3057,"id":3063,"nodeType":"Return","src":"15499:32:11"}]},"documentation":{"id":3048,"nodeType":"StructuredDocumentation","src":"15326:68:11","text":" @dev Returns true if the key is in the map. O(1)."},"id":3065,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"15408:8:11","nodeType":"FunctionDefinition","parameters":{"id":3054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3051,"mutability":"mutable","name":"map","nameLocation":"15442:3:11","nodeType":"VariableDeclaration","scope":3065,"src":"15417:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3050,"nodeType":"UserDefinedTypeName","pathNode":{"id":3049,"name":"Bytes32ToUintMap","nameLocations":["15417:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":3005,"src":"15417:16:11"},"referencedDeclaration":3005,"src":"15417:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3053,"mutability":"mutable","name":"key","nameLocation":"15455:3:11","nodeType":"VariableDeclaration","scope":3065,"src":"15447:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15447:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15416:43:11"},"returnParameters":{"id":3057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3065,"src":"15483:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3055,"name":"bool","nodeType":"ElementaryTypeName","src":"15483:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15482:6:11"},"scope":3188,"src":"15399:139:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3079,"nodeType":"Block","src":"15699:42:11","statements":[{"expression":{"arguments":[{"expression":{"id":3075,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"15723:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3076,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15727:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3004,"src":"15723:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}],"id":3074,"name":"length","nodeType":"Identifier","overloadedDeclarations":[2167,2396,2609,2858,3080],"referencedDeclaration":2167,"src":"15716:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3073,"id":3078,"nodeType":"Return","src":"15709:25:11"}]},"documentation":{"id":3066,"nodeType":"StructuredDocumentation","src":"15544:72:11","text":" @dev Returns the number of elements in the map. O(1)."},"id":3080,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"15630:6:11","nodeType":"FunctionDefinition","parameters":{"id":3070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3069,"mutability":"mutable","name":"map","nameLocation":"15662:3:11","nodeType":"VariableDeclaration","scope":3080,"src":"15637:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3068,"nodeType":"UserDefinedTypeName","pathNode":{"id":3067,"name":"Bytes32ToUintMap","nameLocations":["15637:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":3005,"src":"15637:16:11"},"referencedDeclaration":3005,"src":"15637:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"}],"src":"15636:30:11"},"returnParameters":{"id":3073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3080,"src":"15690:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3071,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15689:9:11"},"scope":3188,"src":"15621:120:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3110,"nodeType":"Block","src":"16176:107:11","statements":[{"assignments":[3094,3096],"declarations":[{"constant":false,"id":3094,"mutability":"mutable","name":"key","nameLocation":"16195:3:11","nodeType":"VariableDeclaration","scope":3110,"src":"16187:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16187:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3096,"mutability":"mutable","name":"value","nameLocation":"16208:5:11","nodeType":"VariableDeclaration","scope":3110,"src":"16200:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16200:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3102,"initialValue":{"arguments":[{"expression":{"id":3098,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"16220:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16224:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3004,"src":"16220:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3100,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"16232:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3097,"name":"at","nodeType":"Identifier","overloadedDeclarations":[2196,2430,2649,2898,3111],"referencedDeclaration":2196,"src":"16217:2:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16217:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"16186:52:11"},{"expression":{"components":[{"id":3103,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"16256:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"16269:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16261:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"16261:7:11","typeDescriptions":{}}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16261:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3108,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16255:21:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_uint256_$","typeString":"tuple(bytes32,uint256)"}},"functionReturnParameters":3092,"id":3109,"nodeType":"Return","src":"16248:28:11"}]},"documentation":{"id":3081,"nodeType":"StructuredDocumentation","src":"15747:326:11","text":" @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3111,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"16087:2:11","nodeType":"FunctionDefinition","parameters":{"id":3087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"map","nameLocation":"16115:3:11","nodeType":"VariableDeclaration","scope":3111,"src":"16090:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3083,"nodeType":"UserDefinedTypeName","pathNode":{"id":3082,"name":"Bytes32ToUintMap","nameLocations":["16090:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":3005,"src":"16090:16:11"},"referencedDeclaration":3005,"src":"16090:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3086,"mutability":"mutable","name":"index","nameLocation":"16128:5:11","nodeType":"VariableDeclaration","scope":3111,"src":"16120:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3085,"name":"uint256","nodeType":"ElementaryTypeName","src":"16120:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16089:45:11"},"returnParameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3111,"src":"16158:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16158:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3111,"src":"16167:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3090,"name":"uint256","nodeType":"ElementaryTypeName","src":"16167:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16157:18:11"},"scope":3188,"src":"16078:205:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3141,"nodeType":"Block","src":"16521:114:11","statements":[{"assignments":[3125,3127],"declarations":[{"constant":false,"id":3125,"mutability":"mutable","name":"success","nameLocation":"16537:7:11","nodeType":"VariableDeclaration","scope":3141,"src":"16532:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3124,"name":"bool","nodeType":"ElementaryTypeName","src":"16532:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3127,"mutability":"mutable","name":"value","nameLocation":"16554:5:11","nodeType":"VariableDeclaration","scope":3141,"src":"16546:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16546:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3133,"initialValue":{"arguments":[{"expression":{"id":3129,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"16570:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3130,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16574:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3004,"src":"16570:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3131,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"16582:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3128,"name":"tryGet","nodeType":"Identifier","overloadedDeclarations":[2240,2464,2689,2938,3142],"referencedDeclaration":2240,"src":"16563:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16563:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"16531:55:11"},{"expression":{"components":[{"id":3134,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"16604:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"id":3137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"16621:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16613:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"16613:7:11","typeDescriptions":{}}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3139,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16603:25:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3123,"id":3140,"nodeType":"Return","src":"16596:32:11"}]},"documentation":{"id":3112,"nodeType":"StructuredDocumentation","src":"16289:130:11","text":" @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."},"id":3142,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"16433:6:11","nodeType":"FunctionDefinition","parameters":{"id":3118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"map","nameLocation":"16465:3:11","nodeType":"VariableDeclaration","scope":3142,"src":"16440:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3114,"nodeType":"UserDefinedTypeName","pathNode":{"id":3113,"name":"Bytes32ToUintMap","nameLocations":["16440:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":3005,"src":"16440:16:11"},"referencedDeclaration":3005,"src":"16440:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3117,"mutability":"mutable","name":"key","nameLocation":"16478:3:11","nodeType":"VariableDeclaration","scope":3142,"src":"16470:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16470:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16439:43:11"},"returnParameters":{"id":3123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3142,"src":"16506:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3119,"name":"bool","nodeType":"ElementaryTypeName","src":"16506:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3142,"src":"16512:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3121,"name":"uint256","nodeType":"ElementaryTypeName","src":"16512:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16505:15:11"},"scope":3188,"src":"16424:211:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3162,"nodeType":"Block","src":"16874:53:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3156,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"16903:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16907:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3004,"src":"16903:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3158,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"16915:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3155,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2273,2308,2488,2515,2719,2752,2968,3001,3163,3187],"referencedDeclaration":2273,"src":"16899:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16899:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16891:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3153,"name":"uint256","nodeType":"ElementaryTypeName","src":"16891:7:11","typeDescriptions":{}}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16891:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3152,"id":3161,"nodeType":"Return","src":"16884:36:11"}]},"documentation":{"id":3143,"nodeType":"StructuredDocumentation","src":"16641:140:11","text":" @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."},"id":3163,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"16795:3:11","nodeType":"FunctionDefinition","parameters":{"id":3149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3146,"mutability":"mutable","name":"map","nameLocation":"16824:3:11","nodeType":"VariableDeclaration","scope":3163,"src":"16799:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3145,"nodeType":"UserDefinedTypeName","pathNode":{"id":3144,"name":"Bytes32ToUintMap","nameLocations":["16799:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":3005,"src":"16799:16:11"},"referencedDeclaration":3005,"src":"16799:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3148,"mutability":"mutable","name":"key","nameLocation":"16837:3:11","nodeType":"VariableDeclaration","scope":3163,"src":"16829:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3147,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16829:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16798:43:11"},"returnParameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3163,"src":"16865:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3150,"name":"uint256","nodeType":"ElementaryTypeName","src":"16865:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16864:9:11"},"scope":3188,"src":"16786:141:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3186,"nodeType":"Block","src":"17353:67:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3179,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"17382:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3180,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17386:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3004,"src":"17382:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3181,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"17394:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3182,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"17399:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2082_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3178,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2273,2308,2488,2515,2719,2752,2968,3001,3163,3187],"referencedDeclaration":2308,"src":"17378:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2082_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17378:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17370:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3176,"name":"uint256","nodeType":"ElementaryTypeName","src":"17370:7:11","typeDescriptions":{}}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17370:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3175,"id":3185,"nodeType":"Return","src":"17363:50:11"}]},"documentation":{"id":3164,"nodeType":"StructuredDocumentation","src":"16933:269:11","text":" @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."},"id":3187,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"17216:3:11","nodeType":"FunctionDefinition","parameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"map","nameLocation":"17254:3:11","nodeType":"VariableDeclaration","scope":3187,"src":"17229:28:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3166,"nodeType":"UserDefinedTypeName","pathNode":{"id":3165,"name":"Bytes32ToUintMap","nameLocations":["17229:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":3005,"src":"17229:16:11"},"referencedDeclaration":3005,"src":"17229:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3005_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3169,"mutability":"mutable","name":"key","nameLocation":"17275:3:11","nodeType":"VariableDeclaration","scope":3187,"src":"17267:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17267:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3171,"mutability":"mutable","name":"errorMessage","nameLocation":"17302:12:11","nodeType":"VariableDeclaration","scope":3187,"src":"17288:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3170,"name":"string","nodeType":"ElementaryTypeName","src":"17288:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17219:101:11"},"returnParameters":{"id":3175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3187,"src":"17344:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3173,"name":"uint256","nodeType":"ElementaryTypeName","src":"17344:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17343:9:11"},"scope":3188,"src":"17207:213:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3189,"src":"1621:15801:11","usedErrors":[],"usedEvents":[]}],"src":"205:17218:11"},"id":11},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[3801]},"id":3802,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3190,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":3191,"nodeType":"StructuredDocumentation","src":"230:1090:12","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":3801,"linearizedBaseContracts":[3801],"name":"EnumerableSet","nameLocation":"1329:13:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":3199,"members":[{"constant":false,"id":3194,"mutability":"mutable","name":"_values","nameLocation":"1853:7:12","nodeType":"VariableDeclaration","scope":3199,"src":"1843:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1843:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3193,"nodeType":"ArrayTypeName","src":"1843:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3198,"mutability":"mutable","name":"_indexes","nameLocation":"2021:8:12","nodeType":"VariableDeclaration","scope":3199,"src":"1993:36:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":3197,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2001:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1993:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"2012:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1796:3:12","nodeType":"StructDefinition","scope":3801,"src":"1789:247:12","visibility":"public"},{"body":{"id":3240,"nodeType":"Block","src":"2275:335:12","statements":[{"condition":{"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2289:22:12","subExpression":{"arguments":[{"id":3211,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"2300:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":3212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"2305:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3210,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"2290:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3199_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2290:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3238,"nodeType":"Block","src":"2567:37:12","statements":[{"expression":{"hexValue":"66616c7365","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2588:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3209,"id":3237,"nodeType":"Return","src":"2581:12:12"}]},"id":3239,"nodeType":"IfStatement","src":"2285:319:12","trueBody":{"id":3235,"nodeType":"Block","src":"2313:248:12","statements":[{"expression":{"arguments":[{"id":3220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"2344:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":3215,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"2327:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2331:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3194,"src":"2327:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2339:4:12","memberName":"push","nodeType":"MemberAccess","src":"2327:16:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2327:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3222,"nodeType":"ExpressionStatement","src":"2327:23:12"},{"expression":{"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3223,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"2485:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2489:8:12","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3198,"src":"2485:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3227,"indexExpression":{"id":3225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"2498:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2485:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":3228,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"2507:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2511:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3194,"src":"2507:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2519:6:12","memberName":"length","nodeType":"MemberAccess","src":"2507:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2485:40:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3232,"nodeType":"ExpressionStatement","src":"2485:40:12"},{"expression":{"hexValue":"74727565","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2546:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3209,"id":3234,"nodeType":"Return","src":"2539:11:12"}]}}]},"documentation":{"id":3200,"nodeType":"StructuredDocumentation","src":"2042:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3241,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2215:4:12","nodeType":"FunctionDefinition","parameters":{"id":3206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3203,"mutability":"mutable","name":"set","nameLocation":"2232:3:12","nodeType":"VariableDeclaration","scope":3241,"src":"2220:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3202,"nodeType":"UserDefinedTypeName","pathNode":{"id":3201,"name":"Set","nameLocations":["2220:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":3199,"src":"2220:3:12"},"referencedDeclaration":3199,"src":"2220:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3205,"mutability":"mutable","name":"value","nameLocation":"2245:5:12","nodeType":"VariableDeclaration","scope":3241,"src":"2237:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2237:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2219:32:12"},"returnParameters":{"id":3209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3241,"src":"2269:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3207,"name":"bool","nodeType":"ElementaryTypeName","src":"2269:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2268:6:12"},"scope":3801,"src":"2206:404:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3324,"nodeType":"Block","src":"2850:1316:12","statements":[{"assignments":[3253],"declarations":[{"constant":false,"id":3253,"mutability":"mutable","name":"valueIndex","nameLocation":"2968:10:12","nodeType":"VariableDeclaration","scope":3324,"src":"2960:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3252,"name":"uint256","nodeType":"ElementaryTypeName","src":"2960:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3258,"initialValue":{"baseExpression":{"expression":{"id":3254,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"2981:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2985:8:12","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3198,"src":"2981:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3257,"indexExpression":{"id":3256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"2994:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2981:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2960:40:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3259,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"3015:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3029:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3015:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3322,"nodeType":"Block","src":"4123:37:12","statements":[{"expression":{"hexValue":"66616c7365","id":3320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4144:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3251,"id":3321,"nodeType":"Return","src":"4137:12:12"}]},"id":3323,"nodeType":"IfStatement","src":"3011:1149:12","trueBody":{"id":3319,"nodeType":"Block","src":"3032:1085:12","statements":[{"assignments":[3263],"declarations":[{"constant":false,"id":3263,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3392:13:12","nodeType":"VariableDeclaration","scope":3319,"src":"3384:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3267,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3264,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"3408:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3421:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3408:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3384:38:12"},{"assignments":[3269],"declarations":[{"constant":false,"id":3269,"mutability":"mutable","name":"lastIndex","nameLocation":"3444:9:12","nodeType":"VariableDeclaration","scope":3319,"src":"3436:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3436:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3275,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3270,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"3456:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3460:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3194,"src":"3456:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3468:6:12","memberName":"length","nodeType":"MemberAccess","src":"3456:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3477:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3456:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3436:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3276,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"3497:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3277,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"3510:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3497:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3303,"nodeType":"IfStatement","src":"3493:398:12","trueBody":{"id":3302,"nodeType":"Block","src":"3525:366:12","statements":[{"assignments":[3280],"declarations":[{"constant":false,"id":3280,"mutability":"mutable","name":"lastValue","nameLocation":"3551:9:12","nodeType":"VariableDeclaration","scope":3302,"src":"3543:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3543:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3285,"initialValue":{"baseExpression":{"expression":{"id":3281,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"3563:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3567:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3194,"src":"3563:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3284,"indexExpression":{"id":3283,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"3575:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3563:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3543:42:12"},{"expression":{"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3286,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"3685:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3689:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3194,"src":"3685:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3290,"indexExpression":{"id":3288,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"3697:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3685:26:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3291,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"3714:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3685:38:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3293,"nodeType":"ExpressionStatement","src":"3685:38:12"},{"expression":{"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3294,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"3797:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3801:8:12","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3198,"src":"3797:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3298,"indexExpression":{"id":3296,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"3810:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3797:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3299,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"3823:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3797:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3301,"nodeType":"ExpressionStatement","src":"3797:36:12"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":3304,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"3969:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3973:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3194,"src":"3969:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3981:3:12","memberName":"pop","nodeType":"MemberAccess","src":"3969:15:12","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3969:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3310,"nodeType":"ExpressionStatement","src":"3969:17:12"},{"expression":{"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4054:26:12","subExpression":{"baseExpression":{"expression":{"id":3311,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"4061:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4065:8:12","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3198,"src":"4061:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3314,"indexExpression":{"id":3313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"4074:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4061:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3316,"nodeType":"ExpressionStatement","src":"4054:26:12"},{"expression":{"hexValue":"74727565","id":3317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4102:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3251,"id":3318,"nodeType":"Return","src":"4095:11:12"}]}}]},"documentation":{"id":3242,"nodeType":"StructuredDocumentation","src":"2616:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3325,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2787:7:12","nodeType":"FunctionDefinition","parameters":{"id":3248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3245,"mutability":"mutable","name":"set","nameLocation":"2807:3:12","nodeType":"VariableDeclaration","scope":3325,"src":"2795:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3244,"nodeType":"UserDefinedTypeName","pathNode":{"id":3243,"name":"Set","nameLocations":["2795:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":3199,"src":"2795:3:12"},"referencedDeclaration":3199,"src":"2795:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3247,"mutability":"mutable","name":"value","nameLocation":"2820:5:12","nodeType":"VariableDeclaration","scope":3325,"src":"2812:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2812:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:32:12"},"returnParameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3325,"src":"2844:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3249,"name":"bool","nodeType":"ElementaryTypeName","src":"2844:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2843:6:12"},"scope":3801,"src":"2778:1388:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3343,"nodeType":"Block","src":"4326:48:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":3336,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"4343:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4347:8:12","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3198,"src":"4343:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3339,"indexExpression":{"id":3338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"4356:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4343:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4366:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4343:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3335,"id":3342,"nodeType":"Return","src":"4336:31:12"}]},"documentation":{"id":3326,"nodeType":"StructuredDocumentation","src":"4172:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":3344,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4256:9:12","nodeType":"FunctionDefinition","parameters":{"id":3332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"set","nameLocation":"4278:3:12","nodeType":"VariableDeclaration","scope":3344,"src":"4266:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3328,"nodeType":"UserDefinedTypeName","pathNode":{"id":3327,"name":"Set","nameLocations":["4266:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":3199,"src":"4266:3:12"},"referencedDeclaration":3199,"src":"4266:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3331,"mutability":"mutable","name":"value","nameLocation":"4291:5:12","nodeType":"VariableDeclaration","scope":3344,"src":"4283:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4283:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4265:32:12"},"returnParameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3344,"src":"4320:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3333,"name":"bool","nodeType":"ElementaryTypeName","src":"4320:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4319:6:12"},"scope":3801,"src":"4247:127:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3357,"nodeType":"Block","src":"4520:42:12","statements":[{"expression":{"expression":{"expression":{"id":3353,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"4537:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4541:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3194,"src":"4537:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4549:6:12","memberName":"length","nodeType":"MemberAccess","src":"4537:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3352,"id":3356,"nodeType":"Return","src":"4530:25:12"}]},"documentation":{"id":3345,"nodeType":"StructuredDocumentation","src":"4380:70:12","text":" @dev Returns the number of values on the set. O(1)."},"id":3358,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4464:7:12","nodeType":"FunctionDefinition","parameters":{"id":3349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"set","nameLocation":"4484:3:12","nodeType":"VariableDeclaration","scope":3358,"src":"4472:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3347,"nodeType":"UserDefinedTypeName","pathNode":{"id":3346,"name":"Set","nameLocations":["4472:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":3199,"src":"4472:3:12"},"referencedDeclaration":3199,"src":"4472:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4471:17:12"},"returnParameters":{"id":3352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3358,"src":"4511:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"4511:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4510:9:12"},"scope":3801,"src":"4455:107:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3374,"nodeType":"Block","src":"4980:42:12","statements":[{"expression":{"baseExpression":{"expression":{"id":3369,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"4997:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5001:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3194,"src":"4997:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3372,"indexExpression":{"id":3371,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"5009:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4997:18:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3368,"id":3373,"nodeType":"Return","src":"4990:25:12"}]},"documentation":{"id":3359,"nodeType":"StructuredDocumentation","src":"4568:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3375,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4913:3:12","nodeType":"FunctionDefinition","parameters":{"id":3365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3362,"mutability":"mutable","name":"set","nameLocation":"4929:3:12","nodeType":"VariableDeclaration","scope":3375,"src":"4917:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3361,"nodeType":"UserDefinedTypeName","pathNode":{"id":3360,"name":"Set","nameLocations":["4917:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":3199,"src":"4917:3:12"},"referencedDeclaration":3199,"src":"4917:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3364,"mutability":"mutable","name":"index","nameLocation":"4942:5:12","nodeType":"VariableDeclaration","scope":3375,"src":"4934:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"4934:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4916:32:12"},"returnParameters":{"id":3368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3375,"src":"4971:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4971:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4970:9:12"},"scope":3801,"src":"4904:118:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3388,"nodeType":"Block","src":"5636:35:12","statements":[{"expression":{"expression":{"id":3385,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"5653:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5657:7:12","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3194,"src":"5653:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":3384,"id":3387,"nodeType":"Return","src":"5646:18:12"}]},"documentation":{"id":3376,"nodeType":"StructuredDocumentation","src":"5028:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3389,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5571:7:12","nodeType":"FunctionDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"set","nameLocation":"5591:3:12","nodeType":"VariableDeclaration","scope":3389,"src":"5579:15:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3378,"nodeType":"UserDefinedTypeName","pathNode":{"id":3377,"name":"Set","nameLocations":["5579:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":3199,"src":"5579:3:12"},"referencedDeclaration":3199,"src":"5579:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5578:17:12"},"returnParameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3389,"src":"5618:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5618:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3382,"nodeType":"ArrayTypeName","src":"5618:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5617:18:12"},"scope":3801,"src":"5562:109:12","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":3393,"members":[{"constant":false,"id":3392,"mutability":"mutable","name":"_inner","nameLocation":"5728:6:12","nodeType":"VariableDeclaration","scope":3393,"src":"5724:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3391,"nodeType":"UserDefinedTypeName","pathNode":{"id":3390,"name":"Set","nameLocations":["5724:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":3199,"src":"5724:3:12"},"referencedDeclaration":3199,"src":"5724:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5703:10:12","nodeType":"StructDefinition","scope":3801,"src":"5696:45:12","visibility":"public"},{"body":{"id":3410,"nodeType":"Block","src":"5987:47:12","statements":[{"expression":{"arguments":[{"expression":{"id":3405,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"6009:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6013:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3392,"src":"6009:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"6021:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3404,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"6004:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3199_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6004:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3403,"id":3409,"nodeType":"Return","src":"5997:30:12"}]},"documentation":{"id":3394,"nodeType":"StructuredDocumentation","src":"5747:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3411,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5920:3:12","nodeType":"FunctionDefinition","parameters":{"id":3400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"mutability":"mutable","name":"set","nameLocation":"5943:3:12","nodeType":"VariableDeclaration","scope":3411,"src":"5924:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3396,"nodeType":"UserDefinedTypeName","pathNode":{"id":3395,"name":"Bytes32Set","nameLocations":["5924:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3393,"src":"5924:10:12"},"referencedDeclaration":3393,"src":"5924:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3399,"mutability":"mutable","name":"value","nameLocation":"5956:5:12","nodeType":"VariableDeclaration","scope":3411,"src":"5948:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3398,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5948:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5923:39:12"},"returnParameters":{"id":3403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3411,"src":"5981:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3401,"name":"bool","nodeType":"ElementaryTypeName","src":"5981:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5980:6:12"},"scope":3801,"src":"5911:123:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3428,"nodeType":"Block","src":"6281:50:12","statements":[{"expression":{"arguments":[{"expression":{"id":3423,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"6306:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6310:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3392,"src":"6306:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"6318:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3422,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"6298:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3199_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3421,"id":3427,"nodeType":"Return","src":"6291:33:12"}]},"documentation":{"id":3412,"nodeType":"StructuredDocumentation","src":"6040:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3429,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6211:6:12","nodeType":"FunctionDefinition","parameters":{"id":3418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3415,"mutability":"mutable","name":"set","nameLocation":"6237:3:12","nodeType":"VariableDeclaration","scope":3429,"src":"6218:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3414,"nodeType":"UserDefinedTypeName","pathNode":{"id":3413,"name":"Bytes32Set","nameLocations":["6218:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3393,"src":"6218:10:12"},"referencedDeclaration":3393,"src":"6218:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3417,"mutability":"mutable","name":"value","nameLocation":"6250:5:12","nodeType":"VariableDeclaration","scope":3429,"src":"6242:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6242:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6217:39:12"},"returnParameters":{"id":3421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3429,"src":"6275:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3419,"name":"bool","nodeType":"ElementaryTypeName","src":"6275:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6274:6:12"},"scope":3801,"src":"6202:129:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3446,"nodeType":"Block","src":"6498:52:12","statements":[{"expression":{"arguments":[{"expression":{"id":3441,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"6525:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6529:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3392,"src":"6525:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"6537:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3440,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"6515:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3199_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6515:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3439,"id":3445,"nodeType":"Return","src":"6508:35:12"}]},"documentation":{"id":3430,"nodeType":"StructuredDocumentation","src":"6337:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":3447,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6421:8:12","nodeType":"FunctionDefinition","parameters":{"id":3436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"mutability":"mutable","name":"set","nameLocation":"6449:3:12","nodeType":"VariableDeclaration","scope":3447,"src":"6430:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3432,"nodeType":"UserDefinedTypeName","pathNode":{"id":3431,"name":"Bytes32Set","nameLocations":["6430:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3393,"src":"6430:10:12"},"referencedDeclaration":3393,"src":"6430:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3435,"mutability":"mutable","name":"value","nameLocation":"6462:5:12","nodeType":"VariableDeclaration","scope":3447,"src":"6454:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6454:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6429:39:12"},"returnParameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3447,"src":"6492:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3437,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6491:6:12"},"scope":3801,"src":"6412:138:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3461,"nodeType":"Block","src":"6703:43:12","statements":[{"expression":{"arguments":[{"expression":{"id":3457,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"6728:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6732:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3392,"src":"6728:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3456,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"6720:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3199_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6720:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3455,"id":3460,"nodeType":"Return","src":"6713:26:12"}]},"documentation":{"id":3448,"nodeType":"StructuredDocumentation","src":"6556:70:12","text":" @dev Returns the number of values in the set. O(1)."},"id":3462,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6640:6:12","nodeType":"FunctionDefinition","parameters":{"id":3452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3451,"mutability":"mutable","name":"set","nameLocation":"6666:3:12","nodeType":"VariableDeclaration","scope":3462,"src":"6647:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3450,"nodeType":"UserDefinedTypeName","pathNode":{"id":3449,"name":"Bytes32Set","nameLocations":["6647:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3393,"src":"6647:10:12"},"referencedDeclaration":3393,"src":"6647:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6646:24:12"},"returnParameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3462,"src":"6694:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3453,"name":"uint256","nodeType":"ElementaryTypeName","src":"6694:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6693:9:12"},"scope":3801,"src":"6631:115:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3479,"nodeType":"Block","src":"7171:46:12","statements":[{"expression":{"arguments":[{"expression":{"id":3474,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"7192:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7196:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3392,"src":"7192:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3476,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"7204:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3473,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"7188:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3199_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7188:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3472,"id":3478,"nodeType":"Return","src":"7181:29:12"}]},"documentation":{"id":3463,"nodeType":"StructuredDocumentation","src":"6752:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3480,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7097:2:12","nodeType":"FunctionDefinition","parameters":{"id":3469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3466,"mutability":"mutable","name":"set","nameLocation":"7119:3:12","nodeType":"VariableDeclaration","scope":3480,"src":"7100:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3465,"nodeType":"UserDefinedTypeName","pathNode":{"id":3464,"name":"Bytes32Set","nameLocations":["7100:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3393,"src":"7100:10:12"},"referencedDeclaration":3393,"src":"7100:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3468,"mutability":"mutable","name":"index","nameLocation":"7132:5:12","nodeType":"VariableDeclaration","scope":3480,"src":"7124:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"7124:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7099:39:12"},"returnParameters":{"id":3472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3480,"src":"7162:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3470,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7162:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7161:9:12"},"scope":3801,"src":"7088:129:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3509,"nodeType":"Block","src":"7838:219:12","statements":[{"assignments":[3494],"declarations":[{"constant":false,"id":3494,"mutability":"mutable","name":"store","nameLocation":"7865:5:12","nodeType":"VariableDeclaration","scope":3509,"src":"7848:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7848:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3493,"nodeType":"ArrayTypeName","src":"7848:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3499,"initialValue":{"arguments":[{"expression":{"id":3496,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"7881:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7885:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3392,"src":"7881:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3495,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"7873:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3199_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7873:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7848:44:12"},{"assignments":[3504],"declarations":[{"constant":false,"id":3504,"mutability":"mutable","name":"result","nameLocation":"7919:6:12","nodeType":"VariableDeclaration","scope":3509,"src":"7902:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7902:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3503,"nodeType":"ArrayTypeName","src":"7902:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3505,"nodeType":"VariableDeclarationStatement","src":"7902:23:12"},{"AST":{"nodeType":"YulBlock","src":"7988:39:12","statements":[{"nodeType":"YulAssignment","src":"8002:15:12","value":{"name":"store","nodeType":"YulIdentifier","src":"8012:5:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8002:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3504,"isOffset":false,"isSlot":false,"src":"8002:6:12","valueSize":1},{"declaration":3494,"isOffset":false,"isSlot":false,"src":"8012:5:12","valueSize":1}],"id":3506,"nodeType":"InlineAssembly","src":"7979:48:12"},{"expression":{"id":3507,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"8044:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3489,"id":3508,"nodeType":"Return","src":"8037:13:12"}]},"documentation":{"id":3481,"nodeType":"StructuredDocumentation","src":"7223:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3510,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7766:6:12","nodeType":"FunctionDefinition","parameters":{"id":3485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3484,"mutability":"mutable","name":"set","nameLocation":"7792:3:12","nodeType":"VariableDeclaration","scope":3510,"src":"7773:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3483,"nodeType":"UserDefinedTypeName","pathNode":{"id":3482,"name":"Bytes32Set","nameLocations":["7773:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3393,"src":"7773:10:12"},"referencedDeclaration":3393,"src":"7773:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3393_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7772:24:12"},"returnParameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3510,"src":"7820:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7820:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3487,"nodeType":"ArrayTypeName","src":"7820:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7819:18:12"},"scope":3801,"src":"7757:300:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":3514,"members":[{"constant":false,"id":3513,"mutability":"mutable","name":"_inner","nameLocation":"8114:6:12","nodeType":"VariableDeclaration","scope":3514,"src":"8110:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3512,"nodeType":"UserDefinedTypeName","pathNode":{"id":3511,"name":"Set","nameLocations":["8110:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":3199,"src":"8110:3:12"},"referencedDeclaration":3199,"src":"8110:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8089:10:12","nodeType":"StructDefinition","scope":3801,"src":"8082:45:12","visibility":"public"},{"body":{"id":3540,"nodeType":"Block","src":"8373:74:12","statements":[{"expression":{"arguments":[{"expression":{"id":3526,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"8395:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3514_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3527,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8399:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"8395:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"8431:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3532,"name":"uint160","nodeType":"ElementaryTypeName","src":"8423:7:12","typeDescriptions":{}}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8423:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3530,"name":"uint256","nodeType":"ElementaryTypeName","src":"8415:7:12","typeDescriptions":{}}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8415:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8407:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8407:7:12","typeDescriptions":{}}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8407:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3525,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"8390:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3199_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8390:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3524,"id":3539,"nodeType":"Return","src":"8383:57:12"}]},"documentation":{"id":3515,"nodeType":"StructuredDocumentation","src":"8133:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3541,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8306:3:12","nodeType":"FunctionDefinition","parameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3518,"mutability":"mutable","name":"set","nameLocation":"8329:3:12","nodeType":"VariableDeclaration","scope":3541,"src":"8310:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3514_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3517,"nodeType":"UserDefinedTypeName","pathNode":{"id":3516,"name":"AddressSet","nameLocations":["8310:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3514,"src":"8310:10:12"},"referencedDeclaration":3514,"src":"8310:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3514_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3520,"mutability":"mutable","name":"value","nameLocation":"8342:5:12","nodeType":"VariableDeclaration","scope":3541,"src":"8334:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3519,"name":"address","nodeType":"ElementaryTypeName","src":"8334:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8309:39:12"},"returnParameters":{"id":3524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3541,"src":"8367:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3522,"name":"bool","nodeType":"ElementaryTypeName","src":"8367:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8366:6:12"},"scope":3801,"src":"8297:150:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3567,"nodeType":"Block","src":"8694:77:12","statements":[{"expression":{"arguments":[{"expression":{"id":3553,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"8719:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3514_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3554,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8723:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"8719:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"8755:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3559,"name":"uint160","nodeType":"ElementaryTypeName","src":"8747:7:12","typeDescriptions":{}}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8747:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3557,"name":"uint256","nodeType":"ElementaryTypeName","src":"8739:7:12","typeDescriptions":{}}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8731:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8731:7:12","typeDescriptions":{}}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8731:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3552,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"8711:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3199_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8711:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3551,"id":3566,"nodeType":"Return","src":"8704:60:12"}]},"documentation":{"id":3542,"nodeType":"StructuredDocumentation","src":"8453:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3568,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8624:6:12","nodeType":"FunctionDefinition","parameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"set","nameLocation":"8650:3:12","nodeType":"VariableDeclaration","scope":3568,"src":"8631:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3514_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3544,"nodeType":"UserDefinedTypeName","pathNode":{"id":3543,"name":"AddressSet","nameLocations":["8631:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3514,"src":"8631:10:12"},"referencedDeclaration":3514,"src":"8631:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3514_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3547,"mutability":"mutable","name":"value","nameLocation":"8663:5:12","nodeType":"VariableDeclaration","scope":3568,"src":"8655:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3546,"name":"address","nodeType":"ElementaryTypeName","src":"8655:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8630:39:12"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3568,"src":"8688:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3549,"name":"bool","nodeType":"ElementaryTypeName","src":"8688:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8687:6:12"},"scope":3801,"src":"8615:156:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3594,"nodeType":"Block","src":"8938:79:12","statements":[{"expression":{"arguments":[{"expression":{"id":3580,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"8965:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3514_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8969:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"8965:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"9001:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3586,"name":"uint160","nodeType":"ElementaryTypeName","src":"8993:7:12","typeDescriptions":{}}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8993:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3584,"name":"uint256","nodeType":"ElementaryTypeName","src":"8985:7:12","typeDescriptions":{}}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8985:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8977:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8977:7:12","typeDescriptions":{}}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8977:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3579,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"8955:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3199_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3578,"id":3593,"nodeType":"Return","src":"8948:62:12"}]},"documentation":{"id":3569,"nodeType":"StructuredDocumentation","src":"8777:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":3595,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8861:8:12","nodeType":"FunctionDefinition","parameters":{"id":3575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3572,"mutability":"mutable","name":"set","nameLocation":"8889:3:12","nodeType":"VariableDeclaration","scope":3595,"src":"8870:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3514_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3571,"nodeType":"UserDefinedTypeName","pathNode":{"id":3570,"name":"AddressSet","nameLocations":["8870:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3514,"src":"8870:10:12"},"referencedDeclaration":3514,"src":"8870:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3514_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3574,"mutability":"mutable","name":"value","nameLocation":"8902:5:12","nodeType":"VariableDeclaration","scope":3595,"src":"8894:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3573,"name":"address","nodeType":"ElementaryTypeName","src":"8894:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8869:39:12"},"returnParameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3595,"src":"8932:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3576,"name":"bool","nodeType":"ElementaryTypeName","src":"8932:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8931:6:12"},"scope":3801,"src":"8852:165:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3609,"nodeType":"Block","src":"9170:43:12","statements":[{"expression":{"arguments":[{"expression":{"id":3605,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"9195:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3514_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3606,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9199:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"9195:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3604,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"9187:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3199_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9187:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3603,"id":3608,"nodeType":"Return","src":"9180:26:12"}]},"documentation":{"id":3596,"nodeType":"StructuredDocumentation","src":"9023:70:12","text":" @dev Returns the number of values in the set. O(1)."},"id":3610,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9107:6:12","nodeType":"FunctionDefinition","parameters":{"id":3600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3599,"mutability":"mutable","name":"set","nameLocation":"9133:3:12","nodeType":"VariableDeclaration","scope":3610,"src":"9114:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3514_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3598,"nodeType":"UserDefinedTypeName","pathNode":{"id":3597,"name":"AddressSet","nameLocations":["9114:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3514,"src":"9114:10:12"},"referencedDeclaration":3514,"src":"9114:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3514_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9113:24:12"},"returnParameters":{"id":3603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3610,"src":"9161:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3601,"name":"uint256","nodeType":"ElementaryTypeName","src":"9161:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9160:9:12"},"scope":3801,"src":"9098:115:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3636,"nodeType":"Block","src":"9638:73:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":3628,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"9683:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3514_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9687:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"9683:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3630,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"9695:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3627,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"9679:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3199_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9679:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3625,"name":"uint256","nodeType":"ElementaryTypeName","src":"9671:7:12","typeDescriptions":{}}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9671:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3623,"name":"uint160","nodeType":"ElementaryTypeName","src":"9663:7:12","typeDescriptions":{}}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9663:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9655:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3621,"name":"address","nodeType":"ElementaryTypeName","src":"9655:7:12","typeDescriptions":{}}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9655:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3620,"id":3635,"nodeType":"Return","src":"9648:56:12"}]},"documentation":{"id":3611,"nodeType":"StructuredDocumentation","src":"9219:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3637,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9564:2:12","nodeType":"FunctionDefinition","parameters":{"id":3617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3614,"mutability":"mutable","name":"set","nameLocation":"9586:3:12","nodeType":"VariableDeclaration","scope":3637,"src":"9567:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3514_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3613,"nodeType":"UserDefinedTypeName","pathNode":{"id":3612,"name":"AddressSet","nameLocations":["9567:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3514,"src":"9567:10:12"},"referencedDeclaration":3514,"src":"9567:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3514_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3616,"mutability":"mutable","name":"index","nameLocation":"9599:5:12","nodeType":"VariableDeclaration","scope":3637,"src":"9591:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"9591:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9566:39:12"},"returnParameters":{"id":3620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3637,"src":"9629:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3618,"name":"address","nodeType":"ElementaryTypeName","src":"9629:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9628:9:12"},"scope":3801,"src":"9555:156:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3666,"nodeType":"Block","src":"10332:219:12","statements":[{"assignments":[3651],"declarations":[{"constant":false,"id":3651,"mutability":"mutable","name":"store","nameLocation":"10359:5:12","nodeType":"VariableDeclaration","scope":3666,"src":"10342:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10342:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3650,"nodeType":"ArrayTypeName","src":"10342:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3656,"initialValue":{"arguments":[{"expression":{"id":3653,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"10375:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3514_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3654,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10379:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"10375:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3652,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"10367:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3199_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10367:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10342:44:12"},{"assignments":[3661],"declarations":[{"constant":false,"id":3661,"mutability":"mutable","name":"result","nameLocation":"10413:6:12","nodeType":"VariableDeclaration","scope":3666,"src":"10396:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3659,"name":"address","nodeType":"ElementaryTypeName","src":"10396:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3660,"nodeType":"ArrayTypeName","src":"10396:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3662,"nodeType":"VariableDeclarationStatement","src":"10396:23:12"},{"AST":{"nodeType":"YulBlock","src":"10482:39:12","statements":[{"nodeType":"YulAssignment","src":"10496:15:12","value":{"name":"store","nodeType":"YulIdentifier","src":"10506:5:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10496:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3661,"isOffset":false,"isSlot":false,"src":"10496:6:12","valueSize":1},{"declaration":3651,"isOffset":false,"isSlot":false,"src":"10506:5:12","valueSize":1}],"id":3663,"nodeType":"InlineAssembly","src":"10473:48:12"},{"expression":{"id":3664,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"10538:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3646,"id":3665,"nodeType":"Return","src":"10531:13:12"}]},"documentation":{"id":3638,"nodeType":"StructuredDocumentation","src":"9717:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3667,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10260:6:12","nodeType":"FunctionDefinition","parameters":{"id":3642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3641,"mutability":"mutable","name":"set","nameLocation":"10286:3:12","nodeType":"VariableDeclaration","scope":3667,"src":"10267:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3514_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3640,"nodeType":"UserDefinedTypeName","pathNode":{"id":3639,"name":"AddressSet","nameLocations":["10267:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3514,"src":"10267:10:12"},"referencedDeclaration":3514,"src":"10267:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3514_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10266:24:12"},"returnParameters":{"id":3646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3667,"src":"10314:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3643,"name":"address","nodeType":"ElementaryTypeName","src":"10314:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3644,"nodeType":"ArrayTypeName","src":"10314:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10313:18:12"},"scope":3801,"src":"10251:300:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":3671,"members":[{"constant":false,"id":3670,"mutability":"mutable","name":"_inner","nameLocation":"10602:6:12","nodeType":"VariableDeclaration","scope":3671,"src":"10598:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3669,"nodeType":"UserDefinedTypeName","pathNode":{"id":3668,"name":"Set","nameLocations":["10598:3:12"],"nodeType":"IdentifierPath","referencedDeclaration":3199,"src":"10598:3:12"},"referencedDeclaration":3199,"src":"10598:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10580:7:12","nodeType":"StructDefinition","scope":3801,"src":"10573:42:12","visibility":"public"},{"body":{"id":3691,"nodeType":"Block","src":"10858:56:12","statements":[{"expression":{"arguments":[{"expression":{"id":3683,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"10880:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3671_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10884:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3670,"src":"10880:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":3687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"10900:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10892:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10892:7:12","typeDescriptions":{}}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10892:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3682,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"10875:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3199_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10875:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3681,"id":3690,"nodeType":"Return","src":"10868:39:12"}]},"documentation":{"id":3672,"nodeType":"StructuredDocumentation","src":"10621:159:12","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3692,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10794:3:12","nodeType":"FunctionDefinition","parameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3675,"mutability":"mutable","name":"set","nameLocation":"10814:3:12","nodeType":"VariableDeclaration","scope":3692,"src":"10798:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3671_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3674,"nodeType":"UserDefinedTypeName","pathNode":{"id":3673,"name":"UintSet","nameLocations":["10798:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":3671,"src":"10798:7:12"},"referencedDeclaration":3671,"src":"10798:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3671_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3677,"mutability":"mutable","name":"value","nameLocation":"10827:5:12","nodeType":"VariableDeclaration","scope":3692,"src":"10819:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3676,"name":"uint256","nodeType":"ElementaryTypeName","src":"10819:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10797:36:12"},"returnParameters":{"id":3681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3692,"src":"10852:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3679,"name":"bool","nodeType":"ElementaryTypeName","src":"10852:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10851:6:12"},"scope":3801,"src":"10785:129:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3712,"nodeType":"Block","src":"11158:59:12","statements":[{"expression":{"arguments":[{"expression":{"id":3704,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"11183:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3671_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11187:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3670,"src":"11183:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":3708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"11203:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11195:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11195:7:12","typeDescriptions":{}}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11195:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3703,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"11175:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3199_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11175:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3702,"id":3711,"nodeType":"Return","src":"11168:42:12"}]},"documentation":{"id":3693,"nodeType":"StructuredDocumentation","src":"10920:157:12","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3713,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11091:6:12","nodeType":"FunctionDefinition","parameters":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3696,"mutability":"mutable","name":"set","nameLocation":"11114:3:12","nodeType":"VariableDeclaration","scope":3713,"src":"11098:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3671_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3695,"nodeType":"UserDefinedTypeName","pathNode":{"id":3694,"name":"UintSet","nameLocations":["11098:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":3671,"src":"11098:7:12"},"referencedDeclaration":3671,"src":"11098:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3671_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3698,"mutability":"mutable","name":"value","nameLocation":"11127:5:12","nodeType":"VariableDeclaration","scope":3713,"src":"11119:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"11119:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11097:36:12"},"returnParameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3713,"src":"11152:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3700,"name":"bool","nodeType":"ElementaryTypeName","src":"11152:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11151:6:12"},"scope":3801,"src":"11082:135:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3733,"nodeType":"Block","src":"11381:61:12","statements":[{"expression":{"arguments":[{"expression":{"id":3725,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"11408:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3671_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11412:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3670,"src":"11408:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":3729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"11428:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11420:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11420:7:12","typeDescriptions":{}}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11420:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3724,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"11398:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3199_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11398:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3723,"id":3732,"nodeType":"Return","src":"11391:44:12"}]},"documentation":{"id":3714,"nodeType":"StructuredDocumentation","src":"11223:70:12","text":" @dev Returns true if the value is in the set. O(1)."},"id":3734,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11307:8:12","nodeType":"FunctionDefinition","parameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3717,"mutability":"mutable","name":"set","nameLocation":"11332:3:12","nodeType":"VariableDeclaration","scope":3734,"src":"11316:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3671_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3716,"nodeType":"UserDefinedTypeName","pathNode":{"id":3715,"name":"UintSet","nameLocations":["11316:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":3671,"src":"11316:7:12"},"referencedDeclaration":3671,"src":"11316:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3671_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3719,"mutability":"mutable","name":"value","nameLocation":"11345:5:12","nodeType":"VariableDeclaration","scope":3734,"src":"11337:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3718,"name":"uint256","nodeType":"ElementaryTypeName","src":"11337:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11315:36:12"},"returnParameters":{"id":3723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3734,"src":"11375:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3721,"name":"bool","nodeType":"ElementaryTypeName","src":"11375:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11374:6:12"},"scope":3801,"src":"11298:144:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3748,"nodeType":"Block","src":"11592:43:12","statements":[{"expression":{"arguments":[{"expression":{"id":3744,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"11617:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3671_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11621:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3670,"src":"11617:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3743,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"11609:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3199_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11609:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3742,"id":3747,"nodeType":"Return","src":"11602:26:12"}]},"documentation":{"id":3735,"nodeType":"StructuredDocumentation","src":"11448:70:12","text":" @dev Returns the number of values in the set. O(1)."},"id":3749,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11532:6:12","nodeType":"FunctionDefinition","parameters":{"id":3739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3738,"mutability":"mutable","name":"set","nameLocation":"11555:3:12","nodeType":"VariableDeclaration","scope":3749,"src":"11539:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3671_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3737,"nodeType":"UserDefinedTypeName","pathNode":{"id":3736,"name":"UintSet","nameLocations":["11539:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":3671,"src":"11539:7:12"},"referencedDeclaration":3671,"src":"11539:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3671_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11538:21:12"},"returnParameters":{"id":3742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3749,"src":"11583:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3740,"name":"uint256","nodeType":"ElementaryTypeName","src":"11583:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11582:9:12"},"scope":3801,"src":"11523:112:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3769,"nodeType":"Block","src":"12057:55:12","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3763,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"12086:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3671_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12090:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3670,"src":"12086:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3765,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"12098:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3762,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"12082:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3199_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12082:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12074:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3760,"name":"uint256","nodeType":"ElementaryTypeName","src":"12074:7:12","typeDescriptions":{}}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12074:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3759,"id":3768,"nodeType":"Return","src":"12067:38:12"}]},"documentation":{"id":3750,"nodeType":"StructuredDocumentation","src":"11641:331:12","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3770,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11986:2:12","nodeType":"FunctionDefinition","parameters":{"id":3756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3753,"mutability":"mutable","name":"set","nameLocation":"12005:3:12","nodeType":"VariableDeclaration","scope":3770,"src":"11989:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3671_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3752,"nodeType":"UserDefinedTypeName","pathNode":{"id":3751,"name":"UintSet","nameLocations":["11989:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":3671,"src":"11989:7:12"},"referencedDeclaration":3671,"src":"11989:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3671_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":3755,"mutability":"mutable","name":"index","nameLocation":"12018:5:12","nodeType":"VariableDeclaration","scope":3770,"src":"12010:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"12010:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11988:36:12"},"returnParameters":{"id":3759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3770,"src":"12048:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3757,"name":"uint256","nodeType":"ElementaryTypeName","src":"12048:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12047:9:12"},"scope":3801,"src":"11977:135:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3799,"nodeType":"Block","src":"12730:219:12","statements":[{"assignments":[3784],"declarations":[{"constant":false,"id":3784,"mutability":"mutable","name":"store","nameLocation":"12757:5:12","nodeType":"VariableDeclaration","scope":3799,"src":"12740:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12740:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3783,"nodeType":"ArrayTypeName","src":"12740:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3789,"initialValue":{"arguments":[{"expression":{"id":3786,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"12773:3:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3671_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":3787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12777:6:12","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3670,"src":"12773:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3199_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3785,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"12765:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3199_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12765:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12740:44:12"},{"assignments":[3794],"declarations":[{"constant":false,"id":3794,"mutability":"mutable","name":"result","nameLocation":"12811:6:12","nodeType":"VariableDeclaration","scope":3799,"src":"12794:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3792,"name":"uint256","nodeType":"ElementaryTypeName","src":"12794:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3793,"nodeType":"ArrayTypeName","src":"12794:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3795,"nodeType":"VariableDeclarationStatement","src":"12794:23:12"},{"AST":{"nodeType":"YulBlock","src":"12880:39:12","statements":[{"nodeType":"YulAssignment","src":"12894:15:12","value":{"name":"store","nodeType":"YulIdentifier","src":"12904:5:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12894:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3794,"isOffset":false,"isSlot":false,"src":"12894:6:12","valueSize":1},{"declaration":3784,"isOffset":false,"isSlot":false,"src":"12904:5:12","valueSize":1}],"id":3796,"nodeType":"InlineAssembly","src":"12871:48:12"},{"expression":{"id":3797,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"12936:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3779,"id":3798,"nodeType":"Return","src":"12929:13:12"}]},"documentation":{"id":3771,"nodeType":"StructuredDocumentation","src":"12118:529:12","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3800,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12661:6:12","nodeType":"FunctionDefinition","parameters":{"id":3775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3774,"mutability":"mutable","name":"set","nameLocation":"12684:3:12","nodeType":"VariableDeclaration","scope":3800,"src":"12668:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3671_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3773,"nodeType":"UserDefinedTypeName","pathNode":{"id":3772,"name":"UintSet","nameLocations":["12668:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":3671,"src":"12668:7:12"},"referencedDeclaration":3671,"src":"12668:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3671_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12667:21:12"},"returnParameters":{"id":3779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3800,"src":"12712:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"12712:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3777,"nodeType":"ArrayTypeName","src":"12712:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12711:18:12"},"scope":3801,"src":"12652:297:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3802,"src":"1321:11630:12","usedErrors":[],"usedEvents":[]}],"src":"205:12747:12"},"id":12},"contracts/HypERC20TransferCengli.sol":{"ast":{"absolutePath":"contracts/HypERC20TransferCengli.sol","exportedSymbols":{"Address":[2066],"AddressUpgradeable":[1299],"ContextUpgradeable":[1341],"ERC20Upgradeable":[912],"EnumerableMap":[3188],"EnumerableSet":[3801],"GasRouter":[3817],"HypERC20TransferCengli":[4071],"IERC20":[1419],"IERC20MetadataUpgradeable":[1015],"IERC20Permit":[1455],"IERC20Upgradeable":[990],"IHypERC20":[3850],"Initializable":[300],"OwnableUpgradeable":[131],"ReentrancyGuard":[4140],"SafeERC20":[1736],"TokenRouter":[3831]},"id":4072,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":3803,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"40:23:13"},{"absolutePath":"library/ReentrancyGuard.sol","file":"library/ReentrancyGuard.sol","id":3804,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4072,"sourceUnit":4141,"src":"67:37:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":3805,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4072,"sourceUnit":913,"src":"106:78:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":3806,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4072,"sourceUnit":2067,"src":"186:51:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":3807,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4072,"sourceUnit":132,"src":"239:75:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableMap.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableMap.sol","id":3808,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4072,"sourceUnit":3189,"src":"316:65:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":3809,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4072,"sourceUnit":1737,"src":"383:65:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"GasRouter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3817,"linearizedBaseContracts":[3817],"name":"GasRouter","nameLocation":"462:9:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"f2ed8c53","id":3816,"implemented":false,"kind":"function","modifiers":[],"name":"quoteGasPayment","nameLocation":"487:15:13","nodeType":"FunctionDefinition","parameters":{"id":3812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3811,"mutability":"mutable","name":"_destinationDomain","nameLocation":"510:18:13","nodeType":"VariableDeclaration","scope":3816,"src":"503:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3810,"name":"uint32","nodeType":"ElementaryTypeName","src":"503:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"502:27:13"},"returnParameters":{"id":3815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"mutability":"mutable","name":"_gasPayment","nameLocation":"588:11:13","nodeType":"VariableDeclaration","scope":3816,"src":"580:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3813,"name":"uint256","nodeType":"ElementaryTypeName","src":"580:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:21:13"},"scope":3817,"src":"478:123:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4072,"src":"452:152:13","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":3818,"name":"GasRouter","nameLocations":["633:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":3817,"src":"633:9:13"},"id":3819,"nodeType":"InheritanceSpecifier","src":"633:9:13"}],"canonicalName":"TokenRouter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3831,"linearizedBaseContracts":[3831,3817],"name":"TokenRouter","nameLocation":"618:11:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"81b4e8b4","id":3830,"implemented":false,"kind":"function","modifiers":[],"name":"transferRemote","nameLocation":"657:14:13","nodeType":"FunctionDefinition","parameters":{"id":3826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"_destinationDomain","nameLocation":"689:18:13","nodeType":"VariableDeclaration","scope":3830,"src":"682:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3820,"name":"uint32","nodeType":"ElementaryTypeName","src":"682:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3823,"mutability":"mutable","name":"_recipientAddress","nameLocation":"726:17:13","nodeType":"VariableDeclaration","scope":3830,"src":"718:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3822,"name":"bytes32","nodeType":"ElementaryTypeName","src":"718:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3825,"mutability":"mutable","name":"_amountOrId","nameLocation":"762:11:13","nodeType":"VariableDeclaration","scope":3830,"src":"754:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3824,"name":"uint256","nodeType":"ElementaryTypeName","src":"754:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"671:126:13"},"returnParameters":{"id":3829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3828,"mutability":"mutable","name":"messageId","nameLocation":"832:9:13","nodeType":"VariableDeclaration","scope":3830,"src":"824:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3827,"name":"bytes32","nodeType":"ElementaryTypeName","src":"824:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"823:19:13"},"scope":3831,"src":"648:195:13","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":4072,"src":"608:238:13","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":3832,"name":"TokenRouter","nameLocations":["873:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":3831,"src":"873:11:13"},"id":3833,"nodeType":"InheritanceSpecifier","src":"873:11:13"}],"canonicalName":"IHypERC20","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3850,"linearizedBaseContracts":[3850,3831,3817],"name":"IHypERC20","nameLocation":"860:9:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d215e1cd","id":3840,"implemented":false,"kind":"function","modifiers":[],"name":"_transferFromSender","nameLocation":"978:19:13","nodeType":"FunctionDefinition","parameters":{"id":3836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3835,"mutability":"mutable","name":"_amount","nameLocation":"1006:7:13","nodeType":"VariableDeclaration","scope":3840,"src":"998:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:17:13"},"returnParameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3840,"src":"1079:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3837,"name":"bytes","nodeType":"ElementaryTypeName","src":"1079:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1078:14:13"},"scope":3850,"src":"969:124:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6ba0cc29","id":3849,"implemented":false,"kind":"function","modifiers":[],"name":"_transferTo","nameLocation":"1110:11:13","nodeType":"FunctionDefinition","parameters":{"id":3847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"_recipient","nameLocation":"1140:10:13","nodeType":"VariableDeclaration","scope":3849,"src":"1132:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3841,"name":"address","nodeType":"ElementaryTypeName","src":"1132:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3844,"mutability":"mutable","name":"_amount","nameLocation":"1169:7:13","nodeType":"VariableDeclaration","scope":3849,"src":"1161:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3843,"name":"uint256","nodeType":"ElementaryTypeName","src":"1161:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3849,"src":"1187:14:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3845,"name":"bytes","nodeType":"ElementaryTypeName","src":"1187:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1121:102:13"},"returnParameters":{"id":3848,"nodeType":"ParameterList","parameters":[],"src":"1232:0:13"},"scope":3850,"src":"1101:132:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4072,"src":"850:392:13","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":3851,"name":"ReentrancyGuard","nameLocations":["1281:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":4140,"src":"1281:15:13"},"id":3852,"nodeType":"InheritanceSpecifier","src":"1281:15:13"}],"canonicalName":"HypERC20TransferCengli","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4071,"linearizedBaseContracts":[4071,4140],"name":"HypERC20TransferCengli","nameLocation":"1255:22:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"e9303209","id":3854,"mutability":"mutable","name":"USDCAddress","nameLocation":"1318:11:13","nodeType":"VariableDeclaration","scope":4071,"src":"1303:26:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3853,"name":"address","nodeType":"ElementaryTypeName","src":"1303:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"2367117c","id":3856,"mutability":"mutable","name":"HypERC20Address","nameLocation":"1351:15:13","nodeType":"VariableDeclaration","scope":4071,"src":"1336:30:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3855,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":3858,"mutability":"mutable","name":"owner","nameLocation":"1388:5:13","nodeType":"VariableDeclaration","scope":4071,"src":"1373:20:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3857,"name":"address","nodeType":"ElementaryTypeName","src":"1373:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"3406065a52b000854dbbeef7657250820ef51eff5126a10b91ed56430362699f","id":3868,"name":"SentTransferRemote","nameLocation":"1428:18:13","nodeType":"EventDefinition","parameters":{"id":3867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3860,"indexed":false,"mutability":"mutable","name":"messageId","nameLocation":"1465:9:13","nodeType":"VariableDeclaration","scope":3868,"src":"1457:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1457:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3862,"indexed":true,"mutability":"mutable","name":"destination","nameLocation":"1500:11:13","nodeType":"VariableDeclaration","scope":3868,"src":"1485:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3861,"name":"uint32","nodeType":"ElementaryTypeName","src":"1485:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3864,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"1538:9:13","nodeType":"VariableDeclaration","scope":3868,"src":"1522:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1522:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3866,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1566:6:13","nodeType":"VariableDeclaration","scope":3868,"src":"1558:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"1558:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1446:133:13"},"src":"1422:158:13"},{"body":{"id":3904,"nodeType":"Block","src":"1647:395:13","statements":[{"expression":{"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3875,"name":"USDCAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"1658:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3876,"name":"_USDCAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"1672:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1658:26:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3878,"nodeType":"ExpressionStatement","src":"1658:26:13"},{"expression":{"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3879,"name":"HypERC20Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"1695:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3880,"name":"_HypERC20Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"1713:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1695:34:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3882,"nodeType":"ExpressionStatement","src":"1695:34:13"},{"expression":{"arguments":[{"id":3887,"name":"HypERC20Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"1768:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"3130303030303030306536","id":3888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1785:11:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000_by_1","typeString":"int_const 100000000000000"},"value":"100000000e6"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_100000000000000_by_1","typeString":"int_const 100000000000000"}],"expression":{"arguments":[{"id":3884,"name":"USDCAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"1747:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3883,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"1740:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1419_$","typeString":"type(contract IERC20)"}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1740:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:7:13","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1406,"src":"1740:27:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1740:57:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3890,"nodeType":"ExpressionStatement","src":"1740:57:13"},{"expression":{"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3891,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"1868:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3892,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1876:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1880:6:13","memberName":"sender","nodeType":"MemberAccess","src":"1876:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1868:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3895,"nodeType":"ExpressionStatement","src":"1868:18:13"},{"expression":{"arguments":[{"id":3900,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"1925:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"3130303030303030306536","id":3901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1932:11:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000_by_1","typeString":"int_const 100000000000000"},"value":"100000000e6"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_100000000000000_by_1","typeString":"int_const 100000000000000"}],"expression":{"arguments":[{"id":3897,"name":"USDCAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"1904:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3896,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"1897:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1419_$","typeString":"type(contract IERC20)"}},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1897:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1917:7:13","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1406,"src":"1897:27:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1897:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3903,"nodeType":"ExpressionStatement","src":"1897:47:13"}]},"id":3905,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3870,"mutability":"mutable","name":"_USDCAddress","nameLocation":"1608:12:13","nodeType":"VariableDeclaration","scope":3905,"src":"1600:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3869,"name":"address","nodeType":"ElementaryTypeName","src":"1600:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3872,"mutability":"mutable","name":"_HypERC20Address","nameLocation":"1630:16:13","nodeType":"VariableDeclaration","scope":3905,"src":"1622:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3871,"name":"address","nodeType":"ElementaryTypeName","src":"1622:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1599:48:13"},"returnParameters":{"id":3874,"nodeType":"ParameterList","parameters":[],"src":"1647:0:13"},"scope":4071,"src":"1588:454:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3908,"nodeType":"Block","src":"2077:2:13","statements":[]},"id":3909,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3906,"nodeType":"ParameterList","parameters":[],"src":"2057:2:13"},"returnParameters":{"id":3907,"nodeType":"ParameterList","parameters":[],"src":"2077:0:13"},"scope":4071,"src":"2050:29:13","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3990,"nodeType":"Block","src":"2350:748:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3927,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2399:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2403:6:13","memberName":"sender","nodeType":"MemberAccess","src":"2399:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3924,"name":"USDCAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"2376:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3923,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"2369:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1419_$","typeString":"type(contract IERC20)"}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2369:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2389:9:13","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"2369:29:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2369:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3930,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"2414:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2369:52:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420555344432062616c616e6365206f662073656e6465722e","id":3932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2423:38:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6156b7478067a806b822f2dac38b378fc08dd0988eb91af8714c555c87825340","typeString":"literal_string \"Insufficient USDC balance of sender.\""},"value":"Insufficient USDC balance of sender."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6156b7478067a806b822f2dac38b378fc08dd0988eb91af8714c555c87825340","typeString":"literal_string \"Insufficient USDC balance of sender.\""}],"id":3922,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2361:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2361:101:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3934,"nodeType":"ExpressionStatement","src":"2361:101:13"},{"expression":{"arguments":[{"expression":{"id":3939,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2506:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2510:6:13","memberName":"sender","nodeType":"MemberAccess","src":"2506:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3943,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2526:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_HypERC20TransferCengli_$4071","typeString":"contract HypERC20TransferCengli"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HypERC20TransferCengli_$4071","typeString":"contract HypERC20TransferCengli"}],"id":3942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2518:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3941,"name":"address","nodeType":"ElementaryTypeName","src":"2518:7:13","typeDescriptions":{}}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2518:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3945,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"2533:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3936,"name":"USDCAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"2480:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3935,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"2473:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1419_$","typeString":"type(contract IERC20)"}},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2493:12:13","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1418,"src":"2473:32:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3947,"nodeType":"ExpressionStatement","src":"2473:68:13"},{"assignments":[3949],"declarations":[{"constant":false,"id":3949,"mutability":"mutable","name":"quote","nameLocation":"2627:5:13","nodeType":"VariableDeclaration","scope":3990,"src":"2619:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3948,"name":"uint256","nodeType":"ElementaryTypeName","src":"2619:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3956,"initialValue":{"arguments":[{"id":3954,"name":"_destinationDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"2692:18:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"arguments":[{"id":3951,"name":"HypERC20Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"2645:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3950,"name":"IHypERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"2635:9:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHypERC20_$3850_$","typeString":"type(contract IHypERC20)"}},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2635:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IHypERC20_$3850","typeString":"contract IHypERC20"}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2662:15:13","memberName":"quoteGasPayment","nodeType":"MemberAccess","referencedDeclaration":3816,"src":"2635:42:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint32_$returns$_t_uint256_$","typeString":"function (uint32) view external returns (uint256)"}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2635:86:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2619:102:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3960,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2748:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_HypERC20TransferCengli_$4071","typeString":"contract HypERC20TransferCengli"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HypERC20TransferCengli_$4071","typeString":"contract HypERC20TransferCengli"}],"id":3959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3958,"name":"address","nodeType":"ElementaryTypeName","src":"2740:7:13","typeDescriptions":{}}},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2754:7:13","memberName":"balance","nodeType":"MemberAccess","src":"2740:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3963,"name":"quote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"2765:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2740:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206e617469766520746f6b656e20666f722067617320696e7369646520636f6e74726163742e","id":3965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2772:52:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5bee079997ec03d02c333bc7aa74a2c8aad9f558acd5ab4f032e924bd7641300","typeString":"literal_string \"Insufficient native token for gas inside contract.\""},"value":"Insufficient native token for gas inside contract."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5bee079997ec03d02c333bc7aa74a2c8aad9f558acd5ab4f032e924bd7641300","typeString":"literal_string \"Insufficient native token for gas inside contract.\""}],"id":3957,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2732:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2732:93:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3967,"nodeType":"ExpressionStatement","src":"2732:93:13"},{"assignments":[3969],"declarations":[{"constant":false,"id":3969,"mutability":"mutable","name":"messageId","nameLocation":"2854:9:13","nodeType":"VariableDeclaration","scope":3990,"src":"2846:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2846:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3980,"initialValue":{"arguments":[{"id":3976,"name":"_destinationDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"2921:18:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3977,"name":"_recipientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"2941:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3978,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"2960:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3971,"name":"HypERC20Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"2876:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3970,"name":"IHypERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"2866:9:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHypERC20_$3850_$","typeString":"type(contract IHypERC20)"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2866:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IHypERC20_$3850","typeString":"contract IHypERC20"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2893:14:13","memberName":"transferRemote","nodeType":"MemberAccess","referencedDeclaration":3830,"src":"2866:41:13","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint32,bytes32,uint256) payable external returns (bytes32)"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3974,"name":"quote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"2914:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2866:54:13","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$value","typeString":"function (uint32,bytes32,uint256) payable external returns (bytes32)"}},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2866:102:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2846:122:13"},{"eventCall":{"arguments":[{"id":3982,"name":"messageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"3003:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3983,"name":"_destinationDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"3014:18:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3984,"name":"_recipientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"3034:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3985,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"3053:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3981,"name":"SentTransferRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"2984:18:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint32_$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint32,bytes32,uint256)"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2984:77:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3987,"nodeType":"EmitStatement","src":"2979:82:13"},{"expression":{"id":3988,"name":"messageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"3081:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3921,"id":3989,"nodeType":"Return","src":"3074:16:13"}]},"functionSelector":"017e46da","id":3991,"implemented":true,"kind":"function","modifiers":[{"id":3918,"kind":"modifierInvocation","modifierName":{"id":3917,"name":"nonReentrant","nameLocations":["2310:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":4104,"src":"2310:12:13"},"nodeType":"ModifierInvocation","src":"2310:12:13"}],"name":"transferXchainHypERC20","nameLocation":"2216:22:13","nodeType":"FunctionDefinition","parameters":{"id":3916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"_destinationDomain","nameLocation":"2246:18:13","nodeType":"VariableDeclaration","scope":3991,"src":"2239:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3910,"name":"uint32","nodeType":"ElementaryTypeName","src":"2239:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3913,"mutability":"mutable","name":"_recipientAddress","nameLocation":"2274:17:13","nodeType":"VariableDeclaration","scope":3991,"src":"2266:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2266:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3915,"mutability":"mutable","name":"_amount","nameLocation":"2301:7:13","nodeType":"VariableDeclaration","scope":3991,"src":"2293:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3914,"name":"uint256","nodeType":"ElementaryTypeName","src":"2293:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2238:71:13"},"returnParameters":{"id":3921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3991,"src":"2341:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3919,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2341:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2340:9:13"},"scope":4071,"src":"2207:891:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4027,"nodeType":"Block","src":"3173:193:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4003,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3230:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_HypERC20TransferCengli_$4071","typeString":"contract HypERC20TransferCengli"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HypERC20TransferCengli_$4071","typeString":"contract HypERC20TransferCengli"}],"id":4002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3222:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4001,"name":"address","nodeType":"ElementaryTypeName","src":"3222:7:13","typeDescriptions":{}}},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3222:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3998,"name":"USDCAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"3199:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3997,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"3192:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1419_$","typeString":"type(contract IERC20)"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3192:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3212:9:13","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"3192:29:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3192:44:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3240:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3192:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e747261637420686173203020555344432e","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3243:22:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9492a9f385a959155fd9b4423d2438daa6931aa4114947339a758d0e394aa707","typeString":"literal_string \"Contract has 0 USDC.\""},"value":"Contract has 0 USDC."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9492a9f385a959155fd9b4423d2438daa6931aa4114947339a758d0e394aa707","typeString":"literal_string \"Contract has 0 USDC.\""}],"id":3996,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3184:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3184:82:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4010,"nodeType":"ExpressionStatement","src":"3184:82:13"},{"expression":{"arguments":[{"id":4015,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"3306:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":4022,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3351:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_HypERC20TransferCengli_$4071","typeString":"contract HypERC20TransferCengli"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HypERC20TransferCengli_$4071","typeString":"contract HypERC20TransferCengli"}],"id":4021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3343:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4020,"name":"address","nodeType":"ElementaryTypeName","src":"3343:7:13","typeDescriptions":{}}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3343:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4017,"name":"USDCAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"3320:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4016,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"3313:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1419_$","typeString":"type(contract IERC20)"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3313:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3333:9:13","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"3313:29:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3313:44:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4012,"name":"USDCAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"3284:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4011,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"3277:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1419_$","typeString":"type(contract IERC20)"}},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3277:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1419","typeString":"contract IERC20"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3297:8:13","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1386,"src":"3277:28:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3277:81:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4026,"nodeType":"ExpressionStatement","src":"3277:81:13"}]},"functionSelector":"d8fc063d","id":4028,"implemented":true,"kind":"function","modifiers":[{"id":3994,"kind":"modifierInvocation","modifierName":{"id":3993,"name":"onlyOwner","nameLocations":["3163:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":4070,"src":"3163:9:13"},"nodeType":"ModifierInvocation","src":"3163:9:13"}],"name":"withdrawUSDC","nameLocation":"3139:12:13","nodeType":"FunctionDefinition","parameters":{"id":3992,"nodeType":"ParameterList","parameters":[],"src":"3151:2:13"},"returnParameters":{"id":3995,"nodeType":"ParameterList","parameters":[],"src":"3173:0:13"},"scope":4071,"src":"3130:236:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4057,"nodeType":"Block","src":"3419:142:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4036,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3446:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_HypERC20TransferCengli_$4071","typeString":"contract HypERC20TransferCengli"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HypERC20TransferCengli_$4071","typeString":"contract HypERC20TransferCengli"}],"id":4035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3438:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4034,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:13","typeDescriptions":{}}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3452:7:13","memberName":"balance","nodeType":"MemberAccess","src":"3438:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3463:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3438:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e7472616374206861732030204e61746976652e","id":4041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3466:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8351050d490c2f964a5c9b846a717b6fb712e0fef8f883329c0d18f6cb70985f","typeString":"literal_string \"Contract has 0 Native.\""},"value":"Contract has 0 Native."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8351050d490c2f964a5c9b846a717b6fb712e0fef8f883329c0d18f6cb70985f","typeString":"literal_string \"Contract has 0 Native.\""}],"id":4033,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3430:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3430:61:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4043,"nodeType":"ExpressionStatement","src":"3430:61:13"},{"expression":{"arguments":[{"expression":{"arguments":[{"id":4052,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3539:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_HypERC20TransferCengli_$4071","typeString":"contract HypERC20TransferCengli"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HypERC20TransferCengli_$4071","typeString":"contract HypERC20TransferCengli"}],"id":4051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3531:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4050,"name":"address","nodeType":"ElementaryTypeName","src":"3531:7:13","typeDescriptions":{}}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3531:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3545:7:13","memberName":"balance","nodeType":"MemberAccess","src":"3531:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":4046,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3510:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3514:6:13","memberName":"sender","nodeType":"MemberAccess","src":"3510:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3502:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4044,"name":"address","nodeType":"ElementaryTypeName","src":"3502:8:13","stateMutability":"payable","typeDescriptions":{}}},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3502:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3522:8:13","memberName":"transfer","nodeType":"MemberAccess","src":"3502:28:13","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3502:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4056,"nodeType":"ExpressionStatement","src":"3502:51:13"}]},"functionSelector":"50431ce4","id":4058,"implemented":true,"kind":"function","modifiers":[{"id":4031,"kind":"modifierInvocation","modifierName":{"id":4030,"name":"onlyOwner","nameLocations":["3409:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":4070,"src":"3409:9:13"},"nodeType":"ModifierInvocation","src":"3409:9:13"}],"name":"withdrawNative","nameLocation":"3383:14:13","nodeType":"FunctionDefinition","parameters":{"id":4029,"nodeType":"ParameterList","parameters":[],"src":"3397:2:13"},"returnParameters":{"id":4032,"nodeType":"ParameterList","parameters":[],"src":"3419:0:13"},"scope":4071,"src":"3374:187:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4069,"nodeType":"Block","src":"3588:100:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4061,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3607:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3611:6:13","memberName":"sender","nodeType":"MemberAccess","src":"3607:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4063,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"3621:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3607:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e6374696f6e","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3628:39:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face","typeString":"literal_string \"Only the owner can call this function\""},"value":"Only the owner can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face","typeString":"literal_string \"Only the owner can call this function\""}],"id":4060,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3599:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3599:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4067,"nodeType":"ExpressionStatement","src":"3599:69:13"},{"id":4068,"nodeType":"PlaceholderStatement","src":"3679:1:13"}]},"id":4070,"name":"onlyOwner","nameLocation":"3578:9:13","nodeType":"ModifierDefinition","parameters":{"id":4059,"nodeType":"ParameterList","parameters":[],"src":"3588:0:13"},"src":"3569:119:13","virtual":false,"visibility":"internal"}],"scope":4072,"src":"1246:2447:13","usedErrors":[4085],"usedEvents":[3868]}],"src":"40:3653:13"},"id":13},"library/ReentrancyGuard.sol":{"ast":{"absolutePath":"library/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[4140]},"id":4141,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4073,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:14"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":4074,"nodeType":"StructuredDocumentation","src":"140:765:14","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":4140,"linearizedBaseContracts":[4140],"name":"ReentrancyGuard","nameLocation":"925:15:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4077,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1732:11:14","nodeType":"VariableDeclaration","scope":4140,"src":"1707:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4075,"name":"uint256","nodeType":"ElementaryTypeName","src":"1707:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1746:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":4080,"mutability":"constant","name":"ENTERED","nameLocation":"1779:7:14","nodeType":"VariableDeclaration","scope":4140,"src":"1754:36:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4078,"name":"uint256","nodeType":"ElementaryTypeName","src":"1754:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1789:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":4082,"mutability":"mutable","name":"_status","nameLocation":"1815:7:14","nodeType":"VariableDeclaration","scope":4140,"src":"1799:23:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4081,"name":"uint256","nodeType":"ElementaryTypeName","src":"1799:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":4083,"nodeType":"StructuredDocumentation","src":"1831:54:14","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":4085,"name":"ReentrancyGuardReentrantCall","nameLocation":"1897:28:14","nodeType":"ErrorDefinition","parameters":{"id":4084,"nodeType":"ParameterList","parameters":[],"src":"1925:2:14"},"src":"1891:37:14"},{"body":{"id":4092,"nodeType":"Block","src":"1950:40:14","statements":[{"expression":{"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4088,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"1961:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4089,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"1971:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1961:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4091,"nodeType":"ExpressionStatement","src":"1961:21:14"}]},"id":4093,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4086,"nodeType":"ParameterList","parameters":[],"src":"1947:2:14"},"returnParameters":{"id":4087,"nodeType":"ParameterList","parameters":[],"src":"1950:0:14"},"scope":4140,"src":"1936:54:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4103,"nodeType":"Block","src":"2400:83:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4096,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"2411:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2411:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4098,"nodeType":"ExpressionStatement","src":"2411:21:14"},{"id":4099,"nodeType":"PlaceholderStatement","src":"2443:1:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4100,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"2455:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2455:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4102,"nodeType":"ExpressionStatement","src":"2455:20:14"}]},"documentation":{"id":4094,"nodeType":"StructuredDocumentation","src":"1998:372:14","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":4104,"name":"nonReentrant","nameLocation":"2385:12:14","nodeType":"ModifierDefinition","parameters":{"id":4095,"nodeType":"ParameterList","parameters":[],"src":"2397:2:14"},"src":"2376:107:14","virtual":false,"visibility":"internal"},{"body":{"id":4119,"nodeType":"Block","src":"2530:276:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4107,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"2620:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4108,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"2631:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2620:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4114,"nodeType":"IfStatement","src":"2616:88:14","trueBody":{"id":4113,"nodeType":"Block","src":"2640:64:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4110,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"2662:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2662:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4112,"nodeType":"RevertStatement","src":"2655:37:14"}]}},{"expression":{"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4115,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"2781:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4116,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"2791:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2781:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4118,"nodeType":"ExpressionStatement","src":"2781:17:14"}]},"id":4120,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2500:19:14","nodeType":"FunctionDefinition","parameters":{"id":4105,"nodeType":"ParameterList","parameters":[],"src":"2519:2:14"},"returnParameters":{"id":4106,"nodeType":"ParameterList","parameters":[],"src":"2530:0:14"},"scope":4140,"src":"2491:315:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4127,"nodeType":"Block","src":"2852:174:14","statements":[{"expression":{"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4123,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"2997:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4124,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"3007:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2997:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4126,"nodeType":"ExpressionStatement","src":"2997:21:14"}]},"id":4128,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2823:18:14","nodeType":"FunctionDefinition","parameters":{"id":4121,"nodeType":"ParameterList","parameters":[],"src":"2841:2:14"},"returnParameters":{"id":4122,"nodeType":"ParameterList","parameters":[],"src":"2852:0:14"},"scope":4140,"src":"2814:212:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4138,"nodeType":"Block","src":"3275:44:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4134,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"3293:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4135,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"3304:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3293:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4133,"id":4137,"nodeType":"Return","src":"3286:25:14"}]},"documentation":{"id":4129,"nodeType":"StructuredDocumentation","src":"3034:171:14","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":4139,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3220:23:14","nodeType":"FunctionDefinition","parameters":{"id":4130,"nodeType":"ParameterList","parameters":[],"src":"3243:2:14"},"returnParameters":{"id":4133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4139,"src":"3269:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4131,"name":"bool","nodeType":"ElementaryTypeName","src":"3269:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3268:6:14"},"scope":4140,"src":"3211:108:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4141,"src":"907:2415:14","usedErrors":[4085],"usedEvents":[]}],"src":"112:3210:14"},"id":14}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50611233806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b10565b60405180910390f35b6100e660048036038101906100e19190610bcb565b610308565b6040516100f39190610c26565b60405180910390f35b61010461032b565b6040516101119190610c50565b60405180910390f35b610134600480360381019061012f9190610c6b565b610335565b6040516101419190610c26565b60405180910390f35b610152610364565b60405161015f9190610cda565b60405180910390f35b610182600480360381019061017d9190610bcb565b61036d565b60405161018f9190610c26565b60405180910390f35b6101b260048036038101906101ad9190610cf5565b6103a4565b6040516101bf9190610c50565b60405180910390f35b6101d06103ed565b6040516101dd9190610b10565b60405180910390f35b61020060048036038101906101fb9190610bcb565b61047f565b60405161020d9190610c26565b60405180910390f35b610230600480360381019061022b9190610bcb565b6104f6565b60405161023d9190610c26565b60405180910390f35b610260600480360381019061025b9190610d22565b610519565b60405161026d9190610c50565b60405180910390f35b60606036805461028590610d91565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d91565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b6000806103136105a0565b90506103208185856105a8565b600191505092915050565b6000603554905090565b6000806103406105a0565b905061034d858285610771565b6103588585856107fd565b60019150509392505050565b60006012905090565b6000806103786105a0565b905061039981858561038a8589610519565b6103949190610df1565b6105a8565b600191505092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060603780546103fc90610d91565b80601f016020809104026020016040519081016040528092919081815260200182805461042890610d91565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b60008061048a6105a0565b905060006104988286610519565b9050838110156104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d490610e97565b60405180910390fd5b6104ea82868684036105a8565b60019250505092915050565b6000806105016105a0565b905061050e8185856107fd565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610f29565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067d90610fbb565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107649190610c50565b60405180910390a3505050565b600061077d8484610519565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f757818110156107e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e090611027565b60405180910390fd5b6107f684848484036105a8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610863906110b9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d29061114b565b60405180910390fd5b6108e6838383610a76565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610964906111dd565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610c50565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aba578082015181840152602081019050610a9f565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ae282610a80565b610aec8185610a8b565b9350610afc818560208601610a9c565b610b0581610ac6565b840191505092915050565b60006020820190508181036000830152610b2a8184610ad7565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6282610b37565b9050919050565b610b7281610b57565b8114610b7d57600080fd5b50565b600081359050610b8f81610b69565b92915050565b6000819050919050565b610ba881610b95565b8114610bb357600080fd5b50565b600081359050610bc581610b9f565b92915050565b60008060408385031215610be257610be1610b32565b5b6000610bf085828601610b80565b9250506020610c0185828601610bb6565b9150509250929050565b60008115159050919050565b610c2081610c0b565b82525050565b6000602082019050610c3b6000830184610c17565b92915050565b610c4a81610b95565b82525050565b6000602082019050610c656000830184610c41565b92915050565b600080600060608486031215610c8457610c83610b32565b5b6000610c9286828701610b80565b9350506020610ca386828701610b80565b9250506040610cb486828701610bb6565b9150509250925092565b600060ff82169050919050565b610cd481610cbe565b82525050565b6000602082019050610cef6000830184610ccb565b92915050565b600060208284031215610d0b57610d0a610b32565b5b6000610d1984828501610b80565b91505092915050565b60008060408385031215610d3957610d38610b32565b5b6000610d4785828601610b80565b9250506020610d5885828601610b80565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da957607f821691505b602082108103610dbc57610dbb610d62565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dfc82610b95565b9150610e0783610b95565b9250828201905080821115610e1f57610e1e610dc2565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e81602583610a8b565b9150610e8c82610e25565b604082019050919050565b60006020820190508181036000830152610eb081610e74565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f13602483610a8b565b9150610f1e82610eb7565b604082019050919050565b60006020820190508181036000830152610f4281610f06565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa5602283610a8b565b9150610fb082610f49565b604082019050919050565b60006020820190508181036000830152610fd481610f98565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611011601d83610a8b565b915061101c82610fdb565b602082019050919050565b6000602082019050818103600083015261104081611004565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110a3602583610a8b565b91506110ae82611047565b604082019050919050565b600060208201905081810360008301526110d281611096565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611135602383610a8b565b9150611140826110d9565b604082019050919050565b6000602082019050818103600083015261116481611128565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c7602683610a8b565b91506111d28261116b565b604082019050919050565b600060208201905081810360008301526111f6816111ba565b905091905056fea2646970667358221220f25c560492cc6226fac931d3056306fb112e79bf15ad49d9e39c97ee748dbd7f64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1233 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF5 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD91 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xD91 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0xD91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x475 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x475 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x458 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x48A PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x498 DUP3 DUP7 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4EA DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x501 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67D SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x764 SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77D DUP5 DUP5 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E0 SWAP1 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F6 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP1 PUSH2 0x10B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D2 SWAP1 PUSH2 0x114B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E6 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x964 SWAP1 PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE2 DUP3 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0xAEC DUP2 DUP6 PUSH2 0xA8B JUMP JUMPDEST SWAP4 POP PUSH2 0xAFC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xB05 DUP2 PUSH2 0xAC6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB2A DUP2 DUP5 PUSH2 0xAD7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB62 DUP3 PUSH2 0xB37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB72 DUP2 PUSH2 0xB57 JUMP JUMPDEST DUP2 EQ PUSH2 0xB7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8F DUP2 PUSH2 0xB69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA8 DUP2 PUSH2 0xB95 JUMP JUMPDEST DUP2 EQ PUSH2 0xBB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC5 DUP2 PUSH2 0xB9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE2 JUMPI PUSH2 0xBE1 PUSH2 0xB32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF0 DUP6 DUP3 DUP7 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC01 DUP6 DUP3 DUP7 ADD PUSH2 0xBB6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC20 DUP2 PUSH2 0xC0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC3B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4A DUP2 PUSH2 0xB95 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC65 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC84 JUMPI PUSH2 0xC83 PUSH2 0xB32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC92 DUP7 DUP3 DUP8 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCA3 DUP7 DUP3 DUP8 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB4 DUP7 DUP3 DUP8 ADD PUSH2 0xBB6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD4 DUP2 PUSH2 0xCBE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0B JUMPI PUSH2 0xD0A PUSH2 0xB32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD19 DUP5 DUP3 DUP6 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD39 JUMPI PUSH2 0xD38 PUSH2 0xB32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD47 DUP6 DUP3 DUP7 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD58 DUP6 DUP3 DUP7 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDBC JUMPI PUSH2 0xDBB PUSH2 0xD62 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDFC DUP3 PUSH2 0xB95 JUMP JUMPDEST SWAP2 POP PUSH2 0xE07 DUP4 PUSH2 0xB95 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1F JUMPI PUSH2 0xE1E PUSH2 0xDC2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE81 PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xE8C DUP3 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEB0 DUP2 PUSH2 0xE74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF13 PUSH1 0x24 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xF1E DUP3 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF42 DUP2 PUSH2 0xF06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA5 PUSH1 0x22 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xFB0 DUP3 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD4 DUP2 PUSH2 0xF98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1011 PUSH1 0x1D DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x101C DUP3 PUSH2 0xFDB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1040 DUP2 PUSH2 0x1004 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A3 PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x10AE DUP3 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10D2 DUP2 PUSH2 0x1096 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1135 PUSH1 0x23 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x1140 DUP3 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1164 DUP2 PUSH2 0x1128 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C7 PUSH1 0x26 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x11D2 DUP3 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F6 DUP2 PUSH2 0x11BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0x5C JUMP DIV SWAP3 0xCC PUSH3 0x26FAC9 BALANCE 0xD3 SDIV PUSH4 0x6FB112E PUSH26 0xBF15AD49D9E39C97EE748DBD7F64736F6C634300081400330000 ","sourceMap":"1480:12159:2:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_906":{"entryPoint":2683,"id":906,"parameterSlots":3,"returnSlots":0},"@_approve_841":{"entryPoint":1448,"id":841,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_895":{"entryPoint":2678,"id":895,"parameterSlots":3,"returnSlots":0},"@_msgSender_1326":{"entryPoint":1440,"id":1326,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_884":{"entryPoint":1905,"id":884,"parameterSlots":3,"returnSlots":0},"@_transfer_667":{"entryPoint":2045,"id":667,"parameterSlots":3,"returnSlots":0},"@allowance_462":{"entryPoint":1305,"id":462,"parameterSlots":2,"returnSlots":1},"@approve_487":{"entryPoint":776,"id":487,"parameterSlots":2,"returnSlots":1},"@balanceOf_419":{"entryPoint":932,"id":419,"parameterSlots":1,"returnSlots":1},"@decimals_395":{"entryPoint":868,"id":395,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_590":{"entryPoint":1151,"id":590,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_549":{"entryPoint":877,"id":549,"parameterSlots":2,"returnSlots":1},"@name_375":{"entryPoint":630,"id":375,"parameterSlots":0,"returnSlots":1},"@symbol_385":{"entryPoint":1005,"id":385,"parameterSlots":0,"returnSlots":1},"@totalSupply_405":{"entryPoint":811,"id":405,"parameterSlots":0,"returnSlots":1},"@transferFrom_520":{"entryPoint":821,"id":520,"parameterSlots":3,"returnSlots":1},"@transfer_444":{"entryPoint":1270,"id":444,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2944,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2998,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3317,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3362,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3179,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3019,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3095,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2775,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4392,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3992,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4100,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4538,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4246,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3846,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3700,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3137,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3275,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3110,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2832,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4427,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4027,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4135,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4573,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4281,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3881,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3735,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3152,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3290,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2688,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2699,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3569,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2903,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3083,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2871,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2965,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3262,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2716,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3473,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3522,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3426,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2866,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2758,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4313,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3913,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4059,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4459,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4167,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3767,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3621,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2921,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2975,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:15","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:15","statements":[{"nodeType":"YulAssignment","src":"77:22:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:15"},"nodeType":"YulFunctionCall","src":"87:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:15"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:15","type":""}],"src":"7:99:15"},{"body":{"nodeType":"YulBlock","src":"208:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:15"},"nodeType":"YulFunctionCall","src":"218:19:15"},"nodeType":"YulExpressionStatement","src":"218:19:15"},{"nodeType":"YulAssignment","src":"246:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:15"},"nodeType":"YulFunctionCall","src":"261:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:15","type":""}],"src":"112:169:15"},{"body":{"nodeType":"YulBlock","src":"349:184:15","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:15"},"nodeType":"YulFunctionCall","src":"449:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:15"},"nodeType":"YulFunctionCall","src":"468:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:15"},"nodeType":"YulFunctionCall","src":"462:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:15"},"nodeType":"YulFunctionCall","src":"442:39:15"},"nodeType":"YulExpressionStatement","src":"442:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:15"},"nodeType":"YulFunctionCall","src":"386:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:15","statements":[{"nodeType":"YulAssignment","src":"402:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:15"},"nodeType":"YulFunctionCall","src":"407:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:15","statements":[]},"src":"378:113:15"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:15"},"nodeType":"YulFunctionCall","src":"507:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:15"},"nodeType":"YulFunctionCall","src":"500:27:15"},"nodeType":"YulExpressionStatement","src":"500:27:15"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:15","type":""}],"src":"287:246:15"},{"body":{"nodeType":"YulBlock","src":"587:54:15","statements":[{"nodeType":"YulAssignment","src":"597:38:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:15"},"nodeType":"YulFunctionCall","src":"611:14:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:15"},"nodeType":"YulFunctionCall","src":"627:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:15"},"nodeType":"YulFunctionCall","src":"607:28:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:15"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:15","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:15","type":""}],"src":"539:102:15"},{"body":{"nodeType":"YulBlock","src":"739:285:15","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:15"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:15"},"nodeType":"YulFunctionCall","src":"763:39:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:15","type":""}]},{"nodeType":"YulAssignment","src":"811:78:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:15"},"nodeType":"YulFunctionCall","src":"818:71:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:15"},"nodeType":"YulFunctionCall","src":"933:16:15"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:15"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:15"},"nodeType":"YulFunctionCall","src":"898:65:15"},"nodeType":"YulExpressionStatement","src":"898:65:15"},{"nodeType":"YulAssignment","src":"972:46:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:15"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:15"},"nodeType":"YulFunctionCall","src":"988:29:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:15"},"nodeType":"YulFunctionCall","src":"979:39:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:15"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:15","type":""}],"src":"647:377:15"},{"body":{"nodeType":"YulBlock","src":"1148:195:15","statements":[{"nodeType":"YulAssignment","src":"1158:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:15"},"nodeType":"YulFunctionCall","src":"1166:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:15"},"nodeType":"YulFunctionCall","src":"1201:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:15"},"nodeType":"YulFunctionCall","src":"1220:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:15"},"nodeType":"YulFunctionCall","src":"1194:47:15"},"nodeType":"YulExpressionStatement","src":"1194:47:15"},{"nodeType":"YulAssignment","src":"1250:86:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:15"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:15"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:15"},"nodeType":"YulFunctionCall","src":"1258:78:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:15","type":""}],"src":"1030:313:15"},{"body":{"nodeType":"YulBlock","src":"1389:35:15","statements":[{"nodeType":"YulAssignment","src":"1399:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:15"},"nodeType":"YulFunctionCall","src":"1409:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:15","type":""}],"src":"1349:75:15"},{"body":{"nodeType":"YulBlock","src":"1519:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:15"},"nodeType":"YulFunctionCall","src":"1529:12:15"},"nodeType":"YulExpressionStatement","src":"1529:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:15"},{"body":{"nodeType":"YulBlock","src":"1642:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:15"},"nodeType":"YulFunctionCall","src":"1652:12:15"},"nodeType":"YulExpressionStatement","src":"1652:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:15"},{"body":{"nodeType":"YulBlock","src":"1721:81:15","statements":[{"nodeType":"YulAssignment","src":"1731:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:15"},"nodeType":"YulFunctionCall","src":"1742:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:15","type":""}],"src":"1676:126:15"},{"body":{"nodeType":"YulBlock","src":"1853:51:15","statements":[{"nodeType":"YulAssignment","src":"1863:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:15"},"nodeType":"YulFunctionCall","src":"1874:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:15","type":""}],"src":"1808:96:15"},{"body":{"nodeType":"YulBlock","src":"1953:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:15"},"nodeType":"YulFunctionCall","src":"2012:12:15"},"nodeType":"YulExpressionStatement","src":"2012:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:15"},"nodeType":"YulFunctionCall","src":"1983:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:15"},"nodeType":"YulFunctionCall","src":"1973:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:15"},"nodeType":"YulFunctionCall","src":"1966:43:15"},"nodeType":"YulIf","src":"1963:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:15","type":""}],"src":"1910:122:15"},{"body":{"nodeType":"YulBlock","src":"2090:87:15","statements":[{"nodeType":"YulAssignment","src":"2100:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:15"},"nodeType":"YulFunctionCall","src":"2109:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:15"},"nodeType":"YulFunctionCall","src":"2138:33:15"},"nodeType":"YulExpressionStatement","src":"2138:33:15"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:15","type":""}],"src":"2038:139:15"},{"body":{"nodeType":"YulBlock","src":"2228:32:15","statements":[{"nodeType":"YulAssignment","src":"2238:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:15","type":""}],"src":"2183:77:15"},{"body":{"nodeType":"YulBlock","src":"2309:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:15"},"nodeType":"YulFunctionCall","src":"2368:12:15"},"nodeType":"YulExpressionStatement","src":"2368:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:15"},"nodeType":"YulFunctionCall","src":"2339:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:15"},"nodeType":"YulFunctionCall","src":"2329:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:15"},"nodeType":"YulFunctionCall","src":"2322:43:15"},"nodeType":"YulIf","src":"2319:63:15"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:15","type":""}],"src":"2266:122:15"},{"body":{"nodeType":"YulBlock","src":"2446:87:15","statements":[{"nodeType":"YulAssignment","src":"2456:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:15"},"nodeType":"YulFunctionCall","src":"2465:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:15"},"nodeType":"YulFunctionCall","src":"2494:33:15"},"nodeType":"YulExpressionStatement","src":"2494:33:15"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:15","type":""}],"src":"2394:139:15"},{"body":{"nodeType":"YulBlock","src":"2622:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:15"},"nodeType":"YulFunctionCall","src":"2670:79:15"},"nodeType":"YulExpressionStatement","src":"2670:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:15"},"nodeType":"YulFunctionCall","src":"2639:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:15"},"nodeType":"YulFunctionCall","src":"2635:32:15"},"nodeType":"YulIf","src":"2632:119:15"},{"nodeType":"YulBlock","src":"2761:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:15"},"nodeType":"YulFunctionCall","src":"2836:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:15"},"nodeType":"YulFunctionCall","src":"2815:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:15"}]}]},{"nodeType":"YulBlock","src":"2888:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:15","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:15"},"nodeType":"YulFunctionCall","src":"2964:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:15"},"nodeType":"YulFunctionCall","src":"2943:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:15","type":""}],"src":"2539:474:15"},{"body":{"nodeType":"YulBlock","src":"3061:48:15","statements":[{"nodeType":"YulAssignment","src":"3071:32:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:15"},"nodeType":"YulFunctionCall","src":"3089:13:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:15"},"nodeType":"YulFunctionCall","src":"3082:21:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:15"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:15","type":""}],"src":"3019:90:15"},{"body":{"nodeType":"YulBlock","src":"3174:50:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:15"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:15"},"nodeType":"YulFunctionCall","src":"3196:21:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:15"},"nodeType":"YulFunctionCall","src":"3184:34:15"},"nodeType":"YulExpressionStatement","src":"3184:34:15"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:15","type":""}],"src":"3115:109:15"},{"body":{"nodeType":"YulBlock","src":"3322:118:15","statements":[{"nodeType":"YulAssignment","src":"3332:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:15"},"nodeType":"YulFunctionCall","src":"3340:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:15"},"nodeType":"YulFunctionCall","src":"3415:17:15"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:15"},"nodeType":"YulFunctionCall","src":"3368:65:15"},"nodeType":"YulExpressionStatement","src":"3368:65:15"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:15","type":""}],"src":"3230:210:15"},{"body":{"nodeType":"YulBlock","src":"3511:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:15"},"nodeType":"YulFunctionCall","src":"3533:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:15"},"nodeType":"YulFunctionCall","src":"3521:37:15"},"nodeType":"YulExpressionStatement","src":"3521:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:15","type":""}],"src":"3446:118:15"},{"body":{"nodeType":"YulBlock","src":"3668:124:15","statements":[{"nodeType":"YulAssignment","src":"3678:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:15"},"nodeType":"YulFunctionCall","src":"3686:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:15"},"nodeType":"YulFunctionCall","src":"3767:17:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:15"},"nodeType":"YulFunctionCall","src":"3714:71:15"},"nodeType":"YulExpressionStatement","src":"3714:71:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:15","type":""}],"src":"3570:222:15"},{"body":{"nodeType":"YulBlock","src":"3898:519:15","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:15"},"nodeType":"YulFunctionCall","src":"3946:79:15"},"nodeType":"YulExpressionStatement","src":"3946:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:15"},"nodeType":"YulFunctionCall","src":"3915:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:15"},"nodeType":"YulFunctionCall","src":"3911:32:15"},"nodeType":"YulIf","src":"3908:119:15"},{"nodeType":"YulBlock","src":"4037:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:15"},"nodeType":"YulFunctionCall","src":"4112:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:15"},"nodeType":"YulFunctionCall","src":"4091:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:15"}]}]},{"nodeType":"YulBlock","src":"4164:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:15"},"nodeType":"YulFunctionCall","src":"4240:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:15"},"nodeType":"YulFunctionCall","src":"4219:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:15"}]}]},{"nodeType":"YulBlock","src":"4292:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:15","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:15"},"nodeType":"YulFunctionCall","src":"4368:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:15"},"nodeType":"YulFunctionCall","src":"4347:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:15","type":""}],"src":"3798:619:15"},{"body":{"nodeType":"YulBlock","src":"4466:43:15","statements":[{"nodeType":"YulAssignment","src":"4476:27:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:15","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:15"},"nodeType":"YulFunctionCall","src":"4487:16:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:15"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:15","type":""}],"src":"4423:86:15"},{"body":{"nodeType":"YulBlock","src":"4576:51:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:15"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:15"},"nodeType":"YulFunctionCall","src":"4598:22:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:15"},"nodeType":"YulFunctionCall","src":"4586:35:15"},"nodeType":"YulExpressionStatement","src":"4586:35:15"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:15","type":""}],"src":"4515:112:15"},{"body":{"nodeType":"YulBlock","src":"4727:120:15","statements":[{"nodeType":"YulAssignment","src":"4737:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:15"},"nodeType":"YulFunctionCall","src":"4745:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:15"},"nodeType":"YulFunctionCall","src":"4822:17:15"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:15"},"nodeType":"YulFunctionCall","src":"4773:67:15"},"nodeType":"YulExpressionStatement","src":"4773:67:15"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:15","type":""}],"src":"4633:214:15"},{"body":{"nodeType":"YulBlock","src":"4919:263:15","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:15"},"nodeType":"YulFunctionCall","src":"4967:79:15"},"nodeType":"YulExpressionStatement","src":"4967:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:15"},"nodeType":"YulFunctionCall","src":"4936:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:15"},"nodeType":"YulFunctionCall","src":"4932:32:15"},"nodeType":"YulIf","src":"4929:119:15"},{"nodeType":"YulBlock","src":"5058:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:15"},"nodeType":"YulFunctionCall","src":"5133:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:15"},"nodeType":"YulFunctionCall","src":"5112:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:15"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:15","type":""}],"src":"4853:329:15"},{"body":{"nodeType":"YulBlock","src":"5271:391:15","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:15"},"nodeType":"YulFunctionCall","src":"5319:79:15"},"nodeType":"YulExpressionStatement","src":"5319:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:15"},"nodeType":"YulFunctionCall","src":"5288:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:15"},"nodeType":"YulFunctionCall","src":"5284:32:15"},"nodeType":"YulIf","src":"5281:119:15"},{"nodeType":"YulBlock","src":"5410:117:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:15"},"nodeType":"YulFunctionCall","src":"5485:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:15"},"nodeType":"YulFunctionCall","src":"5464:53:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:15"}]}]},{"nodeType":"YulBlock","src":"5537:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:15"},"nodeType":"YulFunctionCall","src":"5613:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:15"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:15"},"nodeType":"YulFunctionCall","src":"5592:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:15","type":""}],"src":"5188:474:15"},{"body":{"nodeType":"YulBlock","src":"5696:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:15"},"nodeType":"YulFunctionCall","src":"5706:88:15"},"nodeType":"YulExpressionStatement","src":"5706:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:15","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:15"},"nodeType":"YulFunctionCall","src":"5803:15:15"},"nodeType":"YulExpressionStatement","src":"5803:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:15"},"nodeType":"YulFunctionCall","src":"5827:15:15"},"nodeType":"YulExpressionStatement","src":"5827:15:15"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:15"},{"body":{"nodeType":"YulBlock","src":"5905:269:15","statements":[{"nodeType":"YulAssignment","src":"5915:22:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:15","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:15"},"nodeType":"YulFunctionCall","src":"5925:12:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:15","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:15"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:15","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:15"},"nodeType":"YulFunctionCall","src":"5972:12:15"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:15","statements":[{"nodeType":"YulAssignment","src":"6037:27:15","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:15","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:15"},"nodeType":"YulFunctionCall","src":"6047:17:15"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:15"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:15"},"nodeType":"YulFunctionCall","src":"5996:26:15"},"nodeType":"YulIf","src":"5993:81:15"},{"body":{"nodeType":"YulBlock","src":"6126:42:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:15"},"nodeType":"YulFunctionCall","src":"6140:18:15"},"nodeType":"YulExpressionStatement","src":"6140:18:15"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:15","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:15"},"nodeType":"YulFunctionCall","src":"6110:14:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:15"},"nodeType":"YulFunctionCall","src":"6087:38:15"},"nodeType":"YulIf","src":"6084:84:15"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:15","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:15","type":""}],"src":"5854:320:15"},{"body":{"nodeType":"YulBlock","src":"6208:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:15"},"nodeType":"YulFunctionCall","src":"6218:88:15"},"nodeType":"YulExpressionStatement","src":"6218:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:15"},"nodeType":"YulFunctionCall","src":"6315:15:15"},"nodeType":"YulExpressionStatement","src":"6315:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:15"},"nodeType":"YulFunctionCall","src":"6339:15:15"},"nodeType":"YulExpressionStatement","src":"6339:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:15"},{"body":{"nodeType":"YulBlock","src":"6410:147:15","statements":[{"nodeType":"YulAssignment","src":"6420:25:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:15"},"nodeType":"YulFunctionCall","src":"6425:20:15"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:15"}]},{"nodeType":"YulAssignment","src":"6454:25:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:15"},"nodeType":"YulFunctionCall","src":"6459:20:15"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:15"}]},{"nodeType":"YulAssignment","src":"6488:16:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:15"},"nodeType":"YulFunctionCall","src":"6495:9:15"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:15"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:15"},"nodeType":"YulFunctionCall","src":"6530:18:15"},"nodeType":"YulExpressionStatement","src":"6530:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:15"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:15"},"nodeType":"YulFunctionCall","src":"6517:10:15"},"nodeType":"YulIf","src":"6514:36:15"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:15","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:15","type":""}],"src":"6366:191:15"},{"body":{"nodeType":"YulBlock","src":"6669:118:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:15"},"nodeType":"YulFunctionCall","src":"6687:14:15"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:15","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:15"},"nodeType":"YulFunctionCall","src":"6680:58:15"},"nodeType":"YulExpressionStatement","src":"6680:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:15"},"nodeType":"YulFunctionCall","src":"6755:15:15"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:15","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:15"},"nodeType":"YulFunctionCall","src":"6748:32:15"},"nodeType":"YulExpressionStatement","src":"6748:32:15"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:15","type":""}],"src":"6563:224:15"},{"body":{"nodeType":"YulBlock","src":"6939:220:15","statements":[{"nodeType":"YulAssignment","src":"6949:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:15","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:15"},"nodeType":"YulFunctionCall","src":"6956:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:15"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:15"},"nodeType":"YulFunctionCall","src":"7032:93:15"},"nodeType":"YulExpressionStatement","src":"7032:93:15"},{"nodeType":"YulAssignment","src":"7134:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:15"},"nodeType":"YulFunctionCall","src":"7141:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:15"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:15","type":""}],"src":"6793:366:15"},{"body":{"nodeType":"YulBlock","src":"7336:248:15","statements":[{"nodeType":"YulAssignment","src":"7346:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:15"},"nodeType":"YulFunctionCall","src":"7354:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:15"},"nodeType":"YulFunctionCall","src":"7389:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:15"},"nodeType":"YulFunctionCall","src":"7408:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:15"},"nodeType":"YulFunctionCall","src":"7382:47:15"},"nodeType":"YulExpressionStatement","src":"7382:47:15"},{"nodeType":"YulAssignment","src":"7438:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:15"},"nodeType":"YulFunctionCall","src":"7446:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:15","type":""}],"src":"7165:419:15"},{"body":{"nodeType":"YulBlock","src":"7696:117:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:15"},"nodeType":"YulFunctionCall","src":"7714:14:15"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:15","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:15"},"nodeType":"YulFunctionCall","src":"7707:58:15"},"nodeType":"YulExpressionStatement","src":"7707:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:15"},"nodeType":"YulFunctionCall","src":"7782:15:15"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:15","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:15"},"nodeType":"YulFunctionCall","src":"7775:31:15"},"nodeType":"YulExpressionStatement","src":"7775:31:15"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:15","type":""}],"src":"7590:223:15"},{"body":{"nodeType":"YulBlock","src":"7965:220:15","statements":[{"nodeType":"YulAssignment","src":"7975:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:15","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:15"},"nodeType":"YulFunctionCall","src":"7982:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:15"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:15"},"nodeType":"YulFunctionCall","src":"8058:93:15"},"nodeType":"YulExpressionStatement","src":"8058:93:15"},{"nodeType":"YulAssignment","src":"8160:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:15"},"nodeType":"YulFunctionCall","src":"8167:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:15"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:15","type":""}],"src":"7819:366:15"},{"body":{"nodeType":"YulBlock","src":"8362:248:15","statements":[{"nodeType":"YulAssignment","src":"8372:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:15"},"nodeType":"YulFunctionCall","src":"8380:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:15"},"nodeType":"YulFunctionCall","src":"8415:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:15"},"nodeType":"YulFunctionCall","src":"8434:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:15"},"nodeType":"YulFunctionCall","src":"8408:47:15"},"nodeType":"YulExpressionStatement","src":"8408:47:15"},{"nodeType":"YulAssignment","src":"8464:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:15"},"nodeType":"YulFunctionCall","src":"8472:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:15","type":""}],"src":"8191:419:15"},{"body":{"nodeType":"YulBlock","src":"8722:115:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:15"},"nodeType":"YulFunctionCall","src":"8740:14:15"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:15","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:15"},"nodeType":"YulFunctionCall","src":"8733:58:15"},"nodeType":"YulExpressionStatement","src":"8733:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:15"},"nodeType":"YulFunctionCall","src":"8808:15:15"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:15","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:15"},"nodeType":"YulFunctionCall","src":"8801:29:15"},"nodeType":"YulExpressionStatement","src":"8801:29:15"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:15","type":""}],"src":"8616:221:15"},{"body":{"nodeType":"YulBlock","src":"8989:220:15","statements":[{"nodeType":"YulAssignment","src":"8999:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:15","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:15"},"nodeType":"YulFunctionCall","src":"9006:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:15"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:15"},"nodeType":"YulFunctionCall","src":"9082:93:15"},"nodeType":"YulExpressionStatement","src":"9082:93:15"},{"nodeType":"YulAssignment","src":"9184:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:15"},"nodeType":"YulFunctionCall","src":"9191:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:15"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:15","type":""}],"src":"8843:366:15"},{"body":{"nodeType":"YulBlock","src":"9386:248:15","statements":[{"nodeType":"YulAssignment","src":"9396:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:15"},"nodeType":"YulFunctionCall","src":"9404:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:15"},"nodeType":"YulFunctionCall","src":"9439:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:15"},"nodeType":"YulFunctionCall","src":"9458:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:15"},"nodeType":"YulFunctionCall","src":"9432:47:15"},"nodeType":"YulExpressionStatement","src":"9432:47:15"},{"nodeType":"YulAssignment","src":"9488:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:15"},"nodeType":"YulFunctionCall","src":"9496:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:15","type":""}],"src":"9215:419:15"},{"body":{"nodeType":"YulBlock","src":"9746:73:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:15"},"nodeType":"YulFunctionCall","src":"9764:14:15"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:15","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:15"},"nodeType":"YulFunctionCall","src":"9757:55:15"},"nodeType":"YulExpressionStatement","src":"9757:55:15"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:15","type":""}],"src":"9640:179:15"},{"body":{"nodeType":"YulBlock","src":"9971:220:15","statements":[{"nodeType":"YulAssignment","src":"9981:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:15","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:15"},"nodeType":"YulFunctionCall","src":"9988:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:15"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:15"},"nodeType":"YulFunctionCall","src":"10064:93:15"},"nodeType":"YulExpressionStatement","src":"10064:93:15"},{"nodeType":"YulAssignment","src":"10166:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:15"},"nodeType":"YulFunctionCall","src":"10173:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:15"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:15","type":""}],"src":"9825:366:15"},{"body":{"nodeType":"YulBlock","src":"10368:248:15","statements":[{"nodeType":"YulAssignment","src":"10378:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:15"},"nodeType":"YulFunctionCall","src":"10386:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:15"},"nodeType":"YulFunctionCall","src":"10421:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:15"},"nodeType":"YulFunctionCall","src":"10440:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:15"},"nodeType":"YulFunctionCall","src":"10414:47:15"},"nodeType":"YulExpressionStatement","src":"10414:47:15"},{"nodeType":"YulAssignment","src":"10470:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:15"},"nodeType":"YulFunctionCall","src":"10478:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:15","type":""}],"src":"10197:419:15"},{"body":{"nodeType":"YulBlock","src":"10728:118:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:15"},"nodeType":"YulFunctionCall","src":"10746:14:15"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:15","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:15"},"nodeType":"YulFunctionCall","src":"10739:58:15"},"nodeType":"YulExpressionStatement","src":"10739:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:15"},"nodeType":"YulFunctionCall","src":"10814:15:15"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:15","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:15"},"nodeType":"YulFunctionCall","src":"10807:32:15"},"nodeType":"YulExpressionStatement","src":"10807:32:15"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:15","type":""}],"src":"10622:224:15"},{"body":{"nodeType":"YulBlock","src":"10998:220:15","statements":[{"nodeType":"YulAssignment","src":"11008:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:15","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:15"},"nodeType":"YulFunctionCall","src":"11015:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:15"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:15"},"nodeType":"YulFunctionCall","src":"11091:93:15"},"nodeType":"YulExpressionStatement","src":"11091:93:15"},{"nodeType":"YulAssignment","src":"11193:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:15"},"nodeType":"YulFunctionCall","src":"11200:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:15"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:15","type":""}],"src":"10852:366:15"},{"body":{"nodeType":"YulBlock","src":"11395:248:15","statements":[{"nodeType":"YulAssignment","src":"11405:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:15"},"nodeType":"YulFunctionCall","src":"11413:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:15"},"nodeType":"YulFunctionCall","src":"11448:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:15"},"nodeType":"YulFunctionCall","src":"11467:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:15"},"nodeType":"YulFunctionCall","src":"11441:47:15"},"nodeType":"YulExpressionStatement","src":"11441:47:15"},{"nodeType":"YulAssignment","src":"11497:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:15"},"nodeType":"YulFunctionCall","src":"11505:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:15","type":""}],"src":"11224:419:15"},{"body":{"nodeType":"YulBlock","src":"11755:116:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:15"},"nodeType":"YulFunctionCall","src":"11773:14:15"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:15","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:15"},"nodeType":"YulFunctionCall","src":"11766:58:15"},"nodeType":"YulExpressionStatement","src":"11766:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:15"},"nodeType":"YulFunctionCall","src":"11841:15:15"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:15","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:15"},"nodeType":"YulFunctionCall","src":"11834:30:15"},"nodeType":"YulExpressionStatement","src":"11834:30:15"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:15","type":""}],"src":"11649:222:15"},{"body":{"nodeType":"YulBlock","src":"12023:220:15","statements":[{"nodeType":"YulAssignment","src":"12033:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:15","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:15"},"nodeType":"YulFunctionCall","src":"12040:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:15"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:15"},"nodeType":"YulFunctionCall","src":"12116:93:15"},"nodeType":"YulExpressionStatement","src":"12116:93:15"},{"nodeType":"YulAssignment","src":"12218:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:15"},"nodeType":"YulFunctionCall","src":"12225:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:15"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:15","type":""}],"src":"11877:366:15"},{"body":{"nodeType":"YulBlock","src":"12420:248:15","statements":[{"nodeType":"YulAssignment","src":"12430:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:15"},"nodeType":"YulFunctionCall","src":"12438:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:15"},"nodeType":"YulFunctionCall","src":"12473:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:15"},"nodeType":"YulFunctionCall","src":"12492:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:15"},"nodeType":"YulFunctionCall","src":"12466:47:15"},"nodeType":"YulExpressionStatement","src":"12466:47:15"},{"nodeType":"YulAssignment","src":"12522:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:15"},"nodeType":"YulFunctionCall","src":"12530:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:15","type":""}],"src":"12249:419:15"},{"body":{"nodeType":"YulBlock","src":"12780:119:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:15"},"nodeType":"YulFunctionCall","src":"12798:14:15"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:15","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:15"},"nodeType":"YulFunctionCall","src":"12791:58:15"},"nodeType":"YulExpressionStatement","src":"12791:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:15"},"nodeType":"YulFunctionCall","src":"12866:15:15"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:15","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:15"},"nodeType":"YulFunctionCall","src":"12859:33:15"},"nodeType":"YulExpressionStatement","src":"12859:33:15"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:15","type":""}],"src":"12674:225:15"},{"body":{"nodeType":"YulBlock","src":"13051:220:15","statements":[{"nodeType":"YulAssignment","src":"13061:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:15","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:15"},"nodeType":"YulFunctionCall","src":"13068:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:15"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:15"},"nodeType":"YulFunctionCall","src":"13144:93:15"},"nodeType":"YulExpressionStatement","src":"13144:93:15"},{"nodeType":"YulAssignment","src":"13246:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:15"},"nodeType":"YulFunctionCall","src":"13253:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:15"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:15","type":""}],"src":"12905:366:15"},{"body":{"nodeType":"YulBlock","src":"13448:248:15","statements":[{"nodeType":"YulAssignment","src":"13458:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:15"},"nodeType":"YulFunctionCall","src":"13466:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:15"},"nodeType":"YulFunctionCall","src":"13501:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:15"},"nodeType":"YulFunctionCall","src":"13520:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:15"},"nodeType":"YulFunctionCall","src":"13494:47:15"},"nodeType":"YulExpressionStatement","src":"13494:47:15"},{"nodeType":"YulAssignment","src":"13550:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:15"},"nodeType":"YulFunctionCall","src":"13558:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:15","type":""}],"src":"13277:419:15"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b10565b60405180910390f35b6100e660048036038101906100e19190610bcb565b610308565b6040516100f39190610c26565b60405180910390f35b61010461032b565b6040516101119190610c50565b60405180910390f35b610134600480360381019061012f9190610c6b565b610335565b6040516101419190610c26565b60405180910390f35b610152610364565b60405161015f9190610cda565b60405180910390f35b610182600480360381019061017d9190610bcb565b61036d565b60405161018f9190610c26565b60405180910390f35b6101b260048036038101906101ad9190610cf5565b6103a4565b6040516101bf9190610c50565b60405180910390f35b6101d06103ed565b6040516101dd9190610b10565b60405180910390f35b61020060048036038101906101fb9190610bcb565b61047f565b60405161020d9190610c26565b60405180910390f35b610230600480360381019061022b9190610bcb565b6104f6565b60405161023d9190610c26565b60405180910390f35b610260600480360381019061025b9190610d22565b610519565b60405161026d9190610c50565b60405180910390f35b60606036805461028590610d91565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d91565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b6000806103136105a0565b90506103208185856105a8565b600191505092915050565b6000603554905090565b6000806103406105a0565b905061034d858285610771565b6103588585856107fd565b60019150509392505050565b60006012905090565b6000806103786105a0565b905061039981858561038a8589610519565b6103949190610df1565b6105a8565b600191505092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060603780546103fc90610d91565b80601f016020809104026020016040519081016040528092919081815260200182805461042890610d91565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b60008061048a6105a0565b905060006104988286610519565b9050838110156104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d490610e97565b60405180910390fd5b6104ea82868684036105a8565b60019250505092915050565b6000806105016105a0565b905061050e8185856107fd565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610f29565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067d90610fbb565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107649190610c50565b60405180910390a3505050565b600061077d8484610519565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f757818110156107e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e090611027565b60405180910390fd5b6107f684848484036105a8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610863906110b9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d29061114b565b60405180910390fd5b6108e6838383610a76565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610964906111dd565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610c50565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aba578082015181840152602081019050610a9f565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ae282610a80565b610aec8185610a8b565b9350610afc818560208601610a9c565b610b0581610ac6565b840191505092915050565b60006020820190508181036000830152610b2a8184610ad7565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6282610b37565b9050919050565b610b7281610b57565b8114610b7d57600080fd5b50565b600081359050610b8f81610b69565b92915050565b6000819050919050565b610ba881610b95565b8114610bb357600080fd5b50565b600081359050610bc581610b9f565b92915050565b60008060408385031215610be257610be1610b32565b5b6000610bf085828601610b80565b9250506020610c0185828601610bb6565b9150509250929050565b60008115159050919050565b610c2081610c0b565b82525050565b6000602082019050610c3b6000830184610c17565b92915050565b610c4a81610b95565b82525050565b6000602082019050610c656000830184610c41565b92915050565b600080600060608486031215610c8457610c83610b32565b5b6000610c9286828701610b80565b9350506020610ca386828701610b80565b9250506040610cb486828701610bb6565b9150509250925092565b600060ff82169050919050565b610cd481610cbe565b82525050565b6000602082019050610cef6000830184610ccb565b92915050565b600060208284031215610d0b57610d0a610b32565b5b6000610d1984828501610b80565b91505092915050565b60008060408385031215610d3957610d38610b32565b5b6000610d4785828601610b80565b9250506020610d5885828601610b80565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da957607f821691505b602082108103610dbc57610dbb610d62565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dfc82610b95565b9150610e0783610b95565b9250828201905080821115610e1f57610e1e610dc2565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e81602583610a8b565b9150610e8c82610e25565b604082019050919050565b60006020820190508181036000830152610eb081610e74565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f13602483610a8b565b9150610f1e82610eb7565b604082019050919050565b60006020820190508181036000830152610f4281610f06565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa5602283610a8b565b9150610fb082610f49565b604082019050919050565b60006020820190508181036000830152610fd481610f98565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611011601d83610a8b565b915061101c82610fdb565b602082019050919050565b6000602082019050818103600083015261104081611004565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110a3602583610a8b565b91506110ae82611047565b604082019050919050565b600060208201905081810360008301526110d281611096565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611135602383610a8b565b9150611140826110d9565b604082019050919050565b6000602082019050818103600083015261116481611128565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c7602683610a8b565b91506111d28261116b565b604082019050919050565b600060208201905081810360008301526111f6816111ba565b905091905056fea2646970667358221220f25c560492cc6226fac931d3056306fb112e79bf15ad49d9e39c97ee748dbd7f64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF5 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD91 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xD91 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0xD91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x475 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x475 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x458 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x48A PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x498 DUP3 DUP7 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4EA DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x501 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67D SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x764 SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77D DUP5 DUP5 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E0 SWAP1 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F6 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP1 PUSH2 0x10B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D2 SWAP1 PUSH2 0x114B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E6 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x964 SWAP1 PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE2 DUP3 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0xAEC DUP2 DUP6 PUSH2 0xA8B JUMP JUMPDEST SWAP4 POP PUSH2 0xAFC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xB05 DUP2 PUSH2 0xAC6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB2A DUP2 DUP5 PUSH2 0xAD7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB62 DUP3 PUSH2 0xB37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB72 DUP2 PUSH2 0xB57 JUMP JUMPDEST DUP2 EQ PUSH2 0xB7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8F DUP2 PUSH2 0xB69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA8 DUP2 PUSH2 0xB95 JUMP JUMPDEST DUP2 EQ PUSH2 0xBB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC5 DUP2 PUSH2 0xB9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE2 JUMPI PUSH2 0xBE1 PUSH2 0xB32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF0 DUP6 DUP3 DUP7 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC01 DUP6 DUP3 DUP7 ADD PUSH2 0xBB6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC20 DUP2 PUSH2 0xC0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC3B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4A DUP2 PUSH2 0xB95 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC65 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC84 JUMPI PUSH2 0xC83 PUSH2 0xB32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC92 DUP7 DUP3 DUP8 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCA3 DUP7 DUP3 DUP8 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB4 DUP7 DUP3 DUP8 ADD PUSH2 0xBB6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD4 DUP2 PUSH2 0xCBE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0B JUMPI PUSH2 0xD0A PUSH2 0xB32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD19 DUP5 DUP3 DUP6 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD39 JUMPI PUSH2 0xD38 PUSH2 0xB32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD47 DUP6 DUP3 DUP7 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD58 DUP6 DUP3 DUP7 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDBC JUMPI PUSH2 0xDBB PUSH2 0xD62 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDFC DUP3 PUSH2 0xB95 JUMP JUMPDEST SWAP2 POP PUSH2 0xE07 DUP4 PUSH2 0xB95 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1F JUMPI PUSH2 0xE1E PUSH2 0xDC2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE81 PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xE8C DUP3 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEB0 DUP2 PUSH2 0xE74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF13 PUSH1 0x24 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xF1E DUP3 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF42 DUP2 PUSH2 0xF06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA5 PUSH1 0x22 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xFB0 DUP3 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD4 DUP2 PUSH2 0xF98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1011 PUSH1 0x1D DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x101C DUP3 PUSH2 0xFDB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1040 DUP2 PUSH2 0x1004 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A3 PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x10AE DUP3 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10D2 DUP2 PUSH2 0x1096 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1135 PUSH1 0x23 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x1140 DUP3 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1164 DUP2 PUSH2 0x1128 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C7 PUSH1 0x26 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x11D2 DUP3 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F6 DUP2 PUSH2 0x11BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0x5C JUMP DIV SWAP3 0xCC PUSH3 0x26FAC9 BALANCE 0xD3 SDIV PUSH4 0x6FB112E PUSH26 0xBF15AD49D9E39C97EE748DBD7F64736F6C634300081400330000 ","sourceMap":"1480:12159:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4768:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3579:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5527:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3428:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6208:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3743:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2702:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6929:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4064:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4311:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2491:98;2545:13;2577:5;2570:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98;:::o;4768:197::-;4851:4;4867:13;4883:12;:10;:12::i;:::-;4867:28;;4905:32;4914:5;4921:7;4930:6;4905:8;:32::i;:::-;4954:4;4947:11;;;4768:197;;;;:::o;3579:106::-;3640:7;3666:12;;3659:19;;3579:106;:::o;5527:286::-;5654:4;5670:15;5688:12;:10;:12::i;:::-;5670:30;;5710:38;5726:4;5732:7;5741:6;5710:15;:38::i;:::-;5758:27;5768:4;5774:2;5778:6;5758:9;:27::i;:::-;5802:4;5795:11;;;5527:286;;;;;:::o;3428:91::-;3486:5;3510:2;3503:9;;3428:91;:::o;6208:234::-;6296:4;6312:13;6328:12;:10;:12::i;:::-;6312:28;;6350:64;6359:5;6366:7;6403:10;6375:25;6385:5;6392:7;6375:9;:25::i;:::-;:38;;;;:::i;:::-;6350:8;:64::i;:::-;6431:4;6424:11;;;6208:234;;;;:::o;3743:125::-;3817:7;3843:9;:18;3853:7;3843:18;;;;;;;;;;;;;;;;3836:25;;3743:125;;;:::o;2702:102::-;2758:13;2790:7;2783:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:102;:::o;6929:427::-;7022:4;7038:13;7054:12;:10;:12::i;:::-;7038:28;;7076:24;7103:25;7113:5;7120:7;7103:9;:25::i;:::-;7076:52;;7166:15;7146:16;:35;;7138:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7257:60;7266:5;7273:7;7301:15;7282:16;:34;7257:8;:60::i;:::-;7345:4;7338:11;;;;6929:427;;;;:::o;4064:189::-;4143:4;4159:13;4175:12;:10;:12::i;:::-;4159:28;;4197;4207:5;4214:2;4218:6;4197:9;:28::i;:::-;4242:4;4235:11;;;4064:189;;;;:::o;4311:149::-;4400:7;4426:11;:18;4438:5;4426:18;;;;;;;;;;;;;;;:27;4445:7;4426:27;;;;;;;;;;;;;;;;4419:34;;4311:149;;;;:::o;850:96:6:-;903:7;929:10;922:17;;850:96;:::o;10841:370:2:-;10989:1;10972:19;;:5;:19;;;10964:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11069:1;11050:21;;:7;:21;;;11042:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11151:6;11121:11;:18;11133:5;11121:18;;;;;;;;;;;;;;;:27;11140:7;11121:27;;;;;;;;;;;;;;;:36;;;;11188:7;11172:32;;11181:5;11172:32;;;11197:6;11172:32;;;;;;:::i;:::-;;;;;;;;10841:370;;;:::o;11492:441::-;11622:24;11649:25;11659:5;11666:7;11649:9;:25::i;:::-;11622:52;;11708:17;11688:16;:37;11684:243;;11769:6;11749:16;:26;;11741:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11851:51;11860:5;11867:7;11895:6;11876:16;:25;11851:8;:51::i;:::-;11684:243;11612:321;11492:441;;;:::o;7810:818::-;7952:1;7936:18;;:4;:18;;;7928:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8028:1;8014:16;;:2;:16;;;8006:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;8081:38;8102:4;8108:2;8112:6;8081:20;:38::i;:::-;8130:19;8152:9;:15;8162:4;8152:15;;;;;;;;;;;;;;;;8130:37;;8200:6;8185:11;:21;;8177:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;8315:6;8301:11;:20;8283:9;:15;8293:4;8283:15;;;;;;;;;;;;;;;:38;;;;8515:6;8498:9;:13;8508:2;8498:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8562:2;8547:26;;8556:4;8547:26;;;8566:6;8547:26;;;;;;:::i;:::-;;;;;;;;8584:37;8604:4;8610:2;8614:6;8584:19;:37::i;:::-;7918:710;7810:818;;;:::o;12517:121::-;;;;:::o;13226:120::-;;;;:::o;7:99:15:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"IERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"IERC20MetadataUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e6996de7efa04635791ca9e3ee67fb463f3ee7a93e4c9d058ecaca682f6bd75f64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 SWAP10 PUSH14 0xE7EFA04635791CA9E3EE67FB463F RETURNDATACOPY 0xE7 0xA9 RETURNDATACOPY 0x4C SWAP14 SDIV DUP15 0xCA 0xCA PUSH9 0x2F6BD75F64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"194:8087:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e6996de7efa04635791ca9e3ee67fb463f3ee7a93e4c9d058ecaca682f6bd75f64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 SWAP10 PUSH14 0xE7EFA04635791CA9E3EE67FB463F RETURNDATACOPY 0xE7 0xA9 RETURNDATACOPY 0x4C SWAP14 SDIV DUP15 0xCA 0xCA PUSH9 0x2F6BD75F64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"194:8087:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209bb47da55d5229988733dfeecbedd422af281d68fb9e4009d42993faed90cbb164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xB4 PUSH30 0xA55D5229988733DFEECBEDD422AF281D68FB9E4009D42993FAED90CBB164 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"707:3748:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209bb47da55d5229988733dfeecbedd422af281d68fb9e4009d42993faed90cbb164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xB4 PUSH30 0xA55D5229988733DFEECBEDD422AF281D68FB9E4009D42993FAED90CBB164 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"707:3748:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c85322a69bc06086618ef2656d9cca050b16cf2d59c7e8f2af2ebe94f3d67ce164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 MSTORE8 0x22 0xA6 SWAP12 0xC0 PUSH1 0x86 PUSH2 0x8EF2 PUSH6 0x6D9CCA050B16 0xCF 0x2D MSIZE 0xC7 0xE8 CALLCODE 0xAF 0x2E 0xBE SWAP5 RETURN 0xD6 PUSH29 0xE164736F6C634300081400330000000000000000000000000000000000 ","sourceMap":"194:8964:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c85322a69bc06086618ef2656d9cca050b16cf2d59c7e8f2af2ebe94f3d67ce164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 MSTORE8 0x22 0xA6 SWAP12 0xC0 PUSH1 0x86 PUSH2 0x8EF2 PUSH6 0x6D9CCA050B16 0xCF 0x2D MSIZE 0xC7 0xE8 CALLCODE 0xAF 0x2E 0xBE SWAP5 RETURN 0xD6 PUSH29 0xE164736F6C634300081400330000000000000000000000000000000000 ","sourceMap":"194:8964:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableMap.sol":{"EnumerableMap":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c54a478fb97ce5a18d6a134dbed58ee578f1bfa47d3ff9d18a7c1fac4a13d5fa64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0x4A SELFBALANCE DUP16 0xB9 PUSH29 0xE5A18D6A134DBED58EE578F1BFA47D3FF9D18A7C1FAC4A13D5FA64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1621:15801:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c54a478fb97ce5a18d6a134dbed58ee578f1bfa47d3ff9d18a7c1fac4a13d5fa64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0x4A SELFBALANCE DUP16 0xB9 PUSH29 0xE5A18D6A134DBED58EE578F1BFA47D3FF9D18A7C1FAC4A13D5FA64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1621:15801:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ``` The following map types are supported: - `uint256 -> address` (`UintToAddressMap`) since v3.0.0 - `address -> uint256` (`AddressToUintMap`) since v4.6.0 - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0 - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0 - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0 [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":\"EnumerableMap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0x5094b17cb46143943f3206d0738b91a05a7005e979681af7210d534cd3e72f54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a55fbc9ee8080ec3b397e8e32e5dafcff2c377ce44d553bfc93dfce1be2d5b12\",\"dweb:/ipfs/QmYSk6bNHnpKRyNWXmEBKbkPxXi7Hco9JZHHyxMdrZGWpb\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204a48f00c9a7f2414e5b30067bc9a685e27fa21d8474fa5892819908f579342da64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A BASEFEE CREATE 0xC SWAP11 PUSH32 0x2414E5B30067BC9A685E27FA21D8474FA5892819908F579342DA64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1321:11630:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204a48f00c9a7f2414e5b30067bc9a685e27fa21d8474fa5892819908f579342da64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A BASEFEE CREATE 0xC SWAP11 PUSH32 0x2414E5B30067BC9A685E27FA21D8474FA5892819908F579342DA64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1321:11630:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]}},\"version\":1}"}},"contracts/HypERC20TransferCengli.sol":{"GasRouter":{"abi":[{"inputs":[{"internalType":"uint32","name":"_destinationDomain","type":"uint32"}],"name":"quoteGasPayment","outputs":[{"internalType":"uint256","name":"_gasPayment","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"quoteGasPayment(uint32)":"f2ed8c53"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_destinationDomain\",\"type\":\"uint32\"}],\"name\":\"quoteGasPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasPayment\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HypERC20TransferCengli.sol\":\"GasRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0x5094b17cb46143943f3206d0738b91a05a7005e979681af7210d534cd3e72f54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a55fbc9ee8080ec3b397e8e32e5dafcff2c377ce44d553bfc93dfce1be2d5b12\",\"dweb:/ipfs/QmYSk6bNHnpKRyNWXmEBKbkPxXi7Hco9JZHHyxMdrZGWpb\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"contracts/HypERC20TransferCengli.sol\":{\"keccak256\":\"0x72985fe56c217028a5633b769779b77d9bc85359e484a415da6a6437de8c7ed3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://95bd8ea56dd4d09383a4fcc1bb0bf2b3ec30671ba493a662a87ac0b299f0c261\",\"dweb:/ipfs/QmQvMpzGZZJF3diFG4TvimXYqU74Sy5MgNm1Sbr1i1jfkm\"]},\"library/ReentrancyGuard.sol\":{\"keccak256\":\"0xda059b09cd6e981d06da65bb0363b211f0cf1ae4682b87bb270c54f51609e407\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407679d1b9ed78ebafd5d9406ac551b77033c509f541f42ded02f418536f2375\",\"dweb:/ipfs/QmWT4GQsHTWeuBZSJ3gX8EUz92nr8BFtGhLkZaKNm9nBib\"]}},\"version\":1}"},"HypERC20TransferCengli":{"abi":[{"inputs":[{"internalType":"address","name":"_USDCAddress","type":"address"},{"internalType":"address","name":"_HypERC20Address","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"messageId","type":"bytes32"},{"indexed":true,"internalType":"uint32","name":"destination","type":"uint32"},{"indexed":true,"internalType":"bytes32","name":"recipient","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SentTransferRemote","type":"event"},{"inputs":[],"name":"HypERC20Address","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDCAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_destinationDomain","type":"uint32"},{"internalType":"bytes32","name":"_recipientAddress","type":"bytes32"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"transferXchainHypERC20","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawNative","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_3905":{"entryPoint":null,"id":3905,"parameterSlots":2,"returnSlots":0},"@_4093":{"entryPoint":null,"id":4093,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":761,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":1042,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":784,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":1065,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":855,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_100000000000000_by_1_to_t_uint256_fromStack":{"entryPoint":942,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_rational_100000000000000_by_1__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":959,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":715,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":1004,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_100000000000000_by_1":{"entryPoint":872,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":683,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_100000000000000_by_1_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":678,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":735,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":1016,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3200:15","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:15","statements":[{"nodeType":"YulAssignment","src":"57:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:15"},"nodeType":"YulFunctionCall","src":"67:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:15","type":""}],"src":"7:75:15"},{"body":{"nodeType":"YulBlock","src":"177:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:15"},"nodeType":"YulFunctionCall","src":"187:12:15"},"nodeType":"YulExpressionStatement","src":"187:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:15"},{"body":{"nodeType":"YulBlock","src":"300:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:15"},"nodeType":"YulFunctionCall","src":"310:12:15"},"nodeType":"YulExpressionStatement","src":"310:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:15"},{"body":{"nodeType":"YulBlock","src":"379:81:15","statements":[{"nodeType":"YulAssignment","src":"389:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:15"},"nodeType":"YulFunctionCall","src":"400:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:15","type":""}],"src":"334:126:15"},{"body":{"nodeType":"YulBlock","src":"511:51:15","statements":[{"nodeType":"YulAssignment","src":"521:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:15"},"nodeType":"YulFunctionCall","src":"532:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:15","type":""}],"src":"466:96:15"},{"body":{"nodeType":"YulBlock","src":"611:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:15"},"nodeType":"YulFunctionCall","src":"670:12:15"},"nodeType":"YulExpressionStatement","src":"670:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:15"},"nodeType":"YulFunctionCall","src":"641:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:15"},"nodeType":"YulFunctionCall","src":"631:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:15"},"nodeType":"YulFunctionCall","src":"624:43:15"},"nodeType":"YulIf","src":"621:63:15"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:15","type":""}],"src":"568:122:15"},{"body":{"nodeType":"YulBlock","src":"759:80:15","statements":[{"nodeType":"YulAssignment","src":"769:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:15"},"nodeType":"YulFunctionCall","src":"778:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:15"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:15"},"nodeType":"YulFunctionCall","src":"800:33:15"},"nodeType":"YulExpressionStatement","src":"800:33:15"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:15","type":""}],"src":"696:143:15"},{"body":{"nodeType":"YulBlock","src":"939:413:15","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:15"},"nodeType":"YulFunctionCall","src":"987:79:15"},"nodeType":"YulExpressionStatement","src":"987:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:15"},"nodeType":"YulFunctionCall","src":"956:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:15"},"nodeType":"YulFunctionCall","src":"952:32:15"},"nodeType":"YulIf","src":"949:119:15"},{"nodeType":"YulBlock","src":"1078:128:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:15"},"nodeType":"YulFunctionCall","src":"1164:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:15"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:15"},"nodeType":"YulFunctionCall","src":"1132:64:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:15"}]}]},{"nodeType":"YulBlock","src":"1216:129:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:15"},"nodeType":"YulFunctionCall","src":"1303:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:15"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:15"},"nodeType":"YulFunctionCall","src":"1271:64:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:15"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:15","type":""}],"src":"845:507:15"},{"body":{"nodeType":"YulBlock","src":"1423:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1440:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1463:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1445:17:15"},"nodeType":"YulFunctionCall","src":"1445:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1433:6:15"},"nodeType":"YulFunctionCall","src":"1433:37:15"},"nodeType":"YulExpressionStatement","src":"1433:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1411:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1418:3:15","type":""}],"src":"1358:118:15"},{"body":{"nodeType":"YulBlock","src":"1549:32:15","statements":[{"nodeType":"YulAssignment","src":"1559:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"1570:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1559:7:15"}]}]},"name":"cleanup_t_rational_100000000000000_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1531:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1541:7:15","type":""}],"src":"1482:99:15"},{"body":{"nodeType":"YulBlock","src":"1632:32:15","statements":[{"nodeType":"YulAssignment","src":"1642:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"1653:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1642:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1614:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1624:7:15","type":""}],"src":"1587:77:15"},{"body":{"nodeType":"YulBlock","src":"1702:28:15","statements":[{"nodeType":"YulAssignment","src":"1712:12:15","value":{"name":"value","nodeType":"YulIdentifier","src":"1719:5:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1712:3:15"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1688:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1698:3:15","type":""}],"src":"1670:60:15"},{"body":{"nodeType":"YulBlock","src":"1818:104:15","statements":[{"nodeType":"YulAssignment","src":"1828:88:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1908:5:15"}],"functionName":{"name":"cleanup_t_rational_100000000000000_by_1","nodeType":"YulIdentifier","src":"1868:39:15"},"nodeType":"YulFunctionCall","src":"1868:46:15"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1859:8:15"},"nodeType":"YulFunctionCall","src":"1859:56:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1841:17:15"},"nodeType":"YulFunctionCall","src":"1841:75:15"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1828:9:15"}]}]},"name":"convert_t_rational_100000000000000_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1798:5:15","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1808:9:15","type":""}],"src":"1736:186:15"},{"body":{"nodeType":"YulBlock","src":"2015:88:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2032:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2090:5:15"}],"functionName":{"name":"convert_t_rational_100000000000000_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"2037:52:15"},"nodeType":"YulFunctionCall","src":"2037:59:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2025:6:15"},"nodeType":"YulFunctionCall","src":"2025:72:15"},"nodeType":"YulExpressionStatement","src":"2025:72:15"}]},"name":"abi_encode_t_rational_100000000000000_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2003:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2010:3:15","type":""}],"src":"1928:175:15"},{"body":{"nodeType":"YulBlock","src":"2257:228:15","statements":[{"nodeType":"YulAssignment","src":"2267:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2279:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2290:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2275:3:15"},"nodeType":"YulFunctionCall","src":"2275:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2267:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2347:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2360:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2371:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2356:3:15"},"nodeType":"YulFunctionCall","src":"2356:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2303:43:15"},"nodeType":"YulFunctionCall","src":"2303:71:15"},"nodeType":"YulExpressionStatement","src":"2303:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2450:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2463:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2474:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2459:3:15"},"nodeType":"YulFunctionCall","src":"2459:18:15"}],"functionName":{"name":"abi_encode_t_rational_100000000000000_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2384:65:15"},"nodeType":"YulFunctionCall","src":"2384:94:15"},"nodeType":"YulExpressionStatement","src":"2384:94:15"}]},"name":"abi_encode_tuple_t_address_t_rational_100000000000000_by_1__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2221:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2233:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2241:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2252:4:15","type":""}],"src":"2109:376:15"},{"body":{"nodeType":"YulBlock","src":"2533:48:15","statements":[{"nodeType":"YulAssignment","src":"2543:32:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2568:5:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2561:6:15"},"nodeType":"YulFunctionCall","src":"2561:13:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2554:6:15"},"nodeType":"YulFunctionCall","src":"2554:21:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2543:7:15"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2515:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2525:7:15","type":""}],"src":"2491:90:15"},{"body":{"nodeType":"YulBlock","src":"2627:76:15","statements":[{"body":{"nodeType":"YulBlock","src":"2681:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2690:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2693:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2683:6:15"},"nodeType":"YulFunctionCall","src":"2683:12:15"},"nodeType":"YulExpressionStatement","src":"2683:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2650:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2672:5:15"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2657:14:15"},"nodeType":"YulFunctionCall","src":"2657:21:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2647:2:15"},"nodeType":"YulFunctionCall","src":"2647:32:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2640:6:15"},"nodeType":"YulFunctionCall","src":"2640:40:15"},"nodeType":"YulIf","src":"2637:60:15"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2620:5:15","type":""}],"src":"2587:116:15"},{"body":{"nodeType":"YulBlock","src":"2769:77:15","statements":[{"nodeType":"YulAssignment","src":"2779:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2794:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2788:5:15"},"nodeType":"YulFunctionCall","src":"2788:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2779:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2834:5:15"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"2810:23:15"},"nodeType":"YulFunctionCall","src":"2810:30:15"},"nodeType":"YulExpressionStatement","src":"2810:30:15"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2747:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"2755:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2763:5:15","type":""}],"src":"2709:137:15"},{"body":{"nodeType":"YulBlock","src":"2926:271:15","statements":[{"body":{"nodeType":"YulBlock","src":"2972:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2974:77:15"},"nodeType":"YulFunctionCall","src":"2974:79:15"},"nodeType":"YulExpressionStatement","src":"2974:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2947:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2956:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:15"},"nodeType":"YulFunctionCall","src":"2943:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2968:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2939:3:15"},"nodeType":"YulFunctionCall","src":"2939:32:15"},"nodeType":"YulIf","src":"2936:119:15"},{"nodeType":"YulBlock","src":"3065:125:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3080:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3094:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3084:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3109:71:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3152:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3163:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3148:3:15"},"nodeType":"YulFunctionCall","src":"3148:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3172:7:15"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"3119:28:15"},"nodeType":"YulFunctionCall","src":"3119:61:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3109:6:15"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2896:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2907:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2919:6:15","type":""}],"src":"2852:345:15"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_rational_100000000000000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_100000000000000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_100000000000000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_100000000000000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_100000000000000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_100000000000000_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_100000000000000_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200140f3803806200140f833981810160405281019062000037919062000310565b600160008190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16655af3107a40006040518363ffffffff1660e01b815260040162000148929190620003bf565b6020604051808303816000875af115801562000168573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200018e919062000429565b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16655af3107a40006040518363ffffffff1660e01b815260040162000257929190620003bf565b6020604051808303816000875af115801562000277573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029d919062000429565b5050506200045b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002d882620002ab565b9050919050565b620002ea81620002cb565b8114620002f657600080fd5b50565b6000815190506200030a81620002df565b92915050565b600080604083850312156200032a5762000329620002a6565b5b60006200033a85828601620002f9565b92505060206200034d85828601620002f9565b9150509250929050565b6200036281620002cb565b82525050565b6000819050919050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000368565b6200037c565b62000372565b9050919050565b620003b98162000386565b82525050565b6000604082019050620003d6600083018562000357565b620003e56020830184620003ae565b9392505050565b60008115159050919050565b6200040381620003ec565b81146200040f57600080fd5b50565b6000815190506200042381620003f8565b92915050565b600060208284031215620004425762000441620002a6565b5b6000620004528482850162000412565b91505092915050565b610fa4806200046b6000396000f3fe6080604052600436106100595760003560e01c8063017e46da146100655780632367117c146100a257806350431ce4146100cd5780638da5cb5b146100e4578063d8fc063d1461010f578063e93032091461012657610060565b3661006057005b600080fd5b34801561007157600080fd5b5061008c60048036038101906100879190610a14565b610151565b6040516100999190610a76565b60405180910390f35b3480156100ae57600080fd5b506100b76104bb565b6040516100c49190610ad2565b60405180910390f35b3480156100d957600080fd5b506100e26104e1565b005b3480156100f057600080fd5b506100f96105fd565b6040516101069190610ad2565b60405180910390f35b34801561011b57600080fd5b50610124610623565b005b34801561013257600080fd5b5061013b6108f1565b6040516101489190610ad2565b60405180910390f35b600061015b610917565b81600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016101b79190610ad2565b602060405180830381865afa1580156101d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f89190610b02565b1015610239576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023090610bb2565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161029893929190610be1565b6020604051808303816000875af11580156102b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102db9190610c50565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2ed8c53866040518263ffffffff1660e01b81526004016103399190610c8c565b602060405180830381865afa158015610356573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037a9190610b02565b9050804710156103bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b690610d19565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166381b4e8b4838888886040518563ffffffff1660e01b815260040161042193929190610d39565b60206040518083038185885af115801561043f573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906104649190610d85565b9050848663ffffffff167f3406065a52b000854dbbeef7657250820ef51eff5126a10b91ed56430362699f838760405161049f929190610db2565b60405180910390a380925050506104b461095d565b9392505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610571576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056890610e4d565b60405180910390fd5b600047036105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ab90610eb9565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156105fa573d6000803e3d6000fd5b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106aa90610e4d565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107109190610ad2565b602060405180830381865afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107519190610b02565b03610791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078890610f25565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161084d9190610ad2565b602060405180830381865afa15801561086a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088e9190610b02565b6040518363ffffffff1660e01b81526004016108ab929190610f45565b6020604051808303816000875af11580156108ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ee9190610c50565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260005403610953576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b600080fd5b600063ffffffff82169050919050565b6109858161096c565b811461099057600080fd5b50565b6000813590506109a28161097c565b92915050565b6000819050919050565b6109bb816109a8565b81146109c657600080fd5b50565b6000813590506109d8816109b2565b92915050565b6000819050919050565b6109f1816109de565b81146109fc57600080fd5b50565b600081359050610a0e816109e8565b92915050565b600080600060608486031215610a2d57610a2c610967565b5b6000610a3b86828701610993565b9350506020610a4c868287016109c9565b9250506040610a5d868287016109ff565b9150509250925092565b610a70816109a8565b82525050565b6000602082019050610a8b6000830184610a67565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610abc82610a91565b9050919050565b610acc81610ab1565b82525050565b6000602082019050610ae76000830184610ac3565b92915050565b600081519050610afc816109e8565b92915050565b600060208284031215610b1857610b17610967565b5b6000610b2684828501610aed565b91505092915050565b600082825260208201905092915050565b7f496e73756666696369656e7420555344432062616c616e6365206f662073656e60008201527f6465722e00000000000000000000000000000000000000000000000000000000602082015250565b6000610b9c602483610b2f565b9150610ba782610b40565b604082019050919050565b60006020820190508181036000830152610bcb81610b8f565b9050919050565b610bdb816109de565b82525050565b6000606082019050610bf66000830186610ac3565b610c036020830185610ac3565b610c106040830184610bd2565b949350505050565b60008115159050919050565b610c2d81610c18565b8114610c3857600080fd5b50565b600081519050610c4a81610c24565b92915050565b600060208284031215610c6657610c65610967565b5b6000610c7484828501610c3b565b91505092915050565b610c868161096c565b82525050565b6000602082019050610ca16000830184610c7d565b92915050565b7f496e73756666696369656e74206e617469766520746f6b656e20666f7220676160008201527f7320696e7369646520636f6e74726163742e0000000000000000000000000000602082015250565b6000610d03603283610b2f565b9150610d0e82610ca7565b604082019050919050565b60006020820190508181036000830152610d3281610cf6565b9050919050565b6000606082019050610d4e6000830186610c7d565b610d5b6020830185610a67565b610d686040830184610bd2565b949350505050565b600081519050610d7f816109b2565b92915050565b600060208284031215610d9b57610d9a610967565b5b6000610da984828501610d70565b91505092915050565b6000604082019050610dc76000830185610a67565b610dd46020830184610bd2565b9392505050565b7f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b6000610e37602583610b2f565b9150610e4282610ddb565b604082019050919050565b60006020820190508181036000830152610e6681610e2a565b9050919050565b7f436f6e7472616374206861732030204e61746976652e00000000000000000000600082015250565b6000610ea3601683610b2f565b9150610eae82610e6d565b602082019050919050565b60006020820190508181036000830152610ed281610e96565b9050919050565b7f436f6e747261637420686173203020555344432e000000000000000000000000600082015250565b6000610f0f601483610b2f565b9150610f1a82610ed9565b602082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b6000604082019050610f5a6000830185610ac3565b610f676020830184610bd2565b939250505056fea264697066735822122024c019f48bf9a66da9ed6bab3fdf462e3be0860c3faa79dc71cceb981dddcdb464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x140F CODESIZE SUB DUP1 PUSH3 0x140F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x310 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH6 0x5AF3107A4000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x148 SWAP3 SWAP2 SWAP1 PUSH3 0x3BF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x168 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x18E SWAP2 SWAP1 PUSH3 0x429 JUMP JUMPDEST POP CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH6 0x5AF3107A4000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x257 SWAP3 SWAP2 SWAP1 PUSH3 0x3BF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x29D SWAP2 SWAP1 PUSH3 0x429 JUMP JUMPDEST POP POP POP PUSH3 0x45B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D8 DUP3 PUSH3 0x2AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2EA DUP2 PUSH3 0x2CB JUMP JUMPDEST DUP2 EQ PUSH3 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x30A DUP2 PUSH3 0x2DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x32A JUMPI PUSH3 0x329 PUSH3 0x2A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x33A DUP6 DUP3 DUP7 ADD PUSH3 0x2F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x34D DUP6 DUP3 DUP7 ADD PUSH3 0x2F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x362 DUP2 PUSH3 0x2CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x368 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3B9 DUP2 PUSH3 0x386 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x3D6 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x357 JUMP JUMPDEST PUSH3 0x3E5 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x3AE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x403 DUP2 PUSH3 0x3EC JUMP JUMPDEST DUP2 EQ PUSH3 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x423 DUP2 PUSH3 0x3F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x442 JUMPI PUSH3 0x441 PUSH3 0x2A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x452 DUP5 DUP3 DUP6 ADD PUSH3 0x412 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFA4 DUP1 PUSH3 0x46B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x17E46DA EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x2367117C EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x50431CE4 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0xD8FC063D EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xE9303209 EQ PUSH2 0x126 JUMPI PUSH2 0x60 JUMP JUMPDEST CALLDATASIZE PUSH2 0x60 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x87 SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB7 PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE2 PUSH2 0x4E1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF9 PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x623 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x15B PUSH2 0x917 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xB02 JUMP JUMPDEST LT ISZERO PUSH2 0x239 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x230 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF2ED8C53 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x356 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0xB02 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81B4E8B4 DUP4 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x421 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x464 SWAP2 SWAP1 PUSH2 0xD85 JUMP JUMPDEST SWAP1 POP DUP5 DUP7 PUSH4 0xFFFFFFFF AND PUSH32 0x3406065A52B000854DBBEEF7657250820EF51EFF5126A10B91ED56430362699F DUP4 DUP8 PUSH1 0x40 MLOAD PUSH2 0x49F SWAP3 SWAP2 SWAP1 PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP3 POP POP POP PUSH2 0x4B4 PUSH2 0x95D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x568 SWAP1 PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SUB PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AB SWAP1 PUSH2 0xEB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AA SWAP1 PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x710 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x72D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x751 SWAP2 SWAP1 PUSH2 0xB02 JUMP JUMPDEST SUB PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x788 SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84D SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x86A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88E SWAP2 SWAP1 PUSH2 0xB02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP3 SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x953 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x985 DUP2 PUSH2 0x96C JUMP JUMPDEST DUP2 EQ PUSH2 0x990 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9A2 DUP2 PUSH2 0x97C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9BB DUP2 PUSH2 0x9A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x9C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9D8 DUP2 PUSH2 0x9B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F1 DUP2 PUSH2 0x9DE JUMP JUMPDEST DUP2 EQ PUSH2 0x9FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA0E DUP2 PUSH2 0x9E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA2D JUMPI PUSH2 0xA2C PUSH2 0x967 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA3B DUP7 DUP3 DUP8 ADD PUSH2 0x993 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xA4C DUP7 DUP3 DUP8 ADD PUSH2 0x9C9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xA5D DUP7 DUP3 DUP8 ADD PUSH2 0x9FF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xA70 DUP2 PUSH2 0x9A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA8B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xABC DUP3 PUSH2 0xA91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xACC DUP2 PUSH2 0xAB1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAE7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xAFC DUP2 PUSH2 0x9E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB18 JUMPI PUSH2 0xB17 PUSH2 0x967 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB26 DUP5 DUP3 DUP6 ADD PUSH2 0xAED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420555344432062616C616E6365206F662073656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6465722E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB9C PUSH1 0x24 DUP4 PUSH2 0xB2F JUMP JUMPDEST SWAP2 POP PUSH2 0xBA7 DUP3 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBCB DUP2 PUSH2 0xB8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBDB DUP2 PUSH2 0x9DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xBF6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0xC03 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0xC10 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBD2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2D DUP2 PUSH2 0xC18 JUMP JUMPDEST DUP2 EQ PUSH2 0xC38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC4A DUP2 PUSH2 0xC24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC66 JUMPI PUSH2 0xC65 PUSH2 0x967 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC74 DUP5 DUP3 DUP6 ADD PUSH2 0xC3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC86 DUP2 PUSH2 0x96C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCA1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206E617469766520746F6B656E20666F72206761 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7320696E7369646520636F6E74726163742E0000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD03 PUSH1 0x32 DUP4 PUSH2 0xB2F JUMP JUMPDEST SWAP2 POP PUSH2 0xD0E DUP3 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD32 DUP2 PUSH2 0xCF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD4E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xC7D JUMP JUMPDEST PUSH2 0xD5B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0xD68 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBD2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD7F DUP2 PUSH2 0x9B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9B JUMPI PUSH2 0xD9A PUSH2 0x967 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDA9 DUP5 DUP3 DUP6 ADD PUSH2 0xD70 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDC7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0xDD4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBD2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6374696F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE37 PUSH1 0x25 DUP4 PUSH2 0xB2F JUMP JUMPDEST SWAP2 POP PUSH2 0xE42 DUP3 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE66 DUP2 PUSH2 0xE2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206861732030204E61746976652E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA3 PUSH1 0x16 DUP4 PUSH2 0xB2F JUMP JUMPDEST SWAP2 POP PUSH2 0xEAE DUP3 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xED2 DUP2 PUSH2 0xE96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E747261637420686173203020555344432E000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x14 DUP4 PUSH2 0xB2F JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xED9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF5A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0xF67 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBD2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xC0 NOT DELEGATECALL DUP12 0xF9 0xA6 PUSH14 0xA9ED6BAB3FDF462E3BE0860C3FAA PUSH26 0xDC71CCEB981DDDCDB464736F6C63430008140033000000000000 ","sourceMap":"1246:2447:13:-:0;;;1588:454;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1746:1:14;1961:7;:21;;;;1672:12:13;1658:11;;:26;;;;;;;;;;;;;;;;;;1713:16;1695:15;;:34;;;;;;;;;;;;;;;;;;1747:11;;;;;;;;;;;1740:27;;;1768:15;;;;;;;;;;;1785:11;1740:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1876:10;1868:5;;:18;;;;;;;;;;;;;;;;;;1904:11;;;;;;;;;;;1897:27;;;1925:5;;;;;;;;;;;1932:11;1897:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1588:454;;1246:2447;;88:117:15;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:99::-;1541:7;1570:5;1559:16;;1482:99;;;:::o;1587:77::-;1624:7;1653:5;1642:16;;1587:77;;;:::o;1670:60::-;1698:3;1719:5;1712:12;;1670:60;;;:::o;1736:186::-;1808:9;1841:75;1859:56;1868:46;1908:5;1868:46;:::i;:::-;1859:56;:::i;:::-;1841:75;:::i;:::-;1828:88;;1736:186;;;:::o;1928:175::-;2037:59;2090:5;2037:59;:::i;:::-;2032:3;2025:72;1928:175;;:::o;2109:376::-;2252:4;2290:2;2279:9;2275:18;2267:26;;2303:71;2371:1;2360:9;2356:17;2347:6;2303:71;:::i;:::-;2384:94;2474:2;2463:9;2459:18;2450:6;2384:94;:::i;:::-;2109:376;;;;;:::o;2491:90::-;2525:7;2568:5;2561:13;2554:21;2543:32;;2491:90;;;:::o;2587:116::-;2657:21;2672:5;2657:21;:::i;:::-;2650:5;2647:32;2637:60;;2693:1;2690;2683:12;2637:60;2587:116;:::o;2709:137::-;2763:5;2794:6;2788:13;2779:22;;2810:30;2834:5;2810:30;:::i;:::-;2709:137;;;;:::o;2852:345::-;2919:6;2968:2;2956:9;2947:7;2943:23;2939:32;2936:119;;;2974:79;;:::i;:::-;2936:119;3094:1;3119:61;3172:7;3163:6;3152:9;3148:22;3119:61;:::i;:::-;3109:71;;3065:125;2852:345;;;;:::o;1246:2447:13:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@HypERC20Address_3856":{"entryPoint":1211,"id":3856,"parameterSlots":0,"returnSlots":0},"@USDCAddress_3854":{"entryPoint":2289,"id":3854,"parameterSlots":0,"returnSlots":0},"@_3909":{"entryPoint":null,"id":3909,"parameterSlots":0,"returnSlots":0},"@_nonReentrantAfter_4128":{"entryPoint":2397,"id":4128,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_4120":{"entryPoint":2327,"id":4120,"parameterSlots":0,"returnSlots":0},"@owner_3858":{"entryPoint":1533,"id":3858,"parameterSlots":0,"returnSlots":0},"@transferXchainHypERC20_3991":{"entryPoint":337,"id":3991,"parameterSlots":3,"returnSlots":1},"@withdrawNative_4058":{"entryPoint":1249,"id":4058,"parameterSlots":0,"returnSlots":0},"@withdrawUSDC_4028":{"entryPoint":1571,"id":4028,"parameterSlots":0,"returnSlots":0},"abi_decode_t_bool_fromMemory":{"entryPoint":3131,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":2505,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":3440,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2559,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":2797,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":2451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":3152,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":3461,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2818,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32t_bytes32t_uint256":{"entryPoint":2580,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2755,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2663,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face_to_t_string_memory_ptr_fromStack":{"entryPoint":3626,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5bee079997ec03d02c333bc7aa74a2c8aad9f558acd5ab4f032e924bd7641300_to_t_string_memory_ptr_fromStack":{"entryPoint":3318,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6156b7478067a806b822f2dac38b378fc08dd0988eb91af8714c555c87825340_to_t_string_memory_ptr_fromStack":{"entryPoint":2959,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8351050d490c2f964a5c9b846a717b6fb712e0fef8f883329c0d18f6cb70985f_to_t_string_memory_ptr_fromStack":{"entryPoint":3734,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9492a9f385a959155fd9b4423d2438daa6931aa4114947339a758d0e394aa707_to_t_string_memory_ptr_fromStack":{"entryPoint":3842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3026,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":3197,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2770,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":3041,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":3909,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":2678,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed":{"entryPoint":3506,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3661,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5bee079997ec03d02c333bc7aa74a2c8aad9f558acd5ab4f032e924bd7641300__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3353,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6156b7478067a806b822f2dac38b378fc08dd0988eb91af8714c555c87825340__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2994,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8351050d490c2f964a5c9b846a717b6fb712e0fef8f883329c0d18f6cb70985f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3769,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9492a9f385a959155fd9b4423d2438daa6931aa4114947339a758d0e394aa707__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":3212,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32_t_bytes32_t_uint256__to_t_uint32_t_bytes32_t_uint256__fromStack_reversed":{"entryPoint":3385,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2863,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2737,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3096,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2472,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2705,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2526,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":2412,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2407,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face":{"entryPoint":3547,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5bee079997ec03d02c333bc7aa74a2c8aad9f558acd5ab4f032e924bd7641300":{"entryPoint":3239,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6156b7478067a806b822f2dac38b378fc08dd0988eb91af8714c555c87825340":{"entryPoint":2880,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8351050d490c2f964a5c9b846a717b6fb712e0fef8f883329c0d18f6cb70985f":{"entryPoint":3693,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9492a9f385a959155fd9b4423d2438daa6931aa4114947339a758d0e394aa707":{"entryPoint":3801,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":3108,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":2482,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2536,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":2428,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11949:15","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:15","statements":[{"nodeType":"YulAssignment","src":"57:19:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:15"},"nodeType":"YulFunctionCall","src":"67:9:15"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:15"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:15","type":""}],"src":"7:75:15"},{"body":{"nodeType":"YulBlock","src":"177:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:15"},"nodeType":"YulFunctionCall","src":"187:12:15"},"nodeType":"YulExpressionStatement","src":"187:12:15"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:15"},{"body":{"nodeType":"YulBlock","src":"300:28:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:15"},"nodeType":"YulFunctionCall","src":"310:12:15"},"nodeType":"YulExpressionStatement","src":"310:12:15"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:15"},{"body":{"nodeType":"YulBlock","src":"378:49:15","statements":[{"nodeType":"YulAssignment","src":"388:33:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"410:10:15","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:15"},"nodeType":"YulFunctionCall","src":"399:22:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:15"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:15","type":""}],"src":"334:93:15"},{"body":{"nodeType":"YulBlock","src":"475:78:15","statements":[{"body":{"nodeType":"YulBlock","src":"531:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"540:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"543:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"533:6:15"},"nodeType":"YulFunctionCall","src":"533:12:15"},"nodeType":"YulExpressionStatement","src":"533:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"498:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"522:5:15"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"505:16:15"},"nodeType":"YulFunctionCall","src":"505:23:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"495:2:15"},"nodeType":"YulFunctionCall","src":"495:34:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"488:6:15"},"nodeType":"YulFunctionCall","src":"488:42:15"},"nodeType":"YulIf","src":"485:62:15"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"468:5:15","type":""}],"src":"433:120:15"},{"body":{"nodeType":"YulBlock","src":"610:86:15","statements":[{"nodeType":"YulAssignment","src":"620:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"642:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"629:12:15"},"nodeType":"YulFunctionCall","src":"629:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"620:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"684:5:15"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"658:25:15"},"nodeType":"YulFunctionCall","src":"658:32:15"},"nodeType":"YulExpressionStatement","src":"658:32:15"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"588:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"596:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"604:5:15","type":""}],"src":"559:137:15"},{"body":{"nodeType":"YulBlock","src":"747:32:15","statements":[{"nodeType":"YulAssignment","src":"757:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"768:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"757:7:15"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"729:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"739:7:15","type":""}],"src":"702:77:15"},{"body":{"nodeType":"YulBlock","src":"828:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"885:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"894:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"897:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"887:6:15"},"nodeType":"YulFunctionCall","src":"887:12:15"},"nodeType":"YulExpressionStatement","src":"887:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"851:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"876:5:15"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"858:17:15"},"nodeType":"YulFunctionCall","src":"858:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"848:2:15"},"nodeType":"YulFunctionCall","src":"848:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"841:6:15"},"nodeType":"YulFunctionCall","src":"841:43:15"},"nodeType":"YulIf","src":"838:63:15"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"821:5:15","type":""}],"src":"785:122:15"},{"body":{"nodeType":"YulBlock","src":"965:87:15","statements":[{"nodeType":"YulAssignment","src":"975:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"997:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"984:12:15"},"nodeType":"YulFunctionCall","src":"984:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"975:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1040:5:15"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1013:26:15"},"nodeType":"YulFunctionCall","src":"1013:33:15"},"nodeType":"YulExpressionStatement","src":"1013:33:15"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"943:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"951:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"959:5:15","type":""}],"src":"913:139:15"},{"body":{"nodeType":"YulBlock","src":"1103:32:15","statements":[{"nodeType":"YulAssignment","src":"1113:16:15","value":{"name":"value","nodeType":"YulIdentifier","src":"1124:5:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1113:7:15"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1085:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1095:7:15","type":""}],"src":"1058:77:15"},{"body":{"nodeType":"YulBlock","src":"1184:79:15","statements":[{"body":{"nodeType":"YulBlock","src":"1241:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1250:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1253:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1243:6:15"},"nodeType":"YulFunctionCall","src":"1243:12:15"},"nodeType":"YulExpressionStatement","src":"1243:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1207:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1232:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1214:17:15"},"nodeType":"YulFunctionCall","src":"1214:24:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1204:2:15"},"nodeType":"YulFunctionCall","src":"1204:35:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1197:6:15"},"nodeType":"YulFunctionCall","src":"1197:43:15"},"nodeType":"YulIf","src":"1194:63:15"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1177:5:15","type":""}],"src":"1141:122:15"},{"body":{"nodeType":"YulBlock","src":"1321:87:15","statements":[{"nodeType":"YulAssignment","src":"1331:29:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1340:12:15"},"nodeType":"YulFunctionCall","src":"1340:20:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1331:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1396:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1369:26:15"},"nodeType":"YulFunctionCall","src":"1369:33:15"},"nodeType":"YulExpressionStatement","src":"1369:33:15"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1299:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"1307:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1315:5:15","type":""}],"src":"1269:139:15"},{"body":{"nodeType":"YulBlock","src":"1513:518:15","statements":[{"body":{"nodeType":"YulBlock","src":"1559:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1561:77:15"},"nodeType":"YulFunctionCall","src":"1561:79:15"},"nodeType":"YulExpressionStatement","src":"1561:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1534:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1543:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1530:3:15"},"nodeType":"YulFunctionCall","src":"1530:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1555:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1526:3:15"},"nodeType":"YulFunctionCall","src":"1526:32:15"},"nodeType":"YulIf","src":"1523:119:15"},{"nodeType":"YulBlock","src":"1652:116:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1667:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1681:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1671:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1696:62:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1730:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1741:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1726:3:15"},"nodeType":"YulFunctionCall","src":"1726:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1750:7:15"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"1706:19:15"},"nodeType":"YulFunctionCall","src":"1706:52:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1696:6:15"}]}]},{"nodeType":"YulBlock","src":"1778:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1793:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1807:2:15","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1797:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1823:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1858:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1869:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1854:3:15"},"nodeType":"YulFunctionCall","src":"1854:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1878:7:15"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"1833:20:15"},"nodeType":"YulFunctionCall","src":"1833:53:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1823:6:15"}]}]},{"nodeType":"YulBlock","src":"1906:118:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1921:16:15","value":{"kind":"number","nodeType":"YulLiteral","src":"1935:2:15","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1925:6:15","type":""}]},{"nodeType":"YulAssignment","src":"1951:63:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1986:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1997:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1982:3:15"},"nodeType":"YulFunctionCall","src":"1982:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2006:7:15"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1961:20:15"},"nodeType":"YulFunctionCall","src":"1961:53:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1951:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint32t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1467:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1478:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1490:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1498:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1506:6:15","type":""}],"src":"1414:617:15"},{"body":{"nodeType":"YulBlock","src":"2102:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2119:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2142:5:15"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2124:17:15"},"nodeType":"YulFunctionCall","src":"2124:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:15"},"nodeType":"YulFunctionCall","src":"2112:37:15"},"nodeType":"YulExpressionStatement","src":"2112:37:15"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2090:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2097:3:15","type":""}],"src":"2037:118:15"},{"body":{"nodeType":"YulBlock","src":"2259:124:15","statements":[{"nodeType":"YulAssignment","src":"2269:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2281:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2292:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2277:3:15"},"nodeType":"YulFunctionCall","src":"2277:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2269:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2349:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2362:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2373:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2358:3:15"},"nodeType":"YulFunctionCall","src":"2358:17:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"2305:43:15"},"nodeType":"YulFunctionCall","src":"2305:71:15"},"nodeType":"YulExpressionStatement","src":"2305:71:15"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2231:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2243:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2254:4:15","type":""}],"src":"2161:222:15"},{"body":{"nodeType":"YulBlock","src":"2434:81:15","statements":[{"nodeType":"YulAssignment","src":"2444:65:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2459:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"2466:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2455:3:15"},"nodeType":"YulFunctionCall","src":"2455:54:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2444:7:15"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2416:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2426:7:15","type":""}],"src":"2389:126:15"},{"body":{"nodeType":"YulBlock","src":"2566:51:15","statements":[{"nodeType":"YulAssignment","src":"2576:35:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2605:5:15"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2587:17:15"},"nodeType":"YulFunctionCall","src":"2587:24:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2576:7:15"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2548:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2558:7:15","type":""}],"src":"2521:96:15"},{"body":{"nodeType":"YulBlock","src":"2688:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2705:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2728:5:15"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2710:17:15"},"nodeType":"YulFunctionCall","src":"2710:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2698:6:15"},"nodeType":"YulFunctionCall","src":"2698:37:15"},"nodeType":"YulExpressionStatement","src":"2698:37:15"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2676:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2683:3:15","type":""}],"src":"2623:118:15"},{"body":{"nodeType":"YulBlock","src":"2845:124:15","statements":[{"nodeType":"YulAssignment","src":"2855:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2867:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2878:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2863:3:15"},"nodeType":"YulFunctionCall","src":"2863:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2855:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2935:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2948:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2944:3:15"},"nodeType":"YulFunctionCall","src":"2944:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2891:43:15"},"nodeType":"YulFunctionCall","src":"2891:71:15"},"nodeType":"YulExpressionStatement","src":"2891:71:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2817:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2829:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2840:4:15","type":""}],"src":"2747:222:15"},{"body":{"nodeType":"YulBlock","src":"3038:80:15","statements":[{"nodeType":"YulAssignment","src":"3048:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3063:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3057:5:15"},"nodeType":"YulFunctionCall","src":"3057:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3048:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3106:5:15"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3079:26:15"},"nodeType":"YulFunctionCall","src":"3079:33:15"},"nodeType":"YulExpressionStatement","src":"3079:33:15"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3016:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"3024:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3032:5:15","type":""}],"src":"2975:143:15"},{"body":{"nodeType":"YulBlock","src":"3201:274:15","statements":[{"body":{"nodeType":"YulBlock","src":"3247:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3249:77:15"},"nodeType":"YulFunctionCall","src":"3249:79:15"},"nodeType":"YulExpressionStatement","src":"3249:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3222:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3218:3:15"},"nodeType":"YulFunctionCall","src":"3218:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3214:3:15"},"nodeType":"YulFunctionCall","src":"3214:32:15"},"nodeType":"YulIf","src":"3211:119:15"},{"nodeType":"YulBlock","src":"3340:128:15","statements":[{"nodeType":"YulVariableDeclaration","src":"3355:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"3369:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3359:6:15","type":""}]},{"nodeType":"YulAssignment","src":"3384:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3430:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3441:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3426:3:15"},"nodeType":"YulFunctionCall","src":"3426:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3450:7:15"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3394:31:15"},"nodeType":"YulFunctionCall","src":"3394:64:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3384:6:15"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3171:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3182:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3194:6:15","type":""}],"src":"3124:351:15"},{"body":{"nodeType":"YulBlock","src":"3577:73:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3594:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"3599:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3587:6:15"},"nodeType":"YulFunctionCall","src":"3587:19:15"},"nodeType":"YulExpressionStatement","src":"3587:19:15"},{"nodeType":"YulAssignment","src":"3615:29:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3634:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"3639:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3630:3:15"},"nodeType":"YulFunctionCall","src":"3630:14:15"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3615:11:15"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3549:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"3554:6:15","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3565:11:15","type":""}],"src":"3481:169:15"},{"body":{"nodeType":"YulBlock","src":"3762:117:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3784:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3792:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3780:3:15"},"nodeType":"YulFunctionCall","src":"3780:14:15"},{"hexValue":"496e73756666696369656e7420555344432062616c616e6365206f662073656e","kind":"string","nodeType":"YulLiteral","src":"3796:34:15","type":"","value":"Insufficient USDC balance of sen"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3773:6:15"},"nodeType":"YulFunctionCall","src":"3773:58:15"},"nodeType":"YulExpressionStatement","src":"3773:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3852:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3860:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3848:3:15"},"nodeType":"YulFunctionCall","src":"3848:15:15"},{"hexValue":"6465722e","kind":"string","nodeType":"YulLiteral","src":"3865:6:15","type":"","value":"der."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3841:6:15"},"nodeType":"YulFunctionCall","src":"3841:31:15"},"nodeType":"YulExpressionStatement","src":"3841:31:15"}]},"name":"store_literal_in_memory_6156b7478067a806b822f2dac38b378fc08dd0988eb91af8714c555c87825340","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3754:6:15","type":""}],"src":"3656:223:15"},{"body":{"nodeType":"YulBlock","src":"4031:220:15","statements":[{"nodeType":"YulAssignment","src":"4041:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4107:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4112:2:15","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4048:58:15"},"nodeType":"YulFunctionCall","src":"4048:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4041:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4213:3:15"}],"functionName":{"name":"store_literal_in_memory_6156b7478067a806b822f2dac38b378fc08dd0988eb91af8714c555c87825340","nodeType":"YulIdentifier","src":"4124:88:15"},"nodeType":"YulFunctionCall","src":"4124:93:15"},"nodeType":"YulExpressionStatement","src":"4124:93:15"},{"nodeType":"YulAssignment","src":"4226:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4237:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4242:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4233:3:15"},"nodeType":"YulFunctionCall","src":"4233:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4226:3:15"}]}]},"name":"abi_encode_t_stringliteral_6156b7478067a806b822f2dac38b378fc08dd0988eb91af8714c555c87825340_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4019:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4027:3:15","type":""}],"src":"3885:366:15"},{"body":{"nodeType":"YulBlock","src":"4428:248:15","statements":[{"nodeType":"YulAssignment","src":"4438:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4450:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4461:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4446:3:15"},"nodeType":"YulFunctionCall","src":"4446:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4438:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4485:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4496:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4481:3:15"},"nodeType":"YulFunctionCall","src":"4481:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4504:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"4510:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4500:3:15"},"nodeType":"YulFunctionCall","src":"4500:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4474:6:15"},"nodeType":"YulFunctionCall","src":"4474:47:15"},"nodeType":"YulExpressionStatement","src":"4474:47:15"},{"nodeType":"YulAssignment","src":"4530:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4664:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_6156b7478067a806b822f2dac38b378fc08dd0988eb91af8714c555c87825340_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4538:124:15"},"nodeType":"YulFunctionCall","src":"4538:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4530:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_6156b7478067a806b822f2dac38b378fc08dd0988eb91af8714c555c87825340__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4408:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4423:4:15","type":""}],"src":"4257:419:15"},{"body":{"nodeType":"YulBlock","src":"4747:53:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4764:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4787:5:15"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4769:17:15"},"nodeType":"YulFunctionCall","src":"4769:24:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4757:6:15"},"nodeType":"YulFunctionCall","src":"4757:37:15"},"nodeType":"YulExpressionStatement","src":"4757:37:15"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4735:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4742:3:15","type":""}],"src":"4682:118:15"},{"body":{"nodeType":"YulBlock","src":"4960:288:15","statements":[{"nodeType":"YulAssignment","src":"4970:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4982:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4993:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4978:3:15"},"nodeType":"YulFunctionCall","src":"4978:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4970:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5050:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5063:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5074:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5059:3:15"},"nodeType":"YulFunctionCall","src":"5059:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5006:43:15"},"nodeType":"YulFunctionCall","src":"5006:71:15"},"nodeType":"YulExpressionStatement","src":"5006:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5131:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5144:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5155:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5140:3:15"},"nodeType":"YulFunctionCall","src":"5140:18:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5087:43:15"},"nodeType":"YulFunctionCall","src":"5087:72:15"},"nodeType":"YulExpressionStatement","src":"5087:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5213:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5226:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5237:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5222:3:15"},"nodeType":"YulFunctionCall","src":"5222:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5169:43:15"},"nodeType":"YulFunctionCall","src":"5169:72:15"},"nodeType":"YulExpressionStatement","src":"5169:72:15"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4916:9:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4928:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4936:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4944:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4955:4:15","type":""}],"src":"4806:442:15"},{"body":{"nodeType":"YulBlock","src":"5296:48:15","statements":[{"nodeType":"YulAssignment","src":"5306:32:15","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5331:5:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5324:6:15"},"nodeType":"YulFunctionCall","src":"5324:13:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5317:6:15"},"nodeType":"YulFunctionCall","src":"5317:21:15"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5306:7:15"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5278:5:15","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5288:7:15","type":""}],"src":"5254:90:15"},{"body":{"nodeType":"YulBlock","src":"5390:76:15","statements":[{"body":{"nodeType":"YulBlock","src":"5444:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5453:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5456:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5446:6:15"},"nodeType":"YulFunctionCall","src":"5446:12:15"},"nodeType":"YulExpressionStatement","src":"5446:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5413:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5435:5:15"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5420:14:15"},"nodeType":"YulFunctionCall","src":"5420:21:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5410:2:15"},"nodeType":"YulFunctionCall","src":"5410:32:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5403:6:15"},"nodeType":"YulFunctionCall","src":"5403:40:15"},"nodeType":"YulIf","src":"5400:60:15"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5383:5:15","type":""}],"src":"5350:116:15"},{"body":{"nodeType":"YulBlock","src":"5532:77:15","statements":[{"nodeType":"YulAssignment","src":"5542:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5557:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5551:5:15"},"nodeType":"YulFunctionCall","src":"5551:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5542:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5597:5:15"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"5573:23:15"},"nodeType":"YulFunctionCall","src":"5573:30:15"},"nodeType":"YulExpressionStatement","src":"5573:30:15"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5510:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"5518:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5526:5:15","type":""}],"src":"5472:137:15"},{"body":{"nodeType":"YulBlock","src":"5689:271:15","statements":[{"body":{"nodeType":"YulBlock","src":"5735:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5737:77:15"},"nodeType":"YulFunctionCall","src":"5737:79:15"},"nodeType":"YulExpressionStatement","src":"5737:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5710:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5719:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5706:3:15"},"nodeType":"YulFunctionCall","src":"5706:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"5731:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5702:3:15"},"nodeType":"YulFunctionCall","src":"5702:32:15"},"nodeType":"YulIf","src":"5699:119:15"},{"nodeType":"YulBlock","src":"5828:125:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5843:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"5857:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5847:6:15","type":""}]},{"nodeType":"YulAssignment","src":"5872:71:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5915:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5926:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5911:3:15"},"nodeType":"YulFunctionCall","src":"5911:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5935:7:15"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"5882:28:15"},"nodeType":"YulFunctionCall","src":"5882:61:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5872:6:15"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5659:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5670:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5682:6:15","type":""}],"src":"5615:345:15"},{"body":{"nodeType":"YulBlock","src":"6029:52:15","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6046:3:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6068:5:15"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"6051:16:15"},"nodeType":"YulFunctionCall","src":"6051:23:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6039:6:15"},"nodeType":"YulFunctionCall","src":"6039:36:15"},"nodeType":"YulExpressionStatement","src":"6039:36:15"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6017:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6024:3:15","type":""}],"src":"5966:115:15"},{"body":{"nodeType":"YulBlock","src":"6183:122:15","statements":[{"nodeType":"YulAssignment","src":"6193:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6205:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6216:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6201:3:15"},"nodeType":"YulFunctionCall","src":"6201:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6193:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6271:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6284:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6295:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6280:3:15"},"nodeType":"YulFunctionCall","src":"6280:17:15"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"6229:41:15"},"nodeType":"YulFunctionCall","src":"6229:69:15"},"nodeType":"YulExpressionStatement","src":"6229:69:15"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6155:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6167:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6178:4:15","type":""}],"src":"6087:218:15"},{"body":{"nodeType":"YulBlock","src":"6417:131:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6439:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"6447:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6435:3:15"},"nodeType":"YulFunctionCall","src":"6435:14:15"},{"hexValue":"496e73756666696369656e74206e617469766520746f6b656e20666f72206761","kind":"string","nodeType":"YulLiteral","src":"6451:34:15","type":"","value":"Insufficient native token for ga"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6428:6:15"},"nodeType":"YulFunctionCall","src":"6428:58:15"},"nodeType":"YulExpressionStatement","src":"6428:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6507:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"6515:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6503:3:15"},"nodeType":"YulFunctionCall","src":"6503:15:15"},{"hexValue":"7320696e7369646520636f6e74726163742e","kind":"string","nodeType":"YulLiteral","src":"6520:20:15","type":"","value":"s inside contract."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6496:6:15"},"nodeType":"YulFunctionCall","src":"6496:45:15"},"nodeType":"YulExpressionStatement","src":"6496:45:15"}]},"name":"store_literal_in_memory_5bee079997ec03d02c333bc7aa74a2c8aad9f558acd5ab4f032e924bd7641300","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6409:6:15","type":""}],"src":"6311:237:15"},{"body":{"nodeType":"YulBlock","src":"6700:220:15","statements":[{"nodeType":"YulAssignment","src":"6710:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6776:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6781:2:15","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6717:58:15"},"nodeType":"YulFunctionCall","src":"6717:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6710:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6882:3:15"}],"functionName":{"name":"store_literal_in_memory_5bee079997ec03d02c333bc7aa74a2c8aad9f558acd5ab4f032e924bd7641300","nodeType":"YulIdentifier","src":"6793:88:15"},"nodeType":"YulFunctionCall","src":"6793:93:15"},"nodeType":"YulExpressionStatement","src":"6793:93:15"},{"nodeType":"YulAssignment","src":"6895:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6906:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"6911:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6902:3:15"},"nodeType":"YulFunctionCall","src":"6902:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6895:3:15"}]}]},"name":"abi_encode_t_stringliteral_5bee079997ec03d02c333bc7aa74a2c8aad9f558acd5ab4f032e924bd7641300_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6688:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6696:3:15","type":""}],"src":"6554:366:15"},{"body":{"nodeType":"YulBlock","src":"7097:248:15","statements":[{"nodeType":"YulAssignment","src":"7107:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7119:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7130:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7115:3:15"},"nodeType":"YulFunctionCall","src":"7115:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7107:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7154:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7165:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7150:3:15"},"nodeType":"YulFunctionCall","src":"7150:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7173:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"7179:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7169:3:15"},"nodeType":"YulFunctionCall","src":"7169:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7143:6:15"},"nodeType":"YulFunctionCall","src":"7143:47:15"},"nodeType":"YulExpressionStatement","src":"7143:47:15"},{"nodeType":"YulAssignment","src":"7199:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7333:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_5bee079997ec03d02c333bc7aa74a2c8aad9f558acd5ab4f032e924bd7641300_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7207:124:15"},"nodeType":"YulFunctionCall","src":"7207:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7199:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_5bee079997ec03d02c333bc7aa74a2c8aad9f558acd5ab4f032e924bd7641300__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7077:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7092:4:15","type":""}],"src":"6926:419:15"},{"body":{"nodeType":"YulBlock","src":"7503:286:15","statements":[{"nodeType":"YulAssignment","src":"7513:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7525:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7536:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7521:3:15"},"nodeType":"YulFunctionCall","src":"7521:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7513:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7591:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7604:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7615:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7600:3:15"},"nodeType":"YulFunctionCall","src":"7600:17:15"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"7549:41:15"},"nodeType":"YulFunctionCall","src":"7549:69:15"},"nodeType":"YulExpressionStatement","src":"7549:69:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7672:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7685:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7681:3:15"},"nodeType":"YulFunctionCall","src":"7681:18:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"7628:43:15"},"nodeType":"YulFunctionCall","src":"7628:72:15"},"nodeType":"YulExpressionStatement","src":"7628:72:15"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7754:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7767:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7778:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7763:3:15"},"nodeType":"YulFunctionCall","src":"7763:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7710:43:15"},"nodeType":"YulFunctionCall","src":"7710:72:15"},"nodeType":"YulExpressionStatement","src":"7710:72:15"}]},"name":"abi_encode_tuple_t_uint32_t_bytes32_t_uint256__to_t_uint32_t_bytes32_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7459:9:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7471:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7479:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7487:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7498:4:15","type":""}],"src":"7351:438:15"},{"body":{"nodeType":"YulBlock","src":"7858:80:15","statements":[{"nodeType":"YulAssignment","src":"7868:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7883:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7877:5:15"},"nodeType":"YulFunctionCall","src":"7877:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7868:5:15"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7926:5:15"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"7899:26:15"},"nodeType":"YulFunctionCall","src":"7899:33:15"},"nodeType":"YulExpressionStatement","src":"7899:33:15"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7836:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"7844:3:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7852:5:15","type":""}],"src":"7795:143:15"},{"body":{"nodeType":"YulBlock","src":"8021:274:15","statements":[{"body":{"nodeType":"YulBlock","src":"8067:83:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8069:77:15"},"nodeType":"YulFunctionCall","src":"8069:79:15"},"nodeType":"YulExpressionStatement","src":"8069:79:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8042:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"8051:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8038:3:15"},"nodeType":"YulFunctionCall","src":"8038:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"8063:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8034:3:15"},"nodeType":"YulFunctionCall","src":"8034:32:15"},"nodeType":"YulIf","src":"8031:119:15"},{"nodeType":"YulBlock","src":"8160:128:15","statements":[{"nodeType":"YulVariableDeclaration","src":"8175:15:15","value":{"kind":"number","nodeType":"YulLiteral","src":"8189:1:15","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8179:6:15","type":""}]},{"nodeType":"YulAssignment","src":"8204:74:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8250:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"8261:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8246:3:15"},"nodeType":"YulFunctionCall","src":"8246:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8270:7:15"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"8214:31:15"},"nodeType":"YulFunctionCall","src":"8214:64:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8204:6:15"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7991:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8002:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8014:6:15","type":""}],"src":"7944:351:15"},{"body":{"nodeType":"YulBlock","src":"8427:206:15","statements":[{"nodeType":"YulAssignment","src":"8437:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8449:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8460:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8445:3:15"},"nodeType":"YulFunctionCall","src":"8445:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8437:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8517:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8530:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8541:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8526:3:15"},"nodeType":"YulFunctionCall","src":"8526:17:15"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"8473:43:15"},"nodeType":"YulFunctionCall","src":"8473:71:15"},"nodeType":"YulExpressionStatement","src":"8473:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8598:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8611:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8622:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8607:3:15"},"nodeType":"YulFunctionCall","src":"8607:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8554:43:15"},"nodeType":"YulFunctionCall","src":"8554:72:15"},"nodeType":"YulExpressionStatement","src":"8554:72:15"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8391:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8403:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8411:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8422:4:15","type":""}],"src":"8301:332:15"},{"body":{"nodeType":"YulBlock","src":"8745:118:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8767:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8775:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8763:3:15"},"nodeType":"YulFunctionCall","src":"8763:14:15"},{"hexValue":"4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e","kind":"string","nodeType":"YulLiteral","src":"8779:34:15","type":"","value":"Only the owner can call this fun"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8756:6:15"},"nodeType":"YulFunctionCall","src":"8756:58:15"},"nodeType":"YulExpressionStatement","src":"8756:58:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8835:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"8843:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8831:3:15"},"nodeType":"YulFunctionCall","src":"8831:15:15"},{"hexValue":"6374696f6e","kind":"string","nodeType":"YulLiteral","src":"8848:7:15","type":"","value":"ction"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8824:6:15"},"nodeType":"YulFunctionCall","src":"8824:32:15"},"nodeType":"YulExpressionStatement","src":"8824:32:15"}]},"name":"store_literal_in_memory_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8737:6:15","type":""}],"src":"8639:224:15"},{"body":{"nodeType":"YulBlock","src":"9015:220:15","statements":[{"nodeType":"YulAssignment","src":"9025:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9091:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9096:2:15","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9032:58:15"},"nodeType":"YulFunctionCall","src":"9032:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9025:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9197:3:15"}],"functionName":{"name":"store_literal_in_memory_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face","nodeType":"YulIdentifier","src":"9108:88:15"},"nodeType":"YulFunctionCall","src":"9108:93:15"},"nodeType":"YulExpressionStatement","src":"9108:93:15"},{"nodeType":"YulAssignment","src":"9210:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9221:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"9226:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9217:3:15"},"nodeType":"YulFunctionCall","src":"9217:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9210:3:15"}]}]},"name":"abi_encode_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9003:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9011:3:15","type":""}],"src":"8869:366:15"},{"body":{"nodeType":"YulBlock","src":"9412:248:15","statements":[{"nodeType":"YulAssignment","src":"9422:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9434:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9445:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9430:3:15"},"nodeType":"YulFunctionCall","src":"9430:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9422:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9469:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9480:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9465:3:15"},"nodeType":"YulFunctionCall","src":"9465:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"9494:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9484:3:15"},"nodeType":"YulFunctionCall","src":"9484:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9458:6:15"},"nodeType":"YulFunctionCall","src":"9458:47:15"},"nodeType":"YulExpressionStatement","src":"9458:47:15"},{"nodeType":"YulAssignment","src":"9514:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9648:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9522:124:15"},"nodeType":"YulFunctionCall","src":"9522:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9514:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9392:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9407:4:15","type":""}],"src":"9241:419:15"},{"body":{"nodeType":"YulBlock","src":"9772:66:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9794:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"9802:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9790:3:15"},"nodeType":"YulFunctionCall","src":"9790:14:15"},{"hexValue":"436f6e7472616374206861732030204e61746976652e","kind":"string","nodeType":"YulLiteral","src":"9806:24:15","type":"","value":"Contract has 0 Native."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9783:6:15"},"nodeType":"YulFunctionCall","src":"9783:48:15"},"nodeType":"YulExpressionStatement","src":"9783:48:15"}]},"name":"store_literal_in_memory_8351050d490c2f964a5c9b846a717b6fb712e0fef8f883329c0d18f6cb70985f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9764:6:15","type":""}],"src":"9666:172:15"},{"body":{"nodeType":"YulBlock","src":"9990:220:15","statements":[{"nodeType":"YulAssignment","src":"10000:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10066:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10071:2:15","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10007:58:15"},"nodeType":"YulFunctionCall","src":"10007:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10000:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10172:3:15"}],"functionName":{"name":"store_literal_in_memory_8351050d490c2f964a5c9b846a717b6fb712e0fef8f883329c0d18f6cb70985f","nodeType":"YulIdentifier","src":"10083:88:15"},"nodeType":"YulFunctionCall","src":"10083:93:15"},"nodeType":"YulExpressionStatement","src":"10083:93:15"},{"nodeType":"YulAssignment","src":"10185:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10196:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"10201:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10192:3:15"},"nodeType":"YulFunctionCall","src":"10192:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10185:3:15"}]}]},"name":"abi_encode_t_stringliteral_8351050d490c2f964a5c9b846a717b6fb712e0fef8f883329c0d18f6cb70985f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9978:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9986:3:15","type":""}],"src":"9844:366:15"},{"body":{"nodeType":"YulBlock","src":"10387:248:15","statements":[{"nodeType":"YulAssignment","src":"10397:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10409:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10420:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10405:3:15"},"nodeType":"YulFunctionCall","src":"10405:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10397:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10444:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10455:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10440:3:15"},"nodeType":"YulFunctionCall","src":"10440:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10463:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"10469:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10459:3:15"},"nodeType":"YulFunctionCall","src":"10459:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10433:6:15"},"nodeType":"YulFunctionCall","src":"10433:47:15"},"nodeType":"YulExpressionStatement","src":"10433:47:15"},{"nodeType":"YulAssignment","src":"10489:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10623:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_8351050d490c2f964a5c9b846a717b6fb712e0fef8f883329c0d18f6cb70985f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10497:124:15"},"nodeType":"YulFunctionCall","src":"10497:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10489:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_8351050d490c2f964a5c9b846a717b6fb712e0fef8f883329c0d18f6cb70985f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10367:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10382:4:15","type":""}],"src":"10216:419:15"},{"body":{"nodeType":"YulBlock","src":"10747:64:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10769:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"10777:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10765:3:15"},"nodeType":"YulFunctionCall","src":"10765:14:15"},{"hexValue":"436f6e747261637420686173203020555344432e","kind":"string","nodeType":"YulLiteral","src":"10781:22:15","type":"","value":"Contract has 0 USDC."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10758:6:15"},"nodeType":"YulFunctionCall","src":"10758:46:15"},"nodeType":"YulExpressionStatement","src":"10758:46:15"}]},"name":"store_literal_in_memory_9492a9f385a959155fd9b4423d2438daa6931aa4114947339a758d0e394aa707","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10739:6:15","type":""}],"src":"10641:170:15"},{"body":{"nodeType":"YulBlock","src":"10963:220:15","statements":[{"nodeType":"YulAssignment","src":"10973:74:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11039:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11044:2:15","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10980:58:15"},"nodeType":"YulFunctionCall","src":"10980:67:15"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10973:3:15"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11145:3:15"}],"functionName":{"name":"store_literal_in_memory_9492a9f385a959155fd9b4423d2438daa6931aa4114947339a758d0e394aa707","nodeType":"YulIdentifier","src":"11056:88:15"},"nodeType":"YulFunctionCall","src":"11056:93:15"},"nodeType":"YulExpressionStatement","src":"11056:93:15"},{"nodeType":"YulAssignment","src":"11158:19:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11169:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"11174:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11165:3:15"},"nodeType":"YulFunctionCall","src":"11165:12:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11158:3:15"}]}]},"name":"abi_encode_t_stringliteral_9492a9f385a959155fd9b4423d2438daa6931aa4114947339a758d0e394aa707_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10951:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10959:3:15","type":""}],"src":"10817:366:15"},{"body":{"nodeType":"YulBlock","src":"11360:248:15","statements":[{"nodeType":"YulAssignment","src":"11370:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11382:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11393:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11378:3:15"},"nodeType":"YulFunctionCall","src":"11378:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11370:4:15"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11428:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:15"},"nodeType":"YulFunctionCall","src":"11413:17:15"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11436:4:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"11442:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11432:3:15"},"nodeType":"YulFunctionCall","src":"11432:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11406:6:15"},"nodeType":"YulFunctionCall","src":"11406:47:15"},"nodeType":"YulExpressionStatement","src":"11406:47:15"},{"nodeType":"YulAssignment","src":"11462:139:15","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11596:4:15"}],"functionName":{"name":"abi_encode_t_stringliteral_9492a9f385a959155fd9b4423d2438daa6931aa4114947339a758d0e394aa707_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11470:124:15"},"nodeType":"YulFunctionCall","src":"11470:131:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11462:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_9492a9f385a959155fd9b4423d2438daa6931aa4114947339a758d0e394aa707__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11340:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11355:4:15","type":""}],"src":"11189:419:15"},{"body":{"nodeType":"YulBlock","src":"11740:206:15","statements":[{"nodeType":"YulAssignment","src":"11750:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11762:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11773:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11758:3:15"},"nodeType":"YulFunctionCall","src":"11758:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11750:4:15"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11830:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11843:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11854:1:15","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11839:3:15"},"nodeType":"YulFunctionCall","src":"11839:17:15"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11786:43:15"},"nodeType":"YulFunctionCall","src":"11786:71:15"},"nodeType":"YulExpressionStatement","src":"11786:71:15"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11911:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11924:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11935:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11920:3:15"},"nodeType":"YulFunctionCall","src":"11920:18:15"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11867:43:15"},"nodeType":"YulFunctionCall","src":"11867:72:15"},"nodeType":"YulExpressionStatement","src":"11867:72:15"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11704:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11716:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11724:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11735:4:15","type":""}],"src":"11614:332:15"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint32t_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_6156b7478067a806b822f2dac38b378fc08dd0988eb91af8714c555c87825340(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient USDC balance of sen\")\n\n        mstore(add(memPtr, 32), \"der.\")\n\n    }\n\n    function abi_encode_t_stringliteral_6156b7478067a806b822f2dac38b378fc08dd0988eb91af8714c555c87825340_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_6156b7478067a806b822f2dac38b378fc08dd0988eb91af8714c555c87825340(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6156b7478067a806b822f2dac38b378fc08dd0988eb91af8714c555c87825340__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6156b7478067a806b822f2dac38b378fc08dd0988eb91af8714c555c87825340_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_5bee079997ec03d02c333bc7aa74a2c8aad9f558acd5ab4f032e924bd7641300(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient native token for ga\")\n\n        mstore(add(memPtr, 32), \"s inside contract.\")\n\n    }\n\n    function abi_encode_t_stringliteral_5bee079997ec03d02c333bc7aa74a2c8aad9f558acd5ab4f032e924bd7641300_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_5bee079997ec03d02c333bc7aa74a2c8aad9f558acd5ab4f032e924bd7641300(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5bee079997ec03d02c333bc7aa74a2c8aad9f558acd5ab4f032e924bd7641300__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5bee079997ec03d02c333bc7aa74a2c8aad9f558acd5ab4f032e924bd7641300_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint32_t_bytes32_t_uint256__to_t_uint32_t_bytes32_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner can call this fun\")\n\n        mstore(add(memPtr, 32), \"ction\")\n\n    }\n\n    function abi_encode_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8351050d490c2f964a5c9b846a717b6fb712e0fef8f883329c0d18f6cb70985f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract has 0 Native.\")\n\n    }\n\n    function abi_encode_t_stringliteral_8351050d490c2f964a5c9b846a717b6fb712e0fef8f883329c0d18f6cb70985f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_8351050d490c2f964a5c9b846a717b6fb712e0fef8f883329c0d18f6cb70985f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8351050d490c2f964a5c9b846a717b6fb712e0fef8f883329c0d18f6cb70985f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8351050d490c2f964a5c9b846a717b6fb712e0fef8f883329c0d18f6cb70985f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9492a9f385a959155fd9b4423d2438daa6931aa4114947339a758d0e394aa707(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract has 0 USDC.\")\n\n    }\n\n    function abi_encode_t_stringliteral_9492a9f385a959155fd9b4423d2438daa6931aa4114947339a758d0e394aa707_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_9492a9f385a959155fd9b4423d2438daa6931aa4114947339a758d0e394aa707(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9492a9f385a959155fd9b4423d2438daa6931aa4114947339a758d0e394aa707__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9492a9f385a959155fd9b4423d2438daa6931aa4114947339a758d0e394aa707_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100595760003560e01c8063017e46da146100655780632367117c146100a257806350431ce4146100cd5780638da5cb5b146100e4578063d8fc063d1461010f578063e93032091461012657610060565b3661006057005b600080fd5b34801561007157600080fd5b5061008c60048036038101906100879190610a14565b610151565b6040516100999190610a76565b60405180910390f35b3480156100ae57600080fd5b506100b76104bb565b6040516100c49190610ad2565b60405180910390f35b3480156100d957600080fd5b506100e26104e1565b005b3480156100f057600080fd5b506100f96105fd565b6040516101069190610ad2565b60405180910390f35b34801561011b57600080fd5b50610124610623565b005b34801561013257600080fd5b5061013b6108f1565b6040516101489190610ad2565b60405180910390f35b600061015b610917565b81600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016101b79190610ad2565b602060405180830381865afa1580156101d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f89190610b02565b1015610239576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023090610bb2565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161029893929190610be1565b6020604051808303816000875af11580156102b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102db9190610c50565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2ed8c53866040518263ffffffff1660e01b81526004016103399190610c8c565b602060405180830381865afa158015610356573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037a9190610b02565b9050804710156103bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b690610d19565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166381b4e8b4838888886040518563ffffffff1660e01b815260040161042193929190610d39565b60206040518083038185885af115801561043f573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906104649190610d85565b9050848663ffffffff167f3406065a52b000854dbbeef7657250820ef51eff5126a10b91ed56430362699f838760405161049f929190610db2565b60405180910390a380925050506104b461095d565b9392505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610571576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056890610e4d565b60405180910390fd5b600047036105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ab90610eb9565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156105fa573d6000803e3d6000fd5b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106aa90610e4d565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107109190610ad2565b602060405180830381865afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107519190610b02565b03610791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078890610f25565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161084d9190610ad2565b602060405180830381865afa15801561086a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088e9190610b02565b6040518363ffffffff1660e01b81526004016108ab929190610f45565b6020604051808303816000875af11580156108ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ee9190610c50565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260005403610953576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b600080fd5b600063ffffffff82169050919050565b6109858161096c565b811461099057600080fd5b50565b6000813590506109a28161097c565b92915050565b6000819050919050565b6109bb816109a8565b81146109c657600080fd5b50565b6000813590506109d8816109b2565b92915050565b6000819050919050565b6109f1816109de565b81146109fc57600080fd5b50565b600081359050610a0e816109e8565b92915050565b600080600060608486031215610a2d57610a2c610967565b5b6000610a3b86828701610993565b9350506020610a4c868287016109c9565b9250506040610a5d868287016109ff565b9150509250925092565b610a70816109a8565b82525050565b6000602082019050610a8b6000830184610a67565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610abc82610a91565b9050919050565b610acc81610ab1565b82525050565b6000602082019050610ae76000830184610ac3565b92915050565b600081519050610afc816109e8565b92915050565b600060208284031215610b1857610b17610967565b5b6000610b2684828501610aed565b91505092915050565b600082825260208201905092915050565b7f496e73756666696369656e7420555344432062616c616e6365206f662073656e60008201527f6465722e00000000000000000000000000000000000000000000000000000000602082015250565b6000610b9c602483610b2f565b9150610ba782610b40565b604082019050919050565b60006020820190508181036000830152610bcb81610b8f565b9050919050565b610bdb816109de565b82525050565b6000606082019050610bf66000830186610ac3565b610c036020830185610ac3565b610c106040830184610bd2565b949350505050565b60008115159050919050565b610c2d81610c18565b8114610c3857600080fd5b50565b600081519050610c4a81610c24565b92915050565b600060208284031215610c6657610c65610967565b5b6000610c7484828501610c3b565b91505092915050565b610c868161096c565b82525050565b6000602082019050610ca16000830184610c7d565b92915050565b7f496e73756666696369656e74206e617469766520746f6b656e20666f7220676160008201527f7320696e7369646520636f6e74726163742e0000000000000000000000000000602082015250565b6000610d03603283610b2f565b9150610d0e82610ca7565b604082019050919050565b60006020820190508181036000830152610d3281610cf6565b9050919050565b6000606082019050610d4e6000830186610c7d565b610d5b6020830185610a67565b610d686040830184610bd2565b949350505050565b600081519050610d7f816109b2565b92915050565b600060208284031215610d9b57610d9a610967565b5b6000610da984828501610d70565b91505092915050565b6000604082019050610dc76000830185610a67565b610dd46020830184610bd2565b9392505050565b7f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b6000610e37602583610b2f565b9150610e4282610ddb565b604082019050919050565b60006020820190508181036000830152610e6681610e2a565b9050919050565b7f436f6e7472616374206861732030204e61746976652e00000000000000000000600082015250565b6000610ea3601683610b2f565b9150610eae82610e6d565b602082019050919050565b60006020820190508181036000830152610ed281610e96565b9050919050565b7f436f6e747261637420686173203020555344432e000000000000000000000000600082015250565b6000610f0f601483610b2f565b9150610f1a82610ed9565b602082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b6000604082019050610f5a6000830185610ac3565b610f676020830184610bd2565b939250505056fea264697066735822122024c019f48bf9a66da9ed6bab3fdf462e3be0860c3faa79dc71cceb981dddcdb464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x17E46DA EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x2367117C EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x50431CE4 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0xD8FC063D EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xE9303209 EQ PUSH2 0x126 JUMPI PUSH2 0x60 JUMP JUMPDEST CALLDATASIZE PUSH2 0x60 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x87 SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB7 PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE2 PUSH2 0x4E1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF9 PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x623 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x15B PUSH2 0x917 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xB02 JUMP JUMPDEST LT ISZERO PUSH2 0x239 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x230 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF2ED8C53 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x339 SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x356 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0xB02 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81B4E8B4 DUP4 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x421 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x464 SWAP2 SWAP1 PUSH2 0xD85 JUMP JUMPDEST SWAP1 POP DUP5 DUP7 PUSH4 0xFFFFFFFF AND PUSH32 0x3406065A52B000854DBBEEF7657250820EF51EFF5126A10B91ED56430362699F DUP4 DUP8 PUSH1 0x40 MLOAD PUSH2 0x49F SWAP3 SWAP2 SWAP1 PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP3 POP POP POP PUSH2 0x4B4 PUSH2 0x95D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x568 SWAP1 PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SUB PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AB SWAP1 PUSH2 0xEB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AA SWAP1 PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x710 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x72D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x751 SWAP2 SWAP1 PUSH2 0xB02 JUMP JUMPDEST SUB PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x788 SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84D SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x86A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88E SWAP2 SWAP1 PUSH2 0xB02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP3 SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x953 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x985 DUP2 PUSH2 0x96C JUMP JUMPDEST DUP2 EQ PUSH2 0x990 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9A2 DUP2 PUSH2 0x97C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9BB DUP2 PUSH2 0x9A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x9C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9D8 DUP2 PUSH2 0x9B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F1 DUP2 PUSH2 0x9DE JUMP JUMPDEST DUP2 EQ PUSH2 0x9FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA0E DUP2 PUSH2 0x9E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA2D JUMPI PUSH2 0xA2C PUSH2 0x967 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA3B DUP7 DUP3 DUP8 ADD PUSH2 0x993 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xA4C DUP7 DUP3 DUP8 ADD PUSH2 0x9C9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xA5D DUP7 DUP3 DUP8 ADD PUSH2 0x9FF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xA70 DUP2 PUSH2 0x9A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA8B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xABC DUP3 PUSH2 0xA91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xACC DUP2 PUSH2 0xAB1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAE7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xAFC DUP2 PUSH2 0x9E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB18 JUMPI PUSH2 0xB17 PUSH2 0x967 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB26 DUP5 DUP3 DUP6 ADD PUSH2 0xAED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420555344432062616C616E6365206F662073656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6465722E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB9C PUSH1 0x24 DUP4 PUSH2 0xB2F JUMP JUMPDEST SWAP2 POP PUSH2 0xBA7 DUP3 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBCB DUP2 PUSH2 0xB8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBDB DUP2 PUSH2 0x9DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xBF6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0xC03 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0xC10 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBD2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2D DUP2 PUSH2 0xC18 JUMP JUMPDEST DUP2 EQ PUSH2 0xC38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC4A DUP2 PUSH2 0xC24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC66 JUMPI PUSH2 0xC65 PUSH2 0x967 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC74 DUP5 DUP3 DUP6 ADD PUSH2 0xC3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC86 DUP2 PUSH2 0x96C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCA1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206E617469766520746F6B656E20666F72206761 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7320696E7369646520636F6E74726163742E0000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD03 PUSH1 0x32 DUP4 PUSH2 0xB2F JUMP JUMPDEST SWAP2 POP PUSH2 0xD0E DUP3 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD32 DUP2 PUSH2 0xCF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD4E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xC7D JUMP JUMPDEST PUSH2 0xD5B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0xD68 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBD2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD7F DUP2 PUSH2 0x9B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9B JUMPI PUSH2 0xD9A PUSH2 0x967 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDA9 DUP5 DUP3 DUP6 ADD PUSH2 0xD70 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDC7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0xDD4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBD2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6374696F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE37 PUSH1 0x25 DUP4 PUSH2 0xB2F JUMP JUMPDEST SWAP2 POP PUSH2 0xE42 DUP3 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE66 DUP2 PUSH2 0xE2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206861732030204E61746976652E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA3 PUSH1 0x16 DUP4 PUSH2 0xB2F JUMP JUMPDEST SWAP2 POP PUSH2 0xEAE DUP3 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xED2 DUP2 PUSH2 0xE96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E747261637420686173203020555344432E000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x14 DUP4 PUSH2 0xB2F JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xED9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF5A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0xF67 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBD2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xC0 NOT DELEGATECALL DUP12 0xF9 0xA6 PUSH14 0xA9ED6BAB3FDF462E3BE0860C3FAA PUSH26 0xDC71CCEB981DDDCDB464736F6C63430008140033000000000000 ","sourceMap":"1246:2447:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2207:891;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1336:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3374:187;;;;;;;;;;;;;:::i;:::-;;1373:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3130:236;;;;;;;;;;;;;:::i;:::-;;1303:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2207:891;2341:7;2411:21:14;:19;:21::i;:::-;2414:7:13::1;2376:11;;;;;;;;;;;2369:29;;;2399:10;2369:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;2361:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;2480:11;;;;;;;;;;;2473:32;;;2506:10;2526:4;2533:7;2473:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2619:13;2645:15;;;;;;;;;;;2635:42;;;2692:18;2635:86;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2619:102;;2765:5;2740:21;:30;;2732:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;2846:17;2876:15;;;;;;;;;;;2866:41;;;2914:5;2921:18;2941:17;2960:7;2866:102;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2846:122;;3034:17;3014:18;2984:77;;;3003:9;3053:7;2984:77;;;;;;;:::i;:::-;;;;;;;;3081:9;3074:16;;;;2455:20:14::0;:18;:20::i;:::-;2207:891:13;;;;;:::o;1336:30::-;;;;;;;;;;;;;:::o;3374:187::-;3621:5;;;;;;;;;;;3607:19;;:10;:19;;;3599:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;3463:1:::1;3438:21;:26:::0;3430:61:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3510:10;3502:28;;:51;3531:21;3502:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3374:187::o:0;1373:20::-;;;;;;;;;;;;;:::o;3130:236::-;3621:5;;;;;;;;;;;3607:19;;:10;:19;;;3599:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;3240:1:::1;3199:11;;;;;;;;;;;3192:29;;;3230:4;3192:44;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49:::0;3184:82:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3284:11;;;;;;;;;;;3277:28;;;3306:5;;;;;;;;;;;3320:11;;;;;;;;;;;3313:29;;;3351:4;3313:44;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3277:81;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3130:236::o:0;1303:26::-;;;;;;;;;;;;;:::o;2491:315:14:-;1789:1;2620:7;;:18;2616:88;;2662:30;;;;;;;;;;;;;;2616:88;1789:1;2781:7;:17;;;;2491:315::o;2814:212::-;1746:1;2997:7;:21;;;;2814:212::o;88:117:15:-;197:1;194;187:12;334:93;370:7;410:10;403:5;399:22;388:33;;334:93;;;:::o;433:120::-;505:23;522:5;505:23;:::i;:::-;498:5;495:34;485:62;;543:1;540;533:12;485:62;433:120;:::o;559:137::-;604:5;642:6;629:20;620:29;;658:32;684:5;658:32;:::i;:::-;559:137;;;;:::o;702:77::-;739:7;768:5;757:16;;702:77;;;:::o;785:122::-;858:24;876:5;858:24;:::i;:::-;851:5;848:35;838:63;;897:1;894;887:12;838:63;785:122;:::o;913:139::-;959:5;997:6;984:20;975:29;;1013:33;1040:5;1013:33;:::i;:::-;913:139;;;;:::o;1058:77::-;1095:7;1124:5;1113:16;;1058:77;;;:::o;1141:122::-;1214:24;1232:5;1214:24;:::i;:::-;1207:5;1204:35;1194:63;;1253:1;1250;1243:12;1194:63;1141:122;:::o;1269:139::-;1315:5;1353:6;1340:20;1331:29;;1369:33;1396:5;1369:33;:::i;:::-;1269:139;;;;:::o;1414:617::-;1490:6;1498;1506;1555:2;1543:9;1534:7;1530:23;1526:32;1523:119;;;1561:79;;:::i;:::-;1523:119;1681:1;1706:52;1750:7;1741:6;1730:9;1726:22;1706:52;:::i;:::-;1696:62;;1652:116;1807:2;1833:53;1878:7;1869:6;1858:9;1854:22;1833:53;:::i;:::-;1823:63;;1778:118;1935:2;1961:53;2006:7;1997:6;1986:9;1982:22;1961:53;:::i;:::-;1951:63;;1906:118;1414:617;;;;;:::o;2037:118::-;2124:24;2142:5;2124:24;:::i;:::-;2119:3;2112:37;2037:118;;:::o;2161:222::-;2254:4;2292:2;2281:9;2277:18;2269:26;;2305:71;2373:1;2362:9;2358:17;2349:6;2305:71;:::i;:::-;2161:222;;;;:::o;2389:126::-;2426:7;2466:42;2459:5;2455:54;2444:65;;2389:126;;;:::o;2521:96::-;2558:7;2587:24;2605:5;2587:24;:::i;:::-;2576:35;;2521:96;;;:::o;2623:118::-;2710:24;2728:5;2710:24;:::i;:::-;2705:3;2698:37;2623:118;;:::o;2747:222::-;2840:4;2878:2;2867:9;2863:18;2855:26;;2891:71;2959:1;2948:9;2944:17;2935:6;2891:71;:::i;:::-;2747:222;;;;:::o;2975:143::-;3032:5;3063:6;3057:13;3048:22;;3079:33;3106:5;3079:33;:::i;:::-;2975:143;;;;:::o;3124:351::-;3194:6;3243:2;3231:9;3222:7;3218:23;3214:32;3211:119;;;3249:79;;:::i;:::-;3211:119;3369:1;3394:64;3450:7;3441:6;3430:9;3426:22;3394:64;:::i;:::-;3384:74;;3340:128;3124:351;;;;:::o;3481:169::-;3565:11;3599:6;3594:3;3587:19;3639:4;3634:3;3630:14;3615:29;;3481:169;;;;:::o;3656:223::-;3796:34;3792:1;3784:6;3780:14;3773:58;3865:6;3860:2;3852:6;3848:15;3841:31;3656:223;:::o;3885:366::-;4027:3;4048:67;4112:2;4107:3;4048:67;:::i;:::-;4041:74;;4124:93;4213:3;4124:93;:::i;:::-;4242:2;4237:3;4233:12;4226:19;;3885:366;;;:::o;4257:419::-;4423:4;4461:2;4450:9;4446:18;4438:26;;4510:9;4504:4;4500:20;4496:1;4485:9;4481:17;4474:47;4538:131;4664:4;4538:131;:::i;:::-;4530:139;;4257:419;;;:::o;4682:118::-;4769:24;4787:5;4769:24;:::i;:::-;4764:3;4757:37;4682:118;;:::o;4806:442::-;4955:4;4993:2;4982:9;4978:18;4970:26;;5006:71;5074:1;5063:9;5059:17;5050:6;5006:71;:::i;:::-;5087:72;5155:2;5144:9;5140:18;5131:6;5087:72;:::i;:::-;5169;5237:2;5226:9;5222:18;5213:6;5169:72;:::i;:::-;4806:442;;;;;;:::o;5254:90::-;5288:7;5331:5;5324:13;5317:21;5306:32;;5254:90;;;:::o;5350:116::-;5420:21;5435:5;5420:21;:::i;:::-;5413:5;5410:32;5400:60;;5456:1;5453;5446:12;5400:60;5350:116;:::o;5472:137::-;5526:5;5557:6;5551:13;5542:22;;5573:30;5597:5;5573:30;:::i;:::-;5472:137;;;;:::o;5615:345::-;5682:6;5731:2;5719:9;5710:7;5706:23;5702:32;5699:119;;;5737:79;;:::i;:::-;5699:119;5857:1;5882:61;5935:7;5926:6;5915:9;5911:22;5882:61;:::i;:::-;5872:71;;5828:125;5615:345;;;;:::o;5966:115::-;6051:23;6068:5;6051:23;:::i;:::-;6046:3;6039:36;5966:115;;:::o;6087:218::-;6178:4;6216:2;6205:9;6201:18;6193:26;;6229:69;6295:1;6284:9;6280:17;6271:6;6229:69;:::i;:::-;6087:218;;;;:::o;6311:237::-;6451:34;6447:1;6439:6;6435:14;6428:58;6520:20;6515:2;6507:6;6503:15;6496:45;6311:237;:::o;6554:366::-;6696:3;6717:67;6781:2;6776:3;6717:67;:::i;:::-;6710:74;;6793:93;6882:3;6793:93;:::i;:::-;6911:2;6906:3;6902:12;6895:19;;6554:366;;;:::o;6926:419::-;7092:4;7130:2;7119:9;7115:18;7107:26;;7179:9;7173:4;7169:20;7165:1;7154:9;7150:17;7143:47;7207:131;7333:4;7207:131;:::i;:::-;7199:139;;6926:419;;;:::o;7351:438::-;7498:4;7536:2;7525:9;7521:18;7513:26;;7549:69;7615:1;7604:9;7600:17;7591:6;7549:69;:::i;:::-;7628:72;7696:2;7685:9;7681:18;7672:6;7628:72;:::i;:::-;7710;7778:2;7767:9;7763:18;7754:6;7710:72;:::i;:::-;7351:438;;;;;;:::o;7795:143::-;7852:5;7883:6;7877:13;7868:22;;7899:33;7926:5;7899:33;:::i;:::-;7795:143;;;;:::o;7944:351::-;8014:6;8063:2;8051:9;8042:7;8038:23;8034:32;8031:119;;;8069:79;;:::i;:::-;8031:119;8189:1;8214:64;8270:7;8261:6;8250:9;8246:22;8214:64;:::i;:::-;8204:74;;8160:128;7944:351;;;;:::o;8301:332::-;8422:4;8460:2;8449:9;8445:18;8437:26;;8473:71;8541:1;8530:9;8526:17;8517:6;8473:71;:::i;:::-;8554:72;8622:2;8611:9;8607:18;8598:6;8554:72;:::i;:::-;8301:332;;;;;:::o;8639:224::-;8779:34;8775:1;8767:6;8763:14;8756:58;8848:7;8843:2;8835:6;8831:15;8824:32;8639:224;:::o;8869:366::-;9011:3;9032:67;9096:2;9091:3;9032:67;:::i;:::-;9025:74;;9108:93;9197:3;9108:93;:::i;:::-;9226:2;9221:3;9217:12;9210:19;;8869:366;;;:::o;9241:419::-;9407:4;9445:2;9434:9;9430:18;9422:26;;9494:9;9488:4;9484:20;9480:1;9469:9;9465:17;9458:47;9522:131;9648:4;9522:131;:::i;:::-;9514:139;;9241:419;;;:::o;9666:172::-;9806:24;9802:1;9794:6;9790:14;9783:48;9666:172;:::o;9844:366::-;9986:3;10007:67;10071:2;10066:3;10007:67;:::i;:::-;10000:74;;10083:93;10172:3;10083:93;:::i;:::-;10201:2;10196:3;10192:12;10185:19;;9844:366;;;:::o;10216:419::-;10382:4;10420:2;10409:9;10405:18;10397:26;;10469:9;10463:4;10459:20;10455:1;10444:9;10440:17;10433:47;10497:131;10623:4;10497:131;:::i;:::-;10489:139;;10216:419;;;:::o;10641:170::-;10781:22;10777:1;10769:6;10765:14;10758:46;10641:170;:::o;10817:366::-;10959:3;10980:67;11044:2;11039:3;10980:67;:::i;:::-;10973:74;;11056:93;11145:3;11056:93;:::i;:::-;11174:2;11169:3;11165:12;11158:19;;10817:366;;;:::o;11189:419::-;11355:4;11393:2;11382:9;11378:18;11370:26;;11442:9;11436:4;11432:20;11428:1;11417:9;11413:17;11406:47;11470:131;11596:4;11470:131;:::i;:::-;11462:139;;11189:419;;;:::o;11614:332::-;11735:4;11773:2;11762:9;11758:18;11750:26;;11786:71;11854:1;11843:9;11839:17;11830:6;11786:71;:::i;:::-;11867:72;11935:2;11924:9;11920:18;11911:6;11867:72;:::i;:::-;11614:332;;;;;:::o"},"methodIdentifiers":{"HypERC20Address()":"2367117c","USDCAddress()":"e9303209","owner()":"8da5cb5b","transferXchainHypERC20(uint32,bytes32,uint256)":"017e46da","withdrawNative()":"50431ce4","withdrawUSDC()":"d8fc063d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDCAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_HypERC20Address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"destination\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SentTransferRemote\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"HypERC20Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDCAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferXchainHypERC20\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawNative\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HypERC20TransferCengli.sol\":\"HypERC20TransferCengli\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0x5094b17cb46143943f3206d0738b91a05a7005e979681af7210d534cd3e72f54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a55fbc9ee8080ec3b397e8e32e5dafcff2c377ce44d553bfc93dfce1be2d5b12\",\"dweb:/ipfs/QmYSk6bNHnpKRyNWXmEBKbkPxXi7Hco9JZHHyxMdrZGWpb\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"contracts/HypERC20TransferCengli.sol\":{\"keccak256\":\"0x72985fe56c217028a5633b769779b77d9bc85359e484a415da6a6437de8c7ed3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://95bd8ea56dd4d09383a4fcc1bb0bf2b3ec30671ba493a662a87ac0b299f0c261\",\"dweb:/ipfs/QmQvMpzGZZJF3diFG4TvimXYqU74Sy5MgNm1Sbr1i1jfkm\"]},\"library/ReentrancyGuard.sol\":{\"keccak256\":\"0xda059b09cd6e981d06da65bb0363b211f0cf1ae4682b87bb270c54f51609e407\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407679d1b9ed78ebafd5d9406ac551b77033c509f541f42ded02f418536f2375\",\"dweb:/ipfs/QmWT4GQsHTWeuBZSJ3gX8EUz92nr8BFtGhLkZaKNm9nBib\"]}},\"version\":1}"},"IHypERC20":{"abi":[{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"_transferFromSender","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"_transferTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_destinationDomain","type":"uint32"}],"name":"quoteGasPayment","outputs":[{"internalType":"uint256","name":"_gasPayment","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_destinationDomain","type":"uint32"},{"internalType":"bytes32","name":"_recipientAddress","type":"bytes32"},{"internalType":"uint256","name":"_amountOrId","type":"uint256"}],"name":"transferRemote","outputs":[{"internalType":"bytes32","name":"messageId","type":"bytes32"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"_transferFromSender(uint256)":"d215e1cd","_transferTo(address,uint256,bytes)":"6ba0cc29","quoteGasPayment(uint32)":"f2ed8c53","transferRemote(uint32,bytes32,uint256)":"81b4e8b4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"_transferFromSender\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"_transferTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_destinationDomain\",\"type\":\"uint32\"}],\"name\":\"quoteGasPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasPayment\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amountOrId\",\"type\":\"uint256\"}],\"name\":\"transferRemote\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HypERC20TransferCengli.sol\":\"IHypERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0x5094b17cb46143943f3206d0738b91a05a7005e979681af7210d534cd3e72f54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a55fbc9ee8080ec3b397e8e32e5dafcff2c377ce44d553bfc93dfce1be2d5b12\",\"dweb:/ipfs/QmYSk6bNHnpKRyNWXmEBKbkPxXi7Hco9JZHHyxMdrZGWpb\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"contracts/HypERC20TransferCengli.sol\":{\"keccak256\":\"0x72985fe56c217028a5633b769779b77d9bc85359e484a415da6a6437de8c7ed3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://95bd8ea56dd4d09383a4fcc1bb0bf2b3ec30671ba493a662a87ac0b299f0c261\",\"dweb:/ipfs/QmQvMpzGZZJF3diFG4TvimXYqU74Sy5MgNm1Sbr1i1jfkm\"]},\"library/ReentrancyGuard.sol\":{\"keccak256\":\"0xda059b09cd6e981d06da65bb0363b211f0cf1ae4682b87bb270c54f51609e407\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407679d1b9ed78ebafd5d9406ac551b77033c509f541f42ded02f418536f2375\",\"dweb:/ipfs/QmWT4GQsHTWeuBZSJ3gX8EUz92nr8BFtGhLkZaKNm9nBib\"]}},\"version\":1}"},"TokenRouter":{"abi":[{"inputs":[{"internalType":"uint32","name":"_destinationDomain","type":"uint32"}],"name":"quoteGasPayment","outputs":[{"internalType":"uint256","name":"_gasPayment","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_destinationDomain","type":"uint32"},{"internalType":"bytes32","name":"_recipientAddress","type":"bytes32"},{"internalType":"uint256","name":"_amountOrId","type":"uint256"}],"name":"transferRemote","outputs":[{"internalType":"bytes32","name":"messageId","type":"bytes32"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"quoteGasPayment(uint32)":"f2ed8c53","transferRemote(uint32,bytes32,uint256)":"81b4e8b4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_destinationDomain\",\"type\":\"uint32\"}],\"name\":\"quoteGasPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasPayment\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amountOrId\",\"type\":\"uint256\"}],\"name\":\"transferRemote\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HypERC20TransferCengli.sol\":\"TokenRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0x5094b17cb46143943f3206d0738b91a05a7005e979681af7210d534cd3e72f54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a55fbc9ee8080ec3b397e8e32e5dafcff2c377ce44d553bfc93dfce1be2d5b12\",\"dweb:/ipfs/QmYSk6bNHnpKRyNWXmEBKbkPxXi7Hco9JZHHyxMdrZGWpb\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"contracts/HypERC20TransferCengli.sol\":{\"keccak256\":\"0x72985fe56c217028a5633b769779b77d9bc85359e484a415da6a6437de8c7ed3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://95bd8ea56dd4d09383a4fcc1bb0bf2b3ec30671ba493a662a87ac0b299f0c261\",\"dweb:/ipfs/QmQvMpzGZZJF3diFG4TvimXYqU74Sy5MgNm1Sbr1i1jfkm\"]},\"library/ReentrancyGuard.sol\":{\"keccak256\":\"0xda059b09cd6e981d06da65bb0363b211f0cf1ae4682b87bb270c54f51609e407\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407679d1b9ed78ebafd5d9406ac551b77033c509f541f42ded02f418536f2375\",\"dweb:/ipfs/QmWT4GQsHTWeuBZSJ3gX8EUz92nr8BFtGhLkZaKNm9nBib\"]}},\"version\":1}"}},"library/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"library/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"library/ReentrancyGuard.sol\":{\"keccak256\":\"0xda059b09cd6e981d06da65bb0363b211f0cf1ae4682b87bb270c54f51609e407\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407679d1b9ed78ebafd5d9406ac551b77033c509f541f42ded02f418536f2375\",\"dweb:/ipfs/QmWT4GQsHTWeuBZSJ3gX8EUz92nr8BFtGhLkZaKNm9nBib\"]}},\"version\":1}"}}}}}